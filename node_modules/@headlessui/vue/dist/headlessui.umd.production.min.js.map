{"version":3,"file":"headlessui.umd.production.min.js","sources":["../src/utils/match.ts","../src/utils/render.ts","../src/keyboard.ts","../src/hooks/use-id.ts","../src/utils/focus-management.ts","../src/hooks/use-window-event.ts","../src/internal/dom-containers.ts","../src/hooks/use-focus-trap.ts","../src/hooks/use-inert-others.ts","../src/internal/stack-context.ts","../src/internal/portal-force-root.ts","../src/components/portal/portal.ts","../src/components/description/description.ts","../src/utils/dom.ts","../src/internal/open-closed.ts","../src/components/dialog/dialog.ts","../src/components/disclosure/disclosure.ts","../src/hooks/use-resolve-button-type.ts","../src/utils/calculate-active-index.ts","../src/components/listbox/listbox.ts","../src/components/focus-trap/focus-trap.ts","../src/components/menu/menu.ts","../src/hooks/use-tree-walker.ts","../src/components/popover/popover.ts","../src/components/label/label.ts","../src/components/radio-group/radio-group.ts","../src/components/switch/switch.ts","../src/components/tabs/tabs.ts","../src/components/transitions/utils/transition.ts","../src/utils/disposables.ts","../src/utils/once.ts","../src/components/transitions/transition.ts"],"sourcesContent":["export function match<TValue extends string | number = string, TReturnValue = unknown>(\n  value: TValue,\n  lookup: Record<TValue, TReturnValue | ((...args: any[]) => TReturnValue)>,\n  ...args: any[]\n): TReturnValue {\n  if (value in lookup) {\n    let returnValue = lookup[value]\n    return typeof returnValue === 'function' ? returnValue(...args) : returnValue\n  }\n\n  let error = new Error(\n    `Tried to handle \"${value}\" but there is no handler defined. Only defined handlers are: ${Object.keys(\n      lookup\n    )\n      .map(key => `\"${key}\"`)\n      .join(', ')}.`\n  )\n  if (Error.captureStackTrace) Error.captureStackTrace(error, match)\n  throw error\n}\n","import { h, cloneVNode, Slots } from 'vue'\nimport { match } from './match'\n\nexport enum Features {\n  /** No features at all */\n  None = 0,\n\n  /**\n   * When used, this will allow us to use one of the render strategies.\n   *\n   * **The render strategies are:**\n   *    - **Unmount**   _(Will unmount the component.)_\n   *    - **Hidden**    _(Will hide the component using the [hidden] attribute.)_\n   */\n  RenderStrategy = 1,\n\n  /**\n   * When used, this will allow the user of our component to be in control. This can be used when\n   * you want to transition based on some state.\n   */\n  Static = 2,\n}\n\nexport enum RenderStrategy {\n  Unmount,\n  Hidden,\n}\n\nexport function render({\n  visible = true,\n  features = Features.None,\n  ...main\n}: {\n  props: Record<string, any>\n  slot: Record<string, any>\n  attrs: Record<string, any>\n  slots: Slots\n  name: string\n} & {\n  features?: Features\n  visible?: boolean\n}) {\n  // Visible always render\n  if (visible) return _render(main)\n\n  if (features & Features.Static) {\n    // When the `static` prop is passed as `true`, then the user is in control, thus we don't care about anything else\n    if (main.props.static) return _render(main)\n  }\n\n  if (features & Features.RenderStrategy) {\n    let strategy = main.props.unmount ?? true ? RenderStrategy.Unmount : RenderStrategy.Hidden\n\n    return match(strategy, {\n      [RenderStrategy.Unmount]() {\n        return null\n      },\n      [RenderStrategy.Hidden]() {\n        return _render({\n          ...main,\n          props: { ...main.props, hidden: true, style: { display: 'none' } },\n        })\n      },\n    })\n  }\n\n  // No features enabled, just render\n  return _render(main)\n}\n\nfunction _render({\n  props,\n  attrs,\n  slots,\n  slot,\n  name,\n}: {\n  props: Record<string, any>\n  slot: Record<string, any>\n  attrs: Record<string, any>\n  slots: Slots\n  name: string\n}) {\n  let { as, ...passThroughProps } = omit(props, ['unmount', 'static'])\n\n  let children = slots.default?.(slot)\n\n  if (as === 'template') {\n    if (Object.keys(passThroughProps).length > 0 || Object.keys(attrs).length > 0) {\n      let [firstChild, ...other] = children ?? []\n\n      if (!isValidElement(firstChild) || other.length > 0) {\n        throw new Error(\n          [\n            'Passing props on \"template\"!',\n            '',\n            `The current component <${name} /> is rendering a \"template\".`,\n            `However we need to passthrough the following props:`,\n            Object.keys(passThroughProps)\n              .concat(Object.keys(attrs))\n              .map(line => `  - ${line}`)\n              .join('\\n'),\n            '',\n            'You can apply a few solutions:',\n            [\n              'Add an `as=\"...\"` prop, to ensure that we render an actual element instead of a \"template\".',\n              'Render a single element as the child so that we can forward the props onto that element.',\n            ]\n              .map(line => `  - ${line}`)\n              .join('\\n'),\n          ].join('\\n')\n        )\n      }\n\n      return cloneVNode(firstChild, passThroughProps as Record<string, any>)\n    }\n\n    if (Array.isArray(children) && children.length === 1) {\n      return children[0]\n    }\n\n    return children\n  }\n\n  return h(as, passThroughProps, children)\n}\n\nexport function omit<T extends Record<any, any>>(object: T, keysToOmit: string[] = []) {\n  let clone = Object.assign({}, object)\n  for (let key of keysToOmit) {\n    if (key in clone) delete clone[key]\n  }\n  return clone\n}\n\nfunction isValidElement(input: any): boolean {\n  if (input == null) return false // No children\n  if (typeof input.type === 'string') return true // 'div', 'span', ...\n  if (typeof input.type === 'object') return true // Other components\n  if (typeof input.type === 'function') return true // Built-ins like Transition\n  return false // Comments, strings, ...\n}\n","// TODO: This must already exist somewhere, right? ðŸ¤”\n// Ref: https://www.w3.org/TR/uievents-key/#named-key-attribute-values\nexport enum Keys {\n  Space = ' ',\n  Enter = 'Enter',\n  Escape = 'Escape',\n  Backspace = 'Backspace',\n\n  ArrowLeft = 'ArrowLeft',\n  ArrowUp = 'ArrowUp',\n  ArrowRight = 'ArrowRight',\n  ArrowDown = 'ArrowDown',\n\n  Home = 'Home',\n  End = 'End',\n\n  PageUp = 'PageUp',\n  PageDown = 'PageDown',\n\n  Tab = 'Tab',\n}\n","let id = 0\nfunction generateId() {\n  return ++id\n}\n\nexport function useId() {\n  return generateId()\n}\n","import { match } from './match'\n\n// Credit:\n//  - https://stackoverflow.com/a/30753870\nlet focusableSelector = [\n  '[contentEditable=true]',\n  '[tabindex]',\n  'a[href]',\n  'area[href]',\n  'button:not([disabled])',\n  'iframe',\n  'input:not([disabled])',\n  'select:not([disabled])',\n  'textarea:not([disabled])',\n]\n  .map(\n    process.env.NODE_ENV === 'test'\n      ? // TODO: Remove this once JSDOM fixes the issue where an element that is\n        // \"hidden\" can be the document.activeElement, because this is not possible\n        // in real browsers.\n        selector => `${selector}:not([tabindex='-1']):not([style*='display: none'])`\n      : selector => `${selector}:not([tabindex='-1'])`\n  )\n  .join(',')\n\nexport enum Focus {\n  /** Focus the first non-disabled element */\n  First = 1 << 0,\n\n  /** Focus the previous non-disabled element */\n  Previous = 1 << 1,\n\n  /** Focus the next non-disabled element */\n  Next = 1 << 2,\n\n  /** Focus the last non-disabled element */\n  Last = 1 << 3,\n\n  /** Wrap tab around */\n  WrapAround = 1 << 4,\n\n  /** Prevent scrolling the focusable elements into view */\n  NoScroll = 1 << 5,\n}\n\nexport enum FocusResult {\n  Error,\n  Overflow,\n  Success,\n  Underflow,\n}\n\nenum Direction {\n  Previous = -1,\n  Next = 1,\n}\n\nexport function getFocusableElements(container: HTMLElement | null = document.body) {\n  if (container == null) return []\n  return Array.from(container.querySelectorAll<HTMLElement>(focusableSelector))\n}\n\nexport enum FocusableMode {\n  /** The element itself must be focusable. */\n  Strict,\n\n  /** The element should be inside of a focusable element. */\n  Loose,\n}\n\nexport function isFocusableElement(\n  element: HTMLElement,\n  mode: FocusableMode = FocusableMode.Strict\n) {\n  if (element === document.body) return false\n\n  return match(mode, {\n    [FocusableMode.Strict]() {\n      return element.matches(focusableSelector)\n    },\n    [FocusableMode.Loose]() {\n      let next: HTMLElement | null = element\n\n      while (next !== null) {\n        if (next.matches(focusableSelector)) return true\n        next = next.parentElement\n      }\n\n      return false\n    },\n  })\n}\n\nexport function focusElement(element: HTMLElement | null) {\n  element?.focus({ preventScroll: true })\n}\n\nexport function focusIn(container: HTMLElement | HTMLElement[], focus: Focus) {\n  let elements = Array.isArray(container)\n    ? container.slice().sort((a, b) => {\n        let position = a.compareDocumentPosition(b)\n\n        if (position & Node.DOCUMENT_POSITION_FOLLOWING) return -1\n        if (position & Node.DOCUMENT_POSITION_PRECEDING) return 1\n        return 0\n      })\n    : getFocusableElements(container)\n  let active = document.activeElement as HTMLElement\n\n  let direction = (() => {\n    if (focus & (Focus.First | Focus.Next)) return Direction.Next\n    if (focus & (Focus.Previous | Focus.Last)) return Direction.Previous\n\n    throw new Error('Missing Focus.First, Focus.Previous, Focus.Next or Focus.Last')\n  })()\n\n  let startIndex = (() => {\n    if (focus & Focus.First) return 0\n    if (focus & Focus.Previous) return Math.max(0, elements.indexOf(active)) - 1\n    if (focus & Focus.Next) return Math.max(0, elements.indexOf(active)) + 1\n    if (focus & Focus.Last) return elements.length - 1\n\n    throw new Error('Missing Focus.First, Focus.Previous, Focus.Next or Focus.Last')\n  })()\n\n  let focusOptions = focus & Focus.NoScroll ? { preventScroll: true } : {}\n\n  let offset = 0\n  let total = elements.length\n  let next = undefined\n  do {\n    // Guard against infinite loops\n    if (offset >= total || offset + total <= 0) return FocusResult.Error\n\n    let nextIdx = startIndex + offset\n\n    if (focus & Focus.WrapAround) {\n      nextIdx = (nextIdx + total) % total\n    } else {\n      if (nextIdx < 0) return FocusResult.Underflow\n      if (nextIdx >= total) return FocusResult.Overflow\n    }\n\n    next = elements[nextIdx]\n\n    // Try the focus the next element, might not work if it is \"hidden\" to the user.\n    next?.focus(focusOptions)\n\n    // Try the next one in line\n    offset += direction\n  } while (next !== document.activeElement)\n\n  // This is a little weird, but let me try and explain: There are a few scenario's\n  // in chrome for example where a focused `<a>` tag does not get the default focus\n  // styles and sometimes they do. This highly depends on whether you started by\n  // clicking or by using your keyboard. When you programmatically add focus `anchor.focus()`\n  // then the active element (document.activeElement) is this anchor, which is expected.\n  // However in that case the default focus styles are not applied *unless* you\n  // also add this tabindex.\n  if (!next.hasAttribute('tabindex')) next.setAttribute('tabindex', '0')\n\n  return FocusResult.Success\n}\n","import { watchEffect } from 'vue'\n\nexport function useWindowEvent<TType extends keyof WindowEventMap>(\n  type: TType,\n  listener: (this: Window, ev: WindowEventMap[TType]) => any,\n  options?: boolean | AddEventListenerOptions\n) {\n  if (typeof window === 'undefined') return\n\n  watchEffect(onInvalidate => {\n    window.addEventListener(type, listener, options)\n\n    onInvalidate(() => {\n      window.removeEventListener(type, listener, options)\n    })\n  })\n}\n","export function contains(containers: Set<HTMLElement>, element: HTMLElement) {\n  for (let container of containers) {\n    if (container.contains(element)) return true\n  }\n\n  return false\n}\n","import {\n  onUnmounted,\n  onUpdated,\n  ref,\n  watchEffect,\n\n  // Types\n  Ref,\n} from 'vue'\n\nimport { Keys } from '../keyboard'\nimport { focusElement, focusIn, Focus, FocusResult } from '../utils/focus-management'\nimport { useWindowEvent } from '../hooks/use-window-event'\nimport { contains } from '../internal/dom-containers'\n\nexport function useFocusTrap(\n  containers: Ref<Set<HTMLElement>>,\n  enabled: Ref<boolean> = ref(true),\n  options: Ref<{ initialFocus?: HTMLElement | null }> = ref({})\n) {\n  let restoreElement = ref<HTMLElement | null>(\n    typeof window !== 'undefined' ? (document.activeElement as HTMLElement) : null\n  )\n  let previousActiveElement = ref<HTMLElement | null>(null)\n\n  function handleFocus() {\n    if (!enabled.value) return\n    if (containers.value.size !== 1) return\n    let { initialFocus } = options.value\n\n    let activeElement = document.activeElement as HTMLElement\n\n    if (initialFocus) {\n      if (initialFocus === activeElement) {\n        return // Initial focus ref is already the active element\n      }\n    } else if (contains(containers.value, activeElement)) {\n      return // Already focused within Dialog\n    }\n\n    restoreElement.value = activeElement\n\n    // Try to focus the initialFocus ref\n    if (initialFocus) {\n      focusElement(initialFocus)\n    } else {\n      let couldFocus = false\n      for (let container of containers.value) {\n        let result = focusIn(container, Focus.First)\n        if (result === FocusResult.Success) {\n          couldFocus = true\n          break\n        }\n      }\n\n      if (!couldFocus) console.warn('There are no focusable elements inside the <FocusTrap />')\n    }\n\n    previousActiveElement.value = document.activeElement as HTMLElement\n  }\n\n  // Restore when `enabled` becomes false\n  function restore() {\n    focusElement(restoreElement.value)\n    restoreElement.value = null\n    previousActiveElement.value = null\n  }\n\n  // Handle initial focus\n  watchEffect(handleFocus)\n\n  onUpdated(() => {\n    enabled.value ? handleFocus() : restore()\n  })\n  onUnmounted(restore)\n\n  // Handle Tab & Shift+Tab keyboard events\n  useWindowEvent('keydown', event => {\n    if (!enabled.value) return\n    if (event.key !== Keys.Tab) return\n    if (!document.activeElement) return\n    if (containers.value.size !== 1) return\n\n    event.preventDefault()\n\n    for (let element of containers.value) {\n      let result = focusIn(\n        element,\n        (event.shiftKey ? Focus.Previous : Focus.Next) | Focus.WrapAround\n      )\n\n      if (result === FocusResult.Success) {\n        previousActiveElement.value = document.activeElement as HTMLElement\n        break\n      }\n    }\n  })\n\n  // Prevent programmatically escaping\n  useWindowEvent(\n    'focus',\n    event => {\n      if (!enabled.value) return\n      if (containers.value.size !== 1) return\n\n      let previous = previousActiveElement.value\n      if (!previous) return\n\n      let toElement = event.target as HTMLElement | null\n\n      if (toElement && toElement instanceof HTMLElement) {\n        if (!contains(containers.value, toElement)) {\n          event.preventDefault()\n          event.stopPropagation()\n          focusElement(previous)\n        } else {\n          previousActiveElement.value = toElement\n          focusElement(toElement)\n        }\n      } else {\n        focusElement(previousActiveElement.value)\n      }\n    },\n    true\n  )\n}\n","import {\n  ref,\n  watchEffect,\n\n  // Types\n  Ref,\n} from 'vue'\n\n// TODO: Figure out a nice way to attachTo document.body in the tests without automagically inserting a div with data-v-app\nlet CHILDREN_SELECTOR = process.env.NODE_ENV === 'test' ? '[data-v-app=\"\"] > *' : 'body > *'\n\nlet interactables = new Set<HTMLElement>()\nlet originals = new Map<HTMLElement, { 'aria-hidden': string | null; inert: boolean }>()\n\nfunction inert(element: HTMLElement) {\n  element.setAttribute('aria-hidden', 'true')\n  // @ts-expect-error `inert` does not exist on HTMLElement (yet!)\n  element.inert = true\n}\n\nfunction restore(element: HTMLElement) {\n  let original = originals.get(element)\n  if (!original) return\n\n  if (original['aria-hidden'] === null) element.removeAttribute('aria-hidden')\n  else element.setAttribute('aria-hidden', original['aria-hidden'])\n  // @ts-expect-error `inert` does not exist on HTMLElement (yet!)\n  element.inert = original.inert\n}\n\nexport function useInertOthers<TElement extends HTMLElement>(\n  container: Ref<TElement | null>,\n  enabled: Ref<boolean> = ref(true)\n) {\n  watchEffect(onInvalidate => {\n    if (!enabled.value) return\n    if (!container.value) return\n\n    let element = container.value\n\n    // Mark myself as an interactable element\n    interactables.add(element)\n\n    // Restore elements that now contain an interactable child\n    for (let original of originals.keys()) {\n      if (original.contains(element)) {\n        restore(original)\n        originals.delete(original)\n      }\n    }\n\n    // Collect direct children of the body\n    document.querySelectorAll(CHILDREN_SELECTOR).forEach(child => {\n      if (!(child instanceof HTMLElement)) return // Skip non-HTMLElements\n\n      // Skip the interactables, and the parents of the interactables\n      for (let interactable of interactables) {\n        if (child.contains(interactable)) return\n      }\n\n      // Keep track of the elements\n      if (interactables.size === 1) {\n        originals.set(child, {\n          'aria-hidden': child.getAttribute('aria-hidden'),\n          // @ts-expect-error `inert` does not exist on HTMLElement (yet!)\n          inert: child.inert,\n        })\n\n        // Mutate the element\n        inert(child)\n      }\n    })\n\n    onInvalidate(() => {\n      // Inert is disabled on the current element\n      interactables.delete(element)\n\n      // We still have interactable elements, therefore this one and its parent\n      // will become inert as well.\n      if (interactables.size > 0) {\n        // Collect direct children of the body\n        document.querySelectorAll(CHILDREN_SELECTOR).forEach(child => {\n          if (!(child instanceof HTMLElement)) return // Skip non-HTMLElements\n\n          // Skip already inert parents\n          if (originals.has(child)) return\n\n          // Skip the interactables, and the parents of the interactables\n          for (let interactable of interactables) {\n            if (child.contains(interactable)) return\n          }\n\n          originals.set(child, {\n            'aria-hidden': child.getAttribute('aria-hidden'),\n            // @ts-expect-error `inert` does not exist on HTMLElement (yet!)\n            inert: child.inert,\n          })\n\n          // Mutate the element\n          inert(child)\n        })\n      } else {\n        for (let element of originals.keys()) {\n          // Restore\n          restore(element)\n\n          // Cleanup\n          originals.delete(element)\n        }\n      }\n    })\n  })\n}\n","import {\n  inject,\n  provide,\n  watchEffect,\n\n  // Types\n  InjectionKey,\n  Ref,\n} from 'vue'\n\ntype OnUpdate = (message: StackMessage, element: HTMLElement) => void\n\nlet StackContext = Symbol('StackContext') as InjectionKey<OnUpdate>\n\nexport enum StackMessage {\n  AddElement,\n  RemoveElement,\n}\n\nexport function useStackContext() {\n  return inject(StackContext, () => {})\n}\n\nexport function useElemenStack(element: Ref<HTMLElement | null> | null) {\n  let notify = useStackContext()\n\n  watchEffect(onInvalidate => {\n    let domElement = element?.value\n    if (!domElement) return\n\n    notify(StackMessage.AddElement, domElement)\n    onInvalidate(() => notify(StackMessage.RemoveElement, domElement!))\n  })\n}\n\nexport function useStackProvider(onUpdate?: OnUpdate) {\n  let parentUpdate = useStackContext()\n\n  function notify(...args: Parameters<OnUpdate>) {\n    // Notify our layer\n    onUpdate?.(...args)\n\n    // Notify the parent\n    parentUpdate(...args)\n  }\n\n  provide(StackContext, notify)\n}\n","import {\n  defineComponent,\n  inject,\n  provide,\n\n  // Types\n  InjectionKey,\n} from 'vue'\nimport { render } from '../utils/render'\n\nlet ForcePortalRootContext = Symbol('ForcePortalRootContext') as InjectionKey<Boolean>\n\nexport function usePortalRoot() {\n  return inject(ForcePortalRootContext, false)\n}\n\nexport let ForcePortalRoot = defineComponent({\n  name: 'ForcePortalRoot',\n  props: {\n    as: { type: [Object, String], default: 'template' },\n    force: { type: Boolean, default: false },\n  },\n  setup(props, { slots, attrs }) {\n    provide(ForcePortalRootContext, props.force)\n\n    return () => {\n      let { force, ...passThroughProps } = props\n      return render({ props: passThroughProps, slot: {}, slots, attrs, name: 'ForcePortalRoot' })\n    }\n  },\n})\n","import {\n  Teleport,\n  defineComponent,\n  h,\n  inject,\n  onUnmounted,\n  provide,\n  reactive,\n  ref,\n  watchEffect,\n\n  // Types\n  InjectionKey,\n  PropType,\n} from 'vue'\nimport { render } from '../../utils/render'\nimport { useElemenStack, useStackProvider } from '../../internal/stack-context'\nimport { usePortalRoot } from '../../internal/portal-force-root'\n\n// ---\n\nfunction getPortalRoot() {\n  let existingRoot = document.getElementById('headlessui-portal-root')\n  if (existingRoot) return existingRoot\n\n  let root = document.createElement('div')\n  root.setAttribute('id', 'headlessui-portal-root')\n  return document.body.appendChild(root)\n}\n\nexport let Portal = defineComponent({\n  name: 'Portal',\n  props: {\n    as: { type: [Object, String], default: 'div' },\n  },\n  setup(props, { slots, attrs }) {\n    let forcePortalRoot = usePortalRoot()\n    let groupContext = inject(PortalGroupContext, null)\n    let myTarget = ref(\n      forcePortalRoot === true\n        ? getPortalRoot()\n        : groupContext === null\n        ? getPortalRoot()\n        : groupContext.resolveTarget()\n    )\n\n    watchEffect(() => {\n      if (forcePortalRoot) return\n      if (groupContext === null) return\n      myTarget.value = groupContext.resolveTarget()\n    })\n\n    let element = ref(null)\n    useElemenStack(element)\n\n    onUnmounted(() => {\n      let root = document.getElementById('headlessui-portal-root')\n      if (!root) return\n      if (myTarget.value !== root) return\n\n      if (myTarget.value.children.length <= 0) {\n        myTarget.value.parentElement?.removeChild(myTarget.value)\n      }\n    })\n\n    useStackProvider()\n\n    return () => {\n      if (myTarget.value === null) return null\n\n      let propsWeControl = {\n        ref: element,\n      }\n\n      return h(\n        // @ts-expect-error Children can be an object, but TypeScript is not happy\n        // with it. Once this is fixed upstream we can remove this assertion.\n        Teleport,\n        { to: myTarget.value },\n        render({\n          props: { ...props, ...propsWeControl },\n          slot: {},\n          attrs,\n          slots,\n          name: 'Portal',\n        })\n      )\n    }\n  },\n})\n\n// ---\n\nlet PortalGroupContext = Symbol('PortalGroupContext') as InjectionKey<{\n  resolveTarget(): HTMLElement | null\n}>\n\nexport let PortalGroup = defineComponent({\n  name: 'PortalGroup',\n  props: {\n    as: { type: [Object, String], default: 'template' },\n    target: { type: Object as PropType<HTMLElement | null>, default: null },\n  },\n  setup(props, { attrs, slots }) {\n    let api = reactive({\n      resolveTarget() {\n        return props.target\n      },\n    })\n\n    provide(PortalGroupContext, api)\n\n    return () => {\n      let { target: _, ...passThroughProps } = props\n\n      return render({ props: passThroughProps, slot: {}, attrs, slots, name: 'PortalGroup' })\n    }\n  },\n})\n","import {\n  computed,\n  defineComponent,\n  inject,\n  onMounted,\n  onUnmounted,\n  provide,\n  ref,\n  unref,\n\n  // Types\n  ComputedRef,\n  InjectionKey,\n  Ref,\n} from 'vue'\n\nimport { useId } from '../../hooks/use-id'\nimport { render } from '../../utils/render'\n\n// ---\n\nlet DescriptionContext = Symbol('DescriptionContext') as InjectionKey<{\n  register(value: string): () => void\n  slot: Ref<Record<string, any>>\n  name: string\n  props: Record<string, any>\n}>\n\nfunction useDescriptionContext() {\n  let context = inject(DescriptionContext, null)\n  if (context === null) {\n    throw new Error('Missing parent')\n  }\n  return context\n}\n\nexport function useDescriptions({\n  slot = ref({}),\n  name = 'Description',\n  props = {},\n}: {\n  slot?: Ref<Record<string, unknown>>\n  name?: string\n  props?: Record<string, unknown>\n} = {}): ComputedRef<string | undefined> {\n  let descriptionIds = ref<string[]>([])\n\n  function register(value: string) {\n    descriptionIds.value.push(value)\n\n    return () => {\n      let idx = descriptionIds.value.indexOf(value)\n      if (idx === -1) return\n      descriptionIds.value.splice(idx, 1)\n    }\n  }\n\n  provide(DescriptionContext, { register, slot, name, props })\n\n  // The actual id's as string or undefined.\n  return computed(() =>\n    descriptionIds.value.length > 0 ? descriptionIds.value.join(' ') : undefined\n  )\n}\n\n// ---\n\nexport let Description = defineComponent({\n  name: 'Description',\n  props: {\n    as: { type: [Object, String], default: 'p' },\n  },\n  render() {\n    let { name = 'Description', slot = ref({}), props = {} } = this.context\n    let passThroughProps = this.$props\n    let propsWeControl = {\n      ...Object.entries(props).reduce(\n        (acc, [key, value]) => Object.assign(acc, { [key]: unref(value) }),\n        {}\n      ),\n      id: this.id,\n    }\n\n    return render({\n      props: { ...passThroughProps, ...propsWeControl },\n      slot: slot.value,\n      attrs: this.$attrs,\n      slots: this.$slots,\n      name,\n    })\n  },\n  setup() {\n    let context = useDescriptionContext()\n    let id = `headlessui-description-${useId()}`\n\n    onMounted(() => onUnmounted(context.register(id)))\n\n    return { id, context }\n  },\n})\n","import { Ref } from 'vue'\n\nexport function dom<T extends HTMLElement>(ref?: Ref<T | null>): T | null {\n  if (ref == null) return null\n  if (ref.value == null) return null\n  return ((ref as Ref<T & { $el: unknown }>).value.$el ?? ref.value) as T | null\n}\n","import {\n  inject,\n  provide,\n\n  // Types\n  InjectionKey,\n  Ref,\n} from 'vue'\n\nlet Context = Symbol('Context') as InjectionKey<Ref<State>>\n\nexport enum State {\n  Open,\n  Closed,\n}\n\nexport function hasOpenClosed() {\n  return useOpenClosed() !== null\n}\n\nexport function useOpenClosed() {\n  return inject(Context, null)\n}\n\nexport function useOpenClosedProvider(value: Ref<State>) {\n  provide(Context, value)\n}\n","// WAI-ARIA: https://www.w3.org/TR/wai-aria-practices-1.2/#dialog_modal\nimport {\n  computed,\n  defineComponent,\n  h,\n  inject,\n  nextTick,\n  onMounted,\n  onUnmounted,\n  onUpdated,\n  provide,\n  ref,\n  watchEffect,\n\n  // Types\n  InjectionKey,\n  PropType,\n  Ref,\n} from 'vue'\n\nimport { render, Features } from '../../utils/render'\nimport { Keys } from '../../keyboard'\nimport { useId } from '../../hooks/use-id'\nimport { useFocusTrap } from '../../hooks/use-focus-trap'\nimport { useInertOthers } from '../../hooks/use-inert-others'\nimport { contains } from '../../internal/dom-containers'\nimport { useWindowEvent } from '../../hooks/use-window-event'\nimport { Portal, PortalGroup } from '../portal/portal'\nimport { StackMessage, useStackProvider } from '../../internal/stack-context'\nimport { match } from '../../utils/match'\nimport { ForcePortalRoot } from '../../internal/portal-force-root'\nimport { Description, useDescriptions } from '../description/description'\nimport { dom } from '../../utils/dom'\nimport { useOpenClosed, State } from '../../internal/open-closed'\n\nenum DialogStates {\n  Open,\n  Closed,\n}\n\ninterface StateDefinition {\n  dialogState: Ref<DialogStates>\n\n  titleId: Ref<string | null>\n\n  setTitleId(id: string | null): void\n\n  close(): void\n}\n\nlet DialogContext = Symbol('DialogContext') as InjectionKey<StateDefinition>\n\nfunction useDialogContext(component: string) {\n  let context = inject(DialogContext, null)\n  if (context === null) {\n    let err = new Error(`<${component} /> is missing a parent <Dialog /> component.`)\n    if (Error.captureStackTrace) Error.captureStackTrace(err, useDialogContext)\n    throw err\n  }\n  return context\n}\n\n// ---\n\nlet Missing = 'DC8F892D-2EBD-447C-A4C8-A03058436FF4'\n\nexport let Dialog = defineComponent({\n  name: 'Dialog',\n  inheritAttrs: false, // Manually handling this\n  props: {\n    as: { type: [Object, String], default: 'div' },\n    static: { type: Boolean, default: false },\n    unmount: { type: Boolean, default: true },\n    open: { type: [Boolean, String], default: Missing },\n    initialFocus: { type: Object as PropType<HTMLElement | null>, default: null },\n  },\n  emits: { close: (_close: boolean) => true },\n  render() {\n    let propsWeControl = {\n      // Manually passthrough the attributes, because Vue can't automatically pass\n      // it to the underlying div because of all the wrapper components below.\n      ...this.$attrs,\n      ref: 'el',\n      id: this.id,\n      role: 'dialog',\n      'aria-modal': this.dialogState === DialogStates.Open ? true : undefined,\n      'aria-labelledby': this.titleId,\n      'aria-describedby': this.describedby,\n      onClick: this.handleClick,\n    }\n    let { open: _, initialFocus, ...passThroughProps } = this.$props\n\n    let slot = { open: this.dialogState === DialogStates.Open }\n\n    return h(ForcePortalRoot, { force: true }, () =>\n      h(Portal, () =>\n        h(PortalGroup, { target: this.dialogRef }, () =>\n          h(ForcePortalRoot, { force: false }, () =>\n            render({\n              props: { ...passThroughProps, ...propsWeControl },\n              slot,\n              attrs: this.$attrs,\n              slots: this.$slots,\n              visible: this.visible,\n              features: Features.RenderStrategy | Features.Static,\n              name: 'Dialog',\n            })\n          )\n        )\n      )\n    )\n  },\n  setup(props, { emit }) {\n    let containers = ref<Set<HTMLElement>>(new Set())\n\n    let usesOpenClosedState = useOpenClosed()\n    let open = computed(() => {\n      if (props.open === Missing && usesOpenClosedState !== null) {\n        // Update the `open` prop based on the open closed state\n        return match(usesOpenClosedState.value, {\n          [State.Open]: true,\n          [State.Closed]: false,\n        })\n      }\n      return props.open\n    })\n\n    // Validations\n    let hasOpen = props.open !== Missing || usesOpenClosedState !== null\n\n    if (!hasOpen) {\n      throw new Error(`You forgot to provide an \\`open\\` prop to the \\`Dialog\\`.`)\n    }\n\n    if (typeof open.value !== 'boolean') {\n      throw new Error(\n        `You provided an \\`open\\` prop to the \\`Dialog\\`, but the value is not a boolean. Received: ${\n          open.value === Missing ? undefined : props.open\n        }`\n      )\n    }\n\n    let dialogState = computed(() => (props.open ? DialogStates.Open : DialogStates.Closed))\n    let visible = computed(() => {\n      if (usesOpenClosedState !== null) {\n        return usesOpenClosedState.value === State.Open\n      }\n\n      return dialogState.value === DialogStates.Open\n    })\n    let internalDialogRef = ref<HTMLDivElement | null>(null)\n    let enabled = ref(dialogState.value === DialogStates.Open)\n\n    onUpdated(() => {\n      enabled.value = dialogState.value === DialogStates.Open\n    })\n\n    let id = `headlessui-dialog-${useId()}`\n    let focusTrapOptions = computed(() => ({ initialFocus: props.initialFocus }))\n\n    useFocusTrap(containers, enabled, focusTrapOptions)\n    useInertOthers(internalDialogRef, enabled)\n    useStackProvider((message, element) => {\n      return match(message, {\n        [StackMessage.AddElement]() {\n          containers.value.add(element)\n        },\n        [StackMessage.RemoveElement]() {\n          containers.value.delete(element)\n        },\n      })\n    })\n\n    let describedby = useDescriptions({\n      name: 'DialogDescription',\n      slot: computed(() => ({ open: open.value })),\n    })\n\n    let titleId = ref<StateDefinition['titleId']['value']>(null)\n\n    let api = {\n      titleId,\n      dialogState,\n      setTitleId(id: string | null) {\n        if (titleId.value === id) return\n        titleId.value = id\n      },\n      close() {\n        emit('close', false)\n      },\n    }\n\n    provide(DialogContext, api)\n\n    // Handle outside click\n    useWindowEvent('mousedown', event => {\n      let target = event.target as HTMLElement\n\n      if (dialogState.value !== DialogStates.Open) return\n      if (containers.value.size !== 1) return\n      if (contains(containers.value, target)) return\n\n      api.close()\n      nextTick(() => target?.focus())\n    })\n\n    // Handle `Escape` to close\n    useWindowEvent('keydown', event => {\n      if (event.key !== Keys.Escape) return\n      if (dialogState.value !== DialogStates.Open) return\n      if (containers.value.size > 1) return // 1 is myself, otherwise other elements in the Stack\n      event.preventDefault()\n      event.stopPropagation()\n      api.close()\n    })\n\n    // Scroll lock\n    watchEffect(onInvalidate => {\n      if (dialogState.value !== DialogStates.Open) return\n\n      let overflow = document.documentElement.style.overflow\n      let paddingRight = document.documentElement.style.paddingRight\n\n      let scrollbarWidth = window.innerWidth - document.documentElement.clientWidth\n\n      document.documentElement.style.overflow = 'hidden'\n      document.documentElement.style.paddingRight = `${scrollbarWidth}px`\n\n      onInvalidate(() => {\n        document.documentElement.style.overflow = overflow\n        document.documentElement.style.paddingRight = paddingRight\n      })\n    })\n\n    // Trigger close when the FocusTrap gets hidden\n    watchEffect(onInvalidate => {\n      if (dialogState.value !== DialogStates.Open) return\n      let container = dom(internalDialogRef)\n      if (!container) return\n\n      let observer = new IntersectionObserver(entries => {\n        for (let entry of entries) {\n          if (\n            entry.boundingClientRect.x === 0 &&\n            entry.boundingClientRect.y === 0 &&\n            entry.boundingClientRect.width === 0 &&\n            entry.boundingClientRect.height === 0\n          ) {\n            api.close()\n          }\n        }\n      })\n\n      observer.observe(container)\n\n      onInvalidate(() => observer.disconnect())\n    })\n\n    return {\n      id,\n      el: internalDialogRef,\n      dialogRef: internalDialogRef,\n      containers,\n      dialogState,\n      titleId,\n      describedby,\n      visible,\n      open,\n      handleClick(event: MouseEvent) {\n        event.stopPropagation()\n      },\n    }\n  },\n})\n\n// ---\n\nexport let DialogOverlay = defineComponent({\n  name: 'DialogOverlay',\n  props: {\n    as: { type: [Object, String], default: 'div' },\n  },\n  render() {\n    let api = useDialogContext('DialogOverlay')\n    let propsWeControl = {\n      ref: 'el',\n      id: this.id,\n      'aria-hidden': true,\n      onClick: this.handleClick,\n    }\n    let passThroughProps = this.$props\n\n    return render({\n      props: { ...passThroughProps, ...propsWeControl },\n      slot: { open: api.dialogState.value === DialogStates.Open },\n      attrs: this.$attrs,\n      slots: this.$slots,\n      name: 'DialogOverlay',\n    })\n  },\n  setup() {\n    let api = useDialogContext('DialogOverlay')\n    let id = `headlessui-dialog-overlay-${useId()}`\n\n    return {\n      id,\n      handleClick(event: MouseEvent) {\n        if (event.target !== event.currentTarget) return\n        event.preventDefault()\n        event.stopPropagation()\n        api.close()\n      },\n    }\n  },\n})\n\n// ---\n\nexport let DialogTitle = defineComponent({\n  name: 'DialogTitle',\n  props: {\n    as: { type: [Object, String], default: 'h2' },\n  },\n  render() {\n    let api = useDialogContext('DialogTitle')\n    let propsWeControl = { id: this.id }\n    let passThroughProps = this.$props\n\n    return render({\n      props: { ...passThroughProps, ...propsWeControl },\n      slot: { open: api.dialogState.value === DialogStates.Open },\n      attrs: this.$attrs,\n      slots: this.$slots,\n      name: 'DialogTitle',\n    })\n  },\n  setup() {\n    let api = useDialogContext('DialogTitle')\n    let id = `headlessui-dialog-title-${useId()}`\n\n    onMounted(() => {\n      api.setTitleId(id)\n      onUnmounted(() => api.setTitleId(null))\n    })\n\n    return { id }\n  },\n})\n\n// ---\n\nexport let DialogDescription = Description\n","// WAI-ARIA: https://www.w3.org/TR/wai-aria-practices-1.2/#disclosure\nimport {\n  defineComponent,\n  ref,\n  provide,\n  inject,\n  InjectionKey,\n  Ref,\n  computed,\n  watchEffect,\n} from 'vue'\n\nimport { Keys } from '../../keyboard'\nimport { match } from '../../utils/match'\nimport { render, Features } from '../../utils/render'\nimport { useId } from '../../hooks/use-id'\nimport { dom } from '../../utils/dom'\nimport { useOpenClosedProvider, State, useOpenClosed } from '../../internal/open-closed'\nimport { useResolveButtonType } from '../../hooks/use-resolve-button-type'\n\nenum DisclosureStates {\n  Open,\n  Closed,\n}\n\ninterface StateDefinition {\n  // State\n  disclosureState: Ref<DisclosureStates>\n  panel: Ref<HTMLElement | null>\n  panelId: string\n  button: Ref<HTMLButtonElement | null>\n  buttonId: string\n\n  // State mutators\n  toggleDisclosure(): void\n  closeDisclosure(): void\n\n  // Exposed functions\n  close(focusableElement: HTMLElement | Ref<HTMLElement | null>): void\n}\n\nlet DisclosureContext = Symbol('DisclosureContext') as InjectionKey<StateDefinition>\n\nfunction useDisclosureContext(component: string) {\n  let context = inject(DisclosureContext, null)\n\n  if (context === null) {\n    let err = new Error(`<${component} /> is missing a parent <Disclosure /> component.`)\n    if (Error.captureStackTrace) Error.captureStackTrace(err, useDisclosureContext)\n    throw err\n  }\n\n  return context\n}\n\nlet DisclosurePanelContext = Symbol('DisclosurePanelContext') as InjectionKey<string | null>\nfunction useDisclosurePanelContext() {\n  return inject(DisclosurePanelContext, null)\n}\n\n// ---\n\nexport let Disclosure = defineComponent({\n  name: 'Disclosure',\n  props: {\n    as: { type: [Object, String], default: 'template' },\n    defaultOpen: { type: [Boolean], default: false },\n  },\n  setup(props, { slots, attrs }) {\n    let buttonId = `headlessui-disclosure-button-${useId()}`\n    let panelId = `headlessui-disclosure-panel-${useId()}`\n\n    let disclosureState = ref<StateDefinition['disclosureState']['value']>(\n      props.defaultOpen ? DisclosureStates.Open : DisclosureStates.Closed\n    )\n    let panelRef = ref<StateDefinition['panel']['value']>(null)\n    let buttonRef = ref<StateDefinition['button']['value']>(null)\n\n    let api = {\n      buttonId,\n      panelId,\n      disclosureState,\n      panel: panelRef,\n      button: buttonRef,\n      toggleDisclosure() {\n        disclosureState.value = match(disclosureState.value, {\n          [DisclosureStates.Open]: DisclosureStates.Closed,\n          [DisclosureStates.Closed]: DisclosureStates.Open,\n        })\n      },\n      closeDisclosure() {\n        if (disclosureState.value === DisclosureStates.Closed) return\n        disclosureState.value = DisclosureStates.Closed\n      },\n      close(focusableElement: HTMLElement | Ref<HTMLElement | null>) {\n        api.closeDisclosure()\n\n        let restoreElement = (() => {\n          if (!focusableElement) return dom(api.button)\n          if (focusableElement instanceof HTMLElement) return focusableElement\n          if (focusableElement.value instanceof HTMLElement) return dom(focusableElement)\n\n          return dom(api.button)\n        })()\n\n        restoreElement?.focus()\n      },\n    } as StateDefinition\n\n    provide(DisclosureContext, api)\n    useOpenClosedProvider(\n      computed(() => {\n        return match(disclosureState.value, {\n          [DisclosureStates.Open]: State.Open,\n          [DisclosureStates.Closed]: State.Closed,\n        })\n      })\n    )\n\n    return () => {\n      let { defaultOpen: _, ...passThroughProps } = props\n      let slot = { open: disclosureState.value === DisclosureStates.Open, close: api.close }\n      return render({ props: passThroughProps, slot, slots, attrs, name: 'Disclosure' })\n    }\n  },\n})\n\n// ---\n\nexport let DisclosureButton = defineComponent({\n  name: 'DisclosureButton',\n  props: {\n    as: { type: [Object, String], default: 'button' },\n    disabled: { type: [Boolean], default: false },\n  },\n  render() {\n    let api = useDisclosureContext('DisclosureButton')\n\n    let slot = { open: api.disclosureState.value === DisclosureStates.Open }\n    let propsWeControl = this.isWithinPanel\n      ? {\n          ref: 'el',\n          type: this.type,\n          onClick: this.handleClick,\n          onKeydown: this.handleKeyDown,\n        }\n      : {\n          id: this.id,\n          ref: 'el',\n          type: this.type,\n          'aria-expanded': this.$props.disabled\n            ? undefined\n            : api.disclosureState.value === DisclosureStates.Open,\n          'aria-controls': dom(api.panel) ? api.panelId : undefined,\n          disabled: this.$props.disabled ? true : undefined,\n          onClick: this.handleClick,\n          onKeydown: this.handleKeyDown,\n          onKeyup: this.handleKeyUp,\n        }\n\n    return render({\n      props: { ...this.$props, ...propsWeControl },\n      slot,\n      attrs: this.$attrs,\n      slots: this.$slots,\n      name: 'DisclosureButton',\n    })\n  },\n  setup(props, { attrs }) {\n    let api = useDisclosureContext('DisclosureButton')\n\n    let panelContext = useDisclosurePanelContext()\n    let isWithinPanel = panelContext === null ? false : panelContext === api.panelId\n\n    let elementRef = ref(null)\n\n    if (!isWithinPanel) {\n      watchEffect(() => {\n        api.button.value = elementRef.value\n      })\n    }\n\n    return {\n      isWithinPanel,\n      id: api.buttonId,\n      el: elementRef,\n      type: useResolveButtonType(\n        computed(() => ({ as: props.as, type: attrs.type })),\n        elementRef\n      ),\n      handleClick() {\n        if (props.disabled) return\n\n        if (isWithinPanel) {\n          api.toggleDisclosure()\n          dom(api.button)?.focus()\n        } else {\n          api.toggleDisclosure()\n        }\n      },\n      handleKeyDown(event: KeyboardEvent) {\n        if (props.disabled) return\n\n        if (isWithinPanel) {\n          switch (event.key) {\n            case Keys.Space:\n            case Keys.Enter:\n              event.preventDefault()\n              event.stopPropagation()\n              api.toggleDisclosure()\n              dom(api.button)?.focus()\n              break\n          }\n        } else {\n          switch (event.key) {\n            case Keys.Space:\n            case Keys.Enter:\n              event.preventDefault()\n              event.stopPropagation()\n              api.toggleDisclosure()\n              break\n          }\n        }\n      },\n      handleKeyUp(event: KeyboardEvent) {\n        switch (event.key) {\n          case Keys.Space:\n            // Required for firefox, event.preventDefault() in handleKeyDown for\n            // the Space key doesn't cancel the handleKeyUp, which in turn\n            // triggers a *click*.\n            event.preventDefault()\n            break\n        }\n      },\n    }\n  },\n})\n\n// ---\n\nexport let DisclosurePanel = defineComponent({\n  name: 'DisclosurePanel',\n  props: {\n    as: { type: [Object, String], default: 'div' },\n    static: { type: Boolean, default: false },\n    unmount: { type: Boolean, default: true },\n  },\n  render() {\n    let api = useDisclosureContext('DisclosurePanel')\n\n    let slot = { open: api.disclosureState.value === DisclosureStates.Open, close: api.close }\n    let propsWeControl = { id: this.id, ref: 'el' }\n\n    return render({\n      props: { ...this.$props, ...propsWeControl },\n      slot,\n      attrs: this.$attrs,\n      slots: this.$slots,\n      features: Features.RenderStrategy | Features.Static,\n      visible: this.visible,\n      name: 'DisclosurePanel',\n    })\n  },\n  setup() {\n    let api = useDisclosureContext('DisclosurePanel')\n\n    provide(DisclosurePanelContext, api.panelId)\n\n    let usesOpenClosedState = useOpenClosed()\n    let visible = computed(() => {\n      if (usesOpenClosedState !== null) {\n        return usesOpenClosedState.value === State.Open\n      }\n\n      return api.disclosureState.value === DisclosureStates.Open\n    })\n\n    return {\n      id: api.panelId,\n      el: api.panel,\n      visible,\n    }\n  },\n})\n","import { ref, onMounted, watchEffect, Ref } from 'vue'\nimport { dom } from '../utils/dom'\n\nfunction resolveType(type: unknown, as: string | object) {\n  if (type) return type\n\n  let tag = as ?? 'button'\n  if (typeof tag === 'string' && tag.toLowerCase() === 'button') return 'button'\n\n  return undefined\n}\n\nexport function useResolveButtonType(\n  data: Ref<{ as: string | object; type?: unknown }>,\n  refElement: Ref<HTMLElement | null>\n) {\n  let type = ref(resolveType(data.value.type, data.value.as))\n\n  onMounted(() => {\n    type.value = resolveType(data.value.type, data.value.as)\n  })\n\n  watchEffect(() => {\n    if (type.value) return\n    if (!dom(refElement)) return\n\n    if (dom(refElement) instanceof HTMLButtonElement && !dom(refElement)?.hasAttribute('type')) {\n      type.value = 'button'\n    }\n  })\n\n  return type\n}\n","function assertNever(x: never): never {\n  throw new Error('Unexpected object: ' + x)\n}\n\nexport enum Focus {\n  /** Focus the first non-disabled item. */\n  First,\n\n  /** Focus the previous non-disabled item. */\n  Previous,\n\n  /** Focus the next non-disabled item. */\n  Next,\n\n  /** Focus the last non-disabled item. */\n  Last,\n\n  /** Focus a specific item based on the `id` of the item. */\n  Specific,\n\n  /** Focus no items at all. */\n  Nothing,\n}\n\nexport function calculateActiveIndex<TItem>(\n  action: { focus: Focus.Specific; id: string } | { focus: Exclude<Focus, Focus.Specific> },\n  resolvers: {\n    resolveItems(): TItem[]\n    resolveActiveIndex(): number | null\n    resolveId(item: TItem): string\n    resolveDisabled(item: TItem): boolean\n  }\n) {\n  let items = resolvers.resolveItems()\n  if (items.length <= 0) return null\n\n  let currentActiveIndex = resolvers.resolveActiveIndex()\n  let activeIndex = currentActiveIndex ?? -1\n\n  let nextActiveIndex = (() => {\n    switch (action.focus) {\n      case Focus.First:\n        return items.findIndex(item => !resolvers.resolveDisabled(item))\n\n      case Focus.Previous: {\n        let idx = items\n          .slice()\n          .reverse()\n          .findIndex((item, idx, all) => {\n            if (activeIndex !== -1 && all.length - idx - 1 >= activeIndex) return false\n            return !resolvers.resolveDisabled(item)\n          })\n        if (idx === -1) return idx\n        return items.length - 1 - idx\n      }\n\n      case Focus.Next:\n        return items.findIndex((item, idx) => {\n          if (idx <= activeIndex) return false\n          return !resolvers.resolveDisabled(item)\n        })\n\n      case Focus.Last: {\n        let idx = items\n          .slice()\n          .reverse()\n          .findIndex(item => !resolvers.resolveDisabled(item))\n        if (idx === -1) return idx\n        return items.length - 1 - idx\n      }\n\n      case Focus.Specific:\n        return items.findIndex(item => resolvers.resolveId(item) === action.id)\n\n      case Focus.Nothing:\n        return null\n\n      default:\n        assertNever(action)\n    }\n  })()\n\n  return nextActiveIndex === -1 ? currentActiveIndex : nextActiveIndex\n}\n","import {\n  defineComponent,\n  ref,\n  provide,\n  inject,\n  onMounted,\n  onUnmounted,\n  computed,\n  nextTick,\n  InjectionKey,\n  Ref,\n  ComputedRef,\n  watchEffect,\n  toRaw,\n  watch,\n} from 'vue'\n\nimport { Features, render, omit } from '../../utils/render'\nimport { useId } from '../../hooks/use-id'\nimport { Keys } from '../../keyboard'\nimport { calculateActiveIndex, Focus } from '../../utils/calculate-active-index'\nimport { dom } from '../../utils/dom'\nimport { useWindowEvent } from '../../hooks/use-window-event'\nimport { useOpenClosed, State, useOpenClosedProvider } from '../../internal/open-closed'\nimport { match } from '../../utils/match'\nimport { useResolveButtonType } from '../../hooks/use-resolve-button-type'\n\nenum ListboxStates {\n  Open,\n  Closed,\n}\n\nfunction nextFrame(cb: () => void) {\n  requestAnimationFrame(() => requestAnimationFrame(cb))\n}\n\ntype ListboxOptionDataRef = Ref<{ textValue: string; disabled: boolean; value: unknown }>\ntype StateDefinition = {\n  // State\n  listboxState: Ref<ListboxStates>\n  value: ComputedRef<unknown>\n  orientation: Ref<'vertical' | 'horizontal'>\n\n  labelRef: Ref<HTMLLabelElement | null>\n  buttonRef: Ref<HTMLButtonElement | null>\n  optionsRef: Ref<HTMLDivElement | null>\n\n  disabled: Ref<boolean>\n  options: Ref<{ id: string; dataRef: ListboxOptionDataRef }[]>\n  searchQuery: Ref<string>\n  activeOptionIndex: Ref<number | null>\n\n  // State mutators\n  closeListbox(): void\n  openListbox(): void\n  goToOption(focus: Focus, id?: string): void\n  search(value: string): void\n  clearSearch(): void\n  registerOption(id: string, dataRef: ListboxOptionDataRef): void\n  unregisterOption(id: string): void\n  select(value: unknown): void\n}\n\nlet ListboxContext = Symbol('ListboxContext') as InjectionKey<StateDefinition>\n\nfunction useListboxContext(component: string) {\n  let context = inject(ListboxContext, null)\n\n  if (context === null) {\n    let err = new Error(`<${component} /> is missing a parent <Listbox /> component.`)\n    if (Error.captureStackTrace) Error.captureStackTrace(err, useListboxContext)\n    throw err\n  }\n\n  return context\n}\n\n// ---\n\nexport let Listbox = defineComponent({\n  name: 'Listbox',\n  emits: { 'update:modelValue': (_value: any) => true },\n  props: {\n    as: { type: [Object, String], default: 'template' },\n    disabled: { type: [Boolean], default: false },\n    horizontal: { type: [Boolean], default: false },\n    modelValue: { type: [Object, String, Number, Boolean] },\n  },\n  setup(props, { slots, attrs, emit }) {\n    let listboxState = ref<StateDefinition['listboxState']['value']>(ListboxStates.Closed)\n    let labelRef = ref<StateDefinition['labelRef']['value']>(null)\n    let buttonRef = ref<StateDefinition['buttonRef']['value']>(null)\n    let optionsRef = ref<StateDefinition['optionsRef']['value']>(null)\n    let options = ref<StateDefinition['options']['value']>([])\n    let searchQuery = ref<StateDefinition['searchQuery']['value']>('')\n    let activeOptionIndex = ref<StateDefinition['activeOptionIndex']['value']>(null)\n\n    let value = computed(() => props.modelValue)\n\n    let api = {\n      listboxState,\n      value,\n      orientation: computed(() => (props.horizontal ? 'horizontal' : 'vertical')),\n      labelRef,\n      buttonRef,\n      optionsRef,\n      disabled: computed(() => props.disabled),\n      options,\n      searchQuery,\n      activeOptionIndex,\n      closeListbox() {\n        if (props.disabled) return\n        if (listboxState.value === ListboxStates.Closed) return\n        listboxState.value = ListboxStates.Closed\n        activeOptionIndex.value = null\n      },\n      openListbox() {\n        if (props.disabled) return\n        if (listboxState.value === ListboxStates.Open) return\n        listboxState.value = ListboxStates.Open\n      },\n      goToOption(focus: Focus, id?: string) {\n        if (props.disabled) return\n        if (listboxState.value === ListboxStates.Closed) return\n\n        let nextActiveOptionIndex = calculateActiveIndex(\n          focus === Focus.Specific\n            ? { focus: Focus.Specific, id: id! }\n            : { focus: focus as Exclude<Focus, Focus.Specific> },\n          {\n            resolveItems: () => options.value,\n            resolveActiveIndex: () => activeOptionIndex.value,\n            resolveId: option => option.id,\n            resolveDisabled: option => option.dataRef.disabled,\n          }\n        )\n\n        if (searchQuery.value === '' && activeOptionIndex.value === nextActiveOptionIndex) return\n        searchQuery.value = ''\n        activeOptionIndex.value = nextActiveOptionIndex\n      },\n      search(value: string) {\n        if (props.disabled) return\n        if (listboxState.value === ListboxStates.Closed) return\n\n        searchQuery.value += value.toLowerCase()\n\n        let match = options.value.findIndex(\n          option =>\n            !option.dataRef.disabled && option.dataRef.textValue.startsWith(searchQuery.value)\n        )\n\n        if (match === -1 || match === activeOptionIndex.value) return\n        activeOptionIndex.value = match\n      },\n      clearSearch() {\n        if (props.disabled) return\n        if (listboxState.value === ListboxStates.Closed) return\n        if (searchQuery.value === '') return\n\n        searchQuery.value = ''\n      },\n      registerOption(id: string, dataRef: ListboxOptionDataRef) {\n        // @ts-expect-error The expected type comes from property 'dataRef' which is declared here on type '{ id: string; dataRef: { textValue: string; disabled: boolean; }; }'\n        options.value.push({ id, dataRef })\n      },\n      unregisterOption(id: string) {\n        let nextOptions = options.value.slice()\n        let currentActiveOption =\n          activeOptionIndex.value !== null ? nextOptions[activeOptionIndex.value] : null\n        let idx = nextOptions.findIndex(a => a.id === id)\n        if (idx !== -1) nextOptions.splice(idx, 1)\n        options.value = nextOptions\n        activeOptionIndex.value = (() => {\n          if (idx === activeOptionIndex.value) return null\n          if (currentActiveOption === null) return null\n\n          // If we removed the option before the actual active index, then it would be out of sync. To\n          // fix this, we will find the correct (new) index position.\n          return nextOptions.indexOf(currentActiveOption)\n        })()\n      },\n      select(value: unknown) {\n        if (props.disabled) return\n        emit('update:modelValue', value)\n      },\n    }\n\n    useWindowEvent('mousedown', event => {\n      let target = event.target as HTMLElement\n      let active = document.activeElement\n\n      if (listboxState.value !== ListboxStates.Open) return\n      if (dom(buttonRef)?.contains(target)) return\n\n      if (!dom(optionsRef)?.contains(target)) api.closeListbox()\n      if (active !== document.body && active?.contains(target)) return // Keep focus on newly clicked/focused element\n      if (!event.defaultPrevented) dom(buttonRef)?.focus({ preventScroll: true })\n    })\n\n    // @ts-expect-error Types of property 'dataRef' are incompatible.\n    provide(ListboxContext, api)\n    useOpenClosedProvider(\n      computed(() =>\n        match(listboxState.value, {\n          [ListboxStates.Open]: State.Open,\n          [ListboxStates.Closed]: State.Closed,\n        })\n      )\n    )\n\n    return () => {\n      let slot = { open: listboxState.value === ListboxStates.Open, disabled: props.disabled }\n      return render({\n        props: omit(props, ['modelValue', 'onUpdate:modelValue', 'disabled', 'horizontal']),\n        slot,\n        slots,\n        attrs,\n        name: 'Listbox',\n      })\n    }\n  },\n})\n\n// ---\n\nexport let ListboxLabel = defineComponent({\n  name: 'ListboxLabel',\n  props: { as: { type: [Object, String], default: 'label' } },\n  render() {\n    let api = useListboxContext('ListboxLabel')\n\n    let slot = { open: api.listboxState.value === ListboxStates.Open, disabled: api.disabled.value }\n    let propsWeControl = { id: this.id, ref: 'el', onClick: this.handleClick }\n\n    return render({\n      props: { ...this.$props, ...propsWeControl },\n      slot,\n      attrs: this.$attrs,\n      slots: this.$slots,\n      name: 'ListboxLabel',\n    })\n  },\n  setup() {\n    let api = useListboxContext('ListboxLabel')\n    let id = `headlessui-listbox-label-${useId()}`\n\n    return {\n      id,\n      el: api.labelRef,\n      handleClick() {\n        dom(api.buttonRef)?.focus({ preventScroll: true })\n      },\n    }\n  },\n})\n\n// ---\n\nexport let ListboxButton = defineComponent({\n  name: 'ListboxButton',\n  props: {\n    as: { type: [Object, String], default: 'button' },\n  },\n  render() {\n    let api = useListboxContext('ListboxButton')\n\n    let slot = { open: api.listboxState.value === ListboxStates.Open, disabled: api.disabled.value }\n    let propsWeControl = {\n      ref: 'el',\n      id: this.id,\n      type: this.type,\n      'aria-haspopup': true,\n      'aria-controls': dom(api.optionsRef)?.id,\n      'aria-expanded': api.disabled.value\n        ? undefined\n        : api.listboxState.value === ListboxStates.Open,\n      'aria-labelledby': api.labelRef.value\n        ? [dom(api.labelRef)?.id, this.id].join(' ')\n        : undefined,\n      disabled: api.disabled.value === true ? true : undefined,\n      onKeydown: this.handleKeyDown,\n      onKeyup: this.handleKeyUp,\n      onClick: this.handleClick,\n    }\n\n    return render({\n      props: { ...this.$props, ...propsWeControl },\n      slot,\n      attrs: this.$attrs,\n      slots: this.$slots,\n      name: 'ListboxButton',\n    })\n  },\n  setup(props, { attrs }) {\n    let api = useListboxContext('ListboxButton')\n    let id = `headlessui-listbox-button-${useId()}`\n\n    function handleKeyDown(event: KeyboardEvent) {\n      switch (event.key) {\n        // Ref: https://www.w3.org/TR/wai-aria-practices-1.2/#keyboard-interaction-13\n\n        case Keys.Space:\n        case Keys.Enter:\n        case Keys.ArrowDown:\n          event.preventDefault()\n          api.openListbox()\n          nextTick(() => {\n            dom(api.optionsRef)?.focus({ preventScroll: true })\n            if (!api.value.value) api.goToOption(Focus.First)\n          })\n          break\n\n        case Keys.ArrowUp:\n          event.preventDefault()\n          api.openListbox()\n          nextTick(() => {\n            dom(api.optionsRef)?.focus({ preventScroll: true })\n            if (!api.value.value) api.goToOption(Focus.Last)\n          })\n          break\n      }\n    }\n\n    function handleKeyUp(event: KeyboardEvent) {\n      switch (event.key) {\n        case Keys.Space:\n          // Required for firefox, event.preventDefault() in handleKeyDown for\n          // the Space key doesn't cancel the handleKeyUp, which in turn\n          // triggers a *click*.\n          event.preventDefault()\n          break\n      }\n    }\n\n    function handleClick(event: MouseEvent) {\n      if (api.disabled.value) return\n      if (api.listboxState.value === ListboxStates.Open) {\n        api.closeListbox()\n        nextTick(() => dom(api.buttonRef)?.focus({ preventScroll: true }))\n      } else {\n        event.preventDefault()\n        api.openListbox()\n        nextFrame(() => dom(api.optionsRef)?.focus({ preventScroll: true }))\n      }\n    }\n\n    return {\n      id,\n      el: api.buttonRef,\n      type: useResolveButtonType(\n        computed(() => ({ as: props.as, type: attrs.type })),\n        api.buttonRef\n      ),\n      handleKeyDown,\n      handleKeyUp,\n      handleClick,\n    }\n  },\n})\n\n// ---\n\nexport let ListboxOptions = defineComponent({\n  name: 'ListboxOptions',\n  props: {\n    as: { type: [Object, String], default: 'ul' },\n    static: { type: Boolean, default: false },\n    unmount: { type: Boolean, default: true },\n  },\n  render() {\n    let api = useListboxContext('ListboxOptions')\n\n    let slot = { open: api.listboxState.value === ListboxStates.Open }\n    let propsWeControl = {\n      'aria-activedescendant':\n        api.activeOptionIndex.value === null\n          ? undefined\n          : api.options.value[api.activeOptionIndex.value]?.id,\n      'aria-labelledby': dom(api.labelRef)?.id ?? dom(api.buttonRef)?.id,\n      'aria-orientation': api.orientation.value,\n      id: this.id,\n      onKeydown: this.handleKeyDown,\n      role: 'listbox',\n      tabIndex: 0,\n      ref: 'el',\n    }\n    let passThroughProps = this.$props\n\n    return render({\n      props: { ...passThroughProps, ...propsWeControl },\n      slot,\n      attrs: this.$attrs,\n      slots: this.$slots,\n      features: Features.RenderStrategy | Features.Static,\n      visible: this.visible,\n      name: 'ListboxOptions',\n    })\n  },\n  setup() {\n    let api = useListboxContext('ListboxOptions')\n    let id = `headlessui-listbox-options-${useId()}`\n    let searchDebounce = ref<ReturnType<typeof setTimeout> | null>(null)\n\n    function handleKeyDown(event: KeyboardEvent) {\n      if (searchDebounce.value) clearTimeout(searchDebounce.value)\n\n      switch (event.key) {\n        // Ref: https://www.w3.org/TR/wai-aria-practices-1.2/#keyboard-interaction-12\n\n        // @ts-expect-error Fallthrough is expected here\n        case Keys.Space:\n          if (api.searchQuery.value !== '') {\n            event.preventDefault()\n            event.stopPropagation()\n            return api.search(event.key)\n          }\n        // When in type ahead mode, fallthrough\n        case Keys.Enter:\n          event.preventDefault()\n          event.stopPropagation()\n          if (api.activeOptionIndex.value !== null) {\n            let { dataRef } = api.options.value[api.activeOptionIndex.value]\n            api.select(dataRef.value)\n          }\n          api.closeListbox()\n          nextTick(() => dom(api.buttonRef)?.focus({ preventScroll: true }))\n          break\n\n        case match(api.orientation.value, {\n          vertical: Keys.ArrowDown,\n          horizontal: Keys.ArrowRight,\n        }):\n          event.preventDefault()\n          event.stopPropagation()\n          return api.goToOption(Focus.Next)\n\n        case match(api.orientation.value, { vertical: Keys.ArrowUp, horizontal: Keys.ArrowLeft }):\n          event.preventDefault()\n          event.stopPropagation()\n          return api.goToOption(Focus.Previous)\n\n        case Keys.Home:\n        case Keys.PageUp:\n          event.preventDefault()\n          event.stopPropagation()\n          return api.goToOption(Focus.First)\n\n        case Keys.End:\n        case Keys.PageDown:\n          event.preventDefault()\n          event.stopPropagation()\n          return api.goToOption(Focus.Last)\n\n        case Keys.Escape:\n          event.preventDefault()\n          event.stopPropagation()\n          api.closeListbox()\n          nextTick(() => dom(api.buttonRef)?.focus({ preventScroll: true }))\n          break\n\n        case Keys.Tab:\n          event.preventDefault()\n          event.stopPropagation()\n          break\n\n        default:\n          if (event.key.length === 1) {\n            api.search(event.key)\n            searchDebounce.value = setTimeout(() => api.clearSearch(), 350)\n          }\n          break\n      }\n    }\n\n    let usesOpenClosedState = useOpenClosed()\n    let visible = computed(() => {\n      if (usesOpenClosedState !== null) {\n        return usesOpenClosedState.value === State.Open\n      }\n\n      return api.listboxState.value === ListboxStates.Open\n    })\n\n    return { id, el: api.optionsRef, handleKeyDown, visible }\n  },\n})\n\nexport let ListboxOption = defineComponent({\n  name: 'ListboxOption',\n  props: {\n    as: { type: [Object, String], default: 'li' },\n    value: { type: [Object, String, Number, Boolean] },\n    disabled: { type: Boolean, default: false },\n  },\n  setup(props, { slots, attrs }) {\n    let api = useListboxContext('ListboxOption')\n    let id = `headlessui-listbox-option-${useId()}`\n\n    let active = computed(() => {\n      return api.activeOptionIndex.value !== null\n        ? api.options.value[api.activeOptionIndex.value].id === id\n        : false\n    })\n\n    let selected = computed(() => toRaw(api.value.value) === toRaw(props.value))\n\n    let dataRef = ref<ListboxOptionDataRef['value']>({\n      disabled: props.disabled,\n      value: props.value,\n      textValue: '',\n    })\n    onMounted(() => {\n      let textValue = document\n        .getElementById(id)\n        ?.textContent?.toLowerCase()\n        .trim()\n      if (textValue !== undefined) dataRef.value.textValue = textValue\n    })\n\n    onMounted(() => api.registerOption(id, dataRef))\n    onUnmounted(() => api.unregisterOption(id))\n\n    onMounted(() => {\n      watch(\n        [api.listboxState, selected],\n        () => {\n          if (api.listboxState.value !== ListboxStates.Open) return\n          if (!selected.value) return\n          api.goToOption(Focus.Specific, id)\n          document.getElementById(id)?.focus?.()\n        },\n        { immediate: true }\n      )\n    })\n\n    watchEffect(() => {\n      if (api.listboxState.value !== ListboxStates.Open) return\n      if (!active.value) return\n      nextTick(() => document.getElementById(id)?.scrollIntoView?.({ block: 'nearest' }))\n    })\n\n    function handleClick(event: MouseEvent) {\n      if (props.disabled) return event.preventDefault()\n      api.select(props.value)\n      api.closeListbox()\n      nextTick(() => dom(api.buttonRef)?.focus({ preventScroll: true }))\n    }\n\n    function handleFocus() {\n      if (props.disabled) return api.goToOption(Focus.Nothing)\n      api.goToOption(Focus.Specific, id)\n    }\n\n    function handleMove() {\n      if (props.disabled) return\n      if (active.value) return\n      api.goToOption(Focus.Specific, id)\n    }\n\n    function handleLeave() {\n      if (props.disabled) return\n      if (!active.value) return\n      api.goToOption(Focus.Nothing)\n    }\n\n    return () => {\n      let { disabled } = props\n      let slot = { active: active.value, selected: selected.value, disabled }\n      let propsWeControl = {\n        id,\n        role: 'option',\n        tabIndex: disabled === true ? undefined : -1,\n        'aria-disabled': disabled === true ? true : undefined,\n        'aria-selected': selected.value === true ? selected.value : undefined,\n        disabled: undefined, // Never forward the `disabled` prop\n        onClick: handleClick,\n        onFocus: handleFocus,\n        onPointermove: handleMove,\n        onMousemove: handleMove,\n        onPointerleave: handleLeave,\n        onMouseleave: handleLeave,\n      }\n\n      return render({\n        props: { ...props, ...propsWeControl },\n        slot,\n        attrs,\n        slots,\n        name: 'ListboxOption',\n      })\n    }\n  },\n})\n","import {\n  computed,\n  defineComponent,\n  onMounted,\n  onUnmounted,\n  ref,\n\n  // Types\n  PropType,\n} from 'vue'\nimport { render } from '../../utils/render'\nimport { useFocusTrap } from '../../hooks/use-focus-trap'\n\nexport let FocusTrap = defineComponent({\n  name: 'FocusTrap',\n  props: {\n    as: { type: [Object, String], default: 'div' },\n    initialFocus: { type: Object as PropType<HTMLElement | null>, default: null },\n  },\n  render() {\n    let slot = {}\n    let propsWeControl = { ref: 'el' }\n    let { initialFocus, ...passThroughProps } = this.$props\n\n    return render({\n      props: { ...passThroughProps, ...propsWeControl },\n      slot,\n      attrs: this.$attrs,\n      slots: this.$slots,\n      name: 'FocusTrap',\n    })\n  },\n  setup(props) {\n    let containers = ref(new Set<HTMLElement>())\n    let container = ref<HTMLElement | null>(null)\n    let enabled = ref(true)\n    let focusTrapOptions = computed(() => ({ initialFocus: props.initialFocus }))\n\n    onMounted(() => {\n      if (!container.value) return\n      containers.value.add(container.value)\n\n      useFocusTrap(containers, enabled, focusTrapOptions)\n    })\n\n    onUnmounted(() => {\n      enabled.value = false\n    })\n\n    return { el: container }\n  },\n})\n","import {\n  defineComponent,\n  ref,\n  provide,\n  inject,\n  onMounted,\n  onUnmounted,\n  computed,\n  nextTick,\n  InjectionKey,\n  Ref,\n  watchEffect,\n} from 'vue'\nimport { Features, render } from '../../utils/render'\nimport { useId } from '../../hooks/use-id'\nimport { Keys } from '../../keyboard'\nimport { Focus, calculateActiveIndex } from '../../utils/calculate-active-index'\nimport { dom } from '../../utils/dom'\nimport { useWindowEvent } from '../../hooks/use-window-event'\nimport { useTreeWalker } from '../../hooks/use-tree-walker'\nimport { useOpenClosedProvider, State, useOpenClosed } from '../../internal/open-closed'\nimport { match } from '../../utils/match'\nimport { useResolveButtonType } from '../../hooks/use-resolve-button-type'\n\nenum MenuStates {\n  Open,\n  Closed,\n}\n\nfunction nextFrame(cb: () => void) {\n  requestAnimationFrame(() => requestAnimationFrame(cb))\n}\n\ntype MenuItemDataRef = Ref<{ textValue: string; disabled: boolean }>\ntype StateDefinition = {\n  // State\n  menuState: Ref<MenuStates>\n  buttonRef: Ref<HTMLButtonElement | null>\n  itemsRef: Ref<HTMLDivElement | null>\n  items: Ref<{ id: string; dataRef: MenuItemDataRef }[]>\n  searchQuery: Ref<string>\n  activeItemIndex: Ref<number | null>\n\n  // State mutators\n  closeMenu(): void\n  openMenu(): void\n  goToItem(focus: Focus, id?: string): void\n  search(value: string): void\n  clearSearch(): void\n  registerItem(id: string, dataRef: MenuItemDataRef): void\n  unregisterItem(id: string): void\n}\n\nlet MenuContext = Symbol('MenuContext') as InjectionKey<StateDefinition>\n\nfunction useMenuContext(component: string) {\n  let context = inject(MenuContext, null)\n\n  if (context === null) {\n    let err = new Error(`<${component} /> is missing a parent <Menu /> component.`)\n    if (Error.captureStackTrace) Error.captureStackTrace(err, useMenuContext)\n    throw err\n  }\n\n  return context\n}\n\nexport let Menu = defineComponent({\n  name: 'Menu',\n  props: { as: { type: [Object, String], default: 'template' } },\n  setup(props, { slots, attrs }) {\n    let menuState = ref<StateDefinition['menuState']['value']>(MenuStates.Closed)\n    let buttonRef = ref<StateDefinition['buttonRef']['value']>(null)\n    let itemsRef = ref<StateDefinition['itemsRef']['value']>(null)\n    let items = ref<StateDefinition['items']['value']>([])\n    let searchQuery = ref<StateDefinition['searchQuery']['value']>('')\n    let activeItemIndex = ref<StateDefinition['activeItemIndex']['value']>(null)\n\n    let api = {\n      menuState,\n      buttonRef,\n      itemsRef,\n      items,\n      searchQuery,\n      activeItemIndex,\n      closeMenu: () => {\n        menuState.value = MenuStates.Closed\n        activeItemIndex.value = null\n      },\n      openMenu: () => (menuState.value = MenuStates.Open),\n      goToItem(focus: Focus, id?: string) {\n        let nextActiveItemIndex = calculateActiveIndex(\n          focus === Focus.Specific\n            ? { focus: Focus.Specific, id: id! }\n            : { focus: focus as Exclude<Focus, Focus.Specific> },\n          {\n            resolveItems: () => items.value,\n            resolveActiveIndex: () => activeItemIndex.value,\n            resolveId: item => item.id,\n            resolveDisabled: item => item.dataRef.disabled,\n          }\n        )\n\n        if (searchQuery.value === '' && activeItemIndex.value === nextActiveItemIndex) return\n        searchQuery.value = ''\n        activeItemIndex.value = nextActiveItemIndex\n      },\n      search(value: string) {\n        searchQuery.value += value.toLowerCase()\n\n        let match = items.value.findIndex(\n          item => item.dataRef.textValue.startsWith(searchQuery.value) && !item.dataRef.disabled\n        )\n\n        if (match === -1 || match === activeItemIndex.value) return\n\n        activeItemIndex.value = match\n      },\n      clearSearch() {\n        searchQuery.value = ''\n      },\n      registerItem(id: string, dataRef: MenuItemDataRef) {\n        // @ts-expect-error The expected type comes from property 'dataRef' which is declared here on type '{ id: string; dataRef: { textValue: string; disabled: boolean; }; }'\n        items.value.push({ id, dataRef })\n      },\n      unregisterItem(id: string) {\n        let nextItems = items.value.slice()\n        let currentActiveItem =\n          activeItemIndex.value !== null ? nextItems[activeItemIndex.value] : null\n        let idx = nextItems.findIndex(a => a.id === id)\n        if (idx !== -1) nextItems.splice(idx, 1)\n        items.value = nextItems\n        activeItemIndex.value = (() => {\n          if (idx === activeItemIndex.value) return null\n          if (currentActiveItem === null) return null\n\n          // If we removed the item before the actual active index, then it would be out of sync. To\n          // fix this, we will find the correct (new) index position.\n          return nextItems.indexOf(currentActiveItem)\n        })()\n      },\n    }\n\n    useWindowEvent('mousedown', event => {\n      let target = event.target as HTMLElement\n      let active = document.activeElement\n\n      if (menuState.value !== MenuStates.Open) return\n      if (dom(buttonRef)?.contains(target)) return\n\n      if (!dom(itemsRef)?.contains(target)) api.closeMenu()\n      if (active !== document.body && active?.contains(target)) return // Keep focus on newly clicked/focused element\n      if (!event.defaultPrevented) dom(buttonRef)?.focus({ preventScroll: true })\n    })\n\n    // @ts-expect-error Types of property 'dataRef' are incompatible.\n    provide(MenuContext, api)\n    useOpenClosedProvider(\n      computed(() =>\n        match(menuState.value, {\n          [MenuStates.Open]: State.Open,\n          [MenuStates.Closed]: State.Closed,\n        })\n      )\n    )\n\n    return () => {\n      let slot = { open: menuState.value === MenuStates.Open }\n      return render({ props, slot, slots, attrs, name: 'Menu' })\n    }\n  },\n})\n\nexport let MenuButton = defineComponent({\n  name: 'MenuButton',\n  props: {\n    disabled: { type: Boolean, default: false },\n    as: { type: [Object, String], default: 'button' },\n  },\n  render() {\n    let api = useMenuContext('MenuButton')\n\n    let slot = { open: api.menuState.value === MenuStates.Open }\n    let propsWeControl = {\n      ref: 'el',\n      id: this.id,\n      type: this.type,\n      'aria-haspopup': true,\n      'aria-controls': dom(api.itemsRef)?.id,\n      'aria-expanded': this.$props.disabled ? undefined : api.menuState.value === MenuStates.Open,\n      onKeydown: this.handleKeyDown,\n      onKeyup: this.handleKeyUp,\n      onClick: this.handleClick,\n    }\n\n    return render({\n      props: { ...this.$props, ...propsWeControl },\n      slot,\n      attrs: this.$attrs,\n      slots: this.$slots,\n      name: 'MenuButton',\n    })\n  },\n  setup(props, { attrs }) {\n    let api = useMenuContext('MenuButton')\n    let id = `headlessui-menu-button-${useId()}`\n\n    function handleKeyDown(event: KeyboardEvent) {\n      switch (event.key) {\n        // Ref: https://www.w3.org/TR/wai-aria-practices-1.2/#keyboard-interaction-13\n\n        case Keys.Space:\n        case Keys.Enter:\n        case Keys.ArrowDown:\n          event.preventDefault()\n          event.stopPropagation()\n          api.openMenu()\n          nextTick(() => {\n            dom(api.itemsRef)?.focus({ preventScroll: true })\n            api.goToItem(Focus.First)\n          })\n          break\n\n        case Keys.ArrowUp:\n          event.preventDefault()\n          event.stopPropagation()\n          api.openMenu()\n          nextTick(() => {\n            dom(api.itemsRef)?.focus({ preventScroll: true })\n            api.goToItem(Focus.Last)\n          })\n          break\n      }\n    }\n\n    function handleKeyUp(event: KeyboardEvent) {\n      switch (event.key) {\n        case Keys.Space:\n          // Required for firefox, event.preventDefault() in handleKeyDown for\n          // the Space key doesn't cancel the handleKeyUp, which in turn\n          // triggers a *click*.\n          event.preventDefault()\n          break\n      }\n    }\n\n    function handleClick(event: MouseEvent) {\n      if (props.disabled) return\n      if (api.menuState.value === MenuStates.Open) {\n        api.closeMenu()\n        nextTick(() => dom(api.buttonRef)?.focus({ preventScroll: true }))\n      } else {\n        event.preventDefault()\n        event.stopPropagation()\n        api.openMenu()\n        nextFrame(() => dom(api.itemsRef)?.focus({ preventScroll: true }))\n      }\n    }\n\n    return {\n      id,\n      el: api.buttonRef,\n      type: useResolveButtonType(\n        computed(() => ({ as: props.as, type: attrs.type })),\n        api.buttonRef\n      ),\n      handleKeyDown,\n      handleKeyUp,\n      handleClick,\n    }\n  },\n})\n\nexport let MenuItems = defineComponent({\n  name: 'MenuItems',\n  props: {\n    as: { type: [Object, String], default: 'div' },\n    static: { type: Boolean, default: false },\n    unmount: { type: Boolean, default: true },\n  },\n  render() {\n    let api = useMenuContext('MenuItems')\n\n    let slot = { open: api.menuState.value === MenuStates.Open }\n    let propsWeControl = {\n      'aria-activedescendant':\n        api.activeItemIndex.value === null\n          ? undefined\n          : api.items.value[api.activeItemIndex.value]?.id,\n      'aria-labelledby': dom(api.buttonRef)?.id,\n      id: this.id,\n      onKeydown: this.handleKeyDown,\n      onKeyup: this.handleKeyUp,\n      role: 'menu',\n      tabIndex: 0,\n      ref: 'el',\n    }\n    let passThroughProps = this.$props\n\n    return render({\n      props: { ...passThroughProps, ...propsWeControl },\n      slot,\n      attrs: this.$attrs,\n      slots: this.$slots,\n      features: Features.RenderStrategy | Features.Static,\n      visible: this.visible,\n      name: 'MenuItems',\n    })\n  },\n  setup() {\n    let api = useMenuContext('MenuItems')\n    let id = `headlessui-menu-items-${useId()}`\n    let searchDebounce = ref<ReturnType<typeof setTimeout> | null>(null)\n\n    useTreeWalker({\n      container: computed(() => dom(api.itemsRef)),\n      enabled: computed(() => api.menuState.value === MenuStates.Open),\n      accept(node) {\n        if (node.getAttribute('role') === 'menuitem') return NodeFilter.FILTER_REJECT\n        if (node.hasAttribute('role')) return NodeFilter.FILTER_SKIP\n        return NodeFilter.FILTER_ACCEPT\n      },\n      walk(node) {\n        node.setAttribute('role', 'none')\n      },\n    })\n\n    function handleKeyDown(event: KeyboardEvent) {\n      if (searchDebounce.value) clearTimeout(searchDebounce.value)\n\n      switch (event.key) {\n        // Ref: https://www.w3.org/TR/wai-aria-practices-1.2/#keyboard-interaction-12\n\n        // @ts-expect-error Fallthrough is expected here\n        case Keys.Space:\n          if (api.searchQuery.value !== '') {\n            event.preventDefault()\n            event.stopPropagation()\n            return api.search(event.key)\n          }\n        // When in type ahead mode, fallthrough\n        case Keys.Enter:\n          event.preventDefault()\n          event.stopPropagation()\n          if (api.activeItemIndex.value !== null) {\n            let { id } = api.items.value[api.activeItemIndex.value]\n            document.getElementById(id)?.click()\n          }\n          api.closeMenu()\n          nextTick(() => dom(api.buttonRef)?.focus({ preventScroll: true }))\n          break\n\n        case Keys.ArrowDown:\n          event.preventDefault()\n          event.stopPropagation()\n          return api.goToItem(Focus.Next)\n\n        case Keys.ArrowUp:\n          event.preventDefault()\n          event.stopPropagation()\n          return api.goToItem(Focus.Previous)\n\n        case Keys.Home:\n        case Keys.PageUp:\n          event.preventDefault()\n          event.stopPropagation()\n          return api.goToItem(Focus.First)\n\n        case Keys.End:\n        case Keys.PageDown:\n          event.preventDefault()\n          event.stopPropagation()\n          return api.goToItem(Focus.Last)\n\n        case Keys.Escape:\n          event.preventDefault()\n          event.stopPropagation()\n          api.closeMenu()\n          nextTick(() => dom(api.buttonRef)?.focus({ preventScroll: true }))\n          break\n\n        case Keys.Tab:\n          event.preventDefault()\n          event.stopPropagation()\n          break\n\n        default:\n          if (event.key.length === 1) {\n            api.search(event.key)\n            searchDebounce.value = setTimeout(() => api.clearSearch(), 350)\n          }\n          break\n      }\n    }\n\n    function handleKeyUp(event: KeyboardEvent) {\n      switch (event.key) {\n        case Keys.Space:\n          // Required for firefox, event.preventDefault() in handleKeyDown for\n          // the Space key doesn't cancel the handleKeyUp, which in turn\n          // triggers a *click*.\n          event.preventDefault()\n          break\n      }\n    }\n\n    let usesOpenClosedState = useOpenClosed()\n    let visible = computed(() => {\n      if (usesOpenClosedState !== null) {\n        return usesOpenClosedState.value === State.Open\n      }\n\n      return api.menuState.value === MenuStates.Open\n    })\n\n    return { id, el: api.itemsRef, handleKeyDown, handleKeyUp, visible }\n  },\n})\n\nexport let MenuItem = defineComponent({\n  name: 'MenuItem',\n  props: {\n    as: { type: [Object, String], default: 'template' },\n    disabled: { type: Boolean, default: false },\n  },\n  setup(props, { slots, attrs }) {\n    let api = useMenuContext('MenuItem')\n    let id = `headlessui-menu-item-${useId()}`\n\n    let active = computed(() => {\n      return api.activeItemIndex.value !== null\n        ? api.items.value[api.activeItemIndex.value].id === id\n        : false\n    })\n\n    let dataRef = ref<MenuItemDataRef['value']>({ disabled: props.disabled, textValue: '' })\n    onMounted(() => {\n      let textValue = document\n        .getElementById(id)\n        ?.textContent?.toLowerCase()\n        .trim()\n      if (textValue !== undefined) dataRef.value.textValue = textValue\n    })\n\n    onMounted(() => api.registerItem(id, dataRef))\n    onUnmounted(() => api.unregisterItem(id))\n\n    watchEffect(() => {\n      if (api.menuState.value !== MenuStates.Open) return\n      if (!active.value) return\n      nextTick(() => document.getElementById(id)?.scrollIntoView?.({ block: 'nearest' }))\n    })\n\n    function handleClick(event: MouseEvent) {\n      if (props.disabled) return event.preventDefault()\n      api.closeMenu()\n      nextTick(() => dom(api.buttonRef)?.focus({ preventScroll: true }))\n    }\n\n    function handleFocus() {\n      if (props.disabled) return api.goToItem(Focus.Nothing)\n      api.goToItem(Focus.Specific, id)\n    }\n\n    function handleMove() {\n      if (props.disabled) return\n      if (active.value) return\n      api.goToItem(Focus.Specific, id)\n    }\n\n    function handleLeave() {\n      if (props.disabled) return\n      if (!active.value) return\n      api.goToItem(Focus.Nothing)\n    }\n\n    return () => {\n      let { disabled } = props\n      let slot = { active: active.value, disabled }\n      let propsWeControl = {\n        id,\n        role: 'menuitem',\n        tabIndex: disabled === true ? undefined : -1,\n        'aria-disabled': disabled === true ? true : undefined,\n        onClick: handleClick,\n        onFocus: handleFocus,\n        onPointermove: handleMove,\n        onMousemove: handleMove,\n        onPointerleave: handleLeave,\n        onMouseleave: handleLeave,\n      }\n\n      return render({\n        props: { ...props, ...propsWeControl },\n        slot,\n        attrs,\n        slots,\n        name: 'MenuItem',\n      })\n    }\n  },\n})\n","import { watchEffect, ComputedRef } from 'vue'\n\ntype AcceptNode = (\n  node: HTMLElement\n) =>\n  | typeof NodeFilter.FILTER_ACCEPT\n  | typeof NodeFilter.FILTER_SKIP\n  | typeof NodeFilter.FILTER_REJECT\n\nexport function useTreeWalker({\n  container,\n  accept,\n  walk,\n  enabled,\n}: {\n  container: ComputedRef<HTMLElement | null>\n  accept: AcceptNode\n  walk(node: HTMLElement): void\n  enabled?: ComputedRef<boolean>\n}) {\n  watchEffect(() => {\n    let root = container.value\n    if (!root) return\n    if (enabled !== undefined && !enabled.value) return\n\n    let acceptNode = Object.assign((node: HTMLElement) => accept(node), { acceptNode: accept })\n    let walker = document.createTreeWalker(root, NodeFilter.SHOW_ELEMENT, acceptNode, false)\n\n    while (walker.nextNode()) walk(walker.currentNode as HTMLElement)\n  })\n}\n","import {\n  defineComponent,\n  inject,\n  onUnmounted,\n  provide,\n  ref,\n  watchEffect,\n\n  // Types\n  InjectionKey,\n  Ref,\n  computed,\n} from 'vue'\n\nimport { match } from '../../utils/match'\nimport { render, Features } from '../../utils/render'\nimport { useId } from '../../hooks/use-id'\nimport { Keys } from '../../keyboard'\nimport {\n  getFocusableElements,\n  Focus,\n  focusIn,\n  FocusResult,\n  isFocusableElement,\n  FocusableMode,\n} from '../../utils/focus-management'\nimport { dom } from '../../utils/dom'\nimport { useWindowEvent } from '../../hooks/use-window-event'\nimport { useOpenClosedProvider, State, useOpenClosed } from '../../internal/open-closed'\nimport { useResolveButtonType } from '../../hooks/use-resolve-button-type'\n\nenum PopoverStates {\n  Open,\n  Closed,\n}\n\ninterface StateDefinition {\n  // State\n  popoverState: Ref<PopoverStates>\n  button: Ref<HTMLElement | null>\n  buttonId: string\n  panel: Ref<HTMLElement | null>\n  panelId: string\n\n  // State mutators\n  togglePopover(): void\n  closePopover(): void\n\n  // Exposed functions\n  close(focusableElement: HTMLElement | Ref<HTMLElement | null>): void\n}\n\nlet PopoverContext = Symbol('PopoverContext') as InjectionKey<StateDefinition>\nfunction usePopoverContext(component: string) {\n  let context = inject(PopoverContext, null)\n  if (context === null) {\n    let err = new Error(`<${component} /> is missing a parent <${Popover.name} /> component.`)\n    if (Error.captureStackTrace) Error.captureStackTrace(err, usePopoverContext)\n    throw err\n  }\n  return context\n}\n\nlet PopoverGroupContext = Symbol('PopoverGroupContext') as InjectionKey<{\n  registerPopover(registerbag: PopoverRegisterBag): void\n  unregisterPopover(registerbag: PopoverRegisterBag): void\n  isFocusWithinPopoverGroup(): boolean\n  closeOthers(buttonId: string): void\n} | null>\n\nfunction usePopoverGroupContext() {\n  return inject(PopoverGroupContext, null)\n}\n\nlet PopoverPanelContext = Symbol('PopoverPanelContext') as InjectionKey<string | null>\nfunction usePopoverPanelContext() {\n  return inject(PopoverPanelContext, null)\n}\n\ninterface PopoverRegisterBag {\n  buttonId: string\n  panelId: string\n  close(): void\n}\n\n// ---\n\nexport let Popover = defineComponent({\n  name: 'Popover',\n  props: {\n    as: { type: [Object, String], default: 'div' },\n  },\n  setup(props, { slots, attrs }) {\n    let buttonId = `headlessui-popover-button-${useId()}`\n    let panelId = `headlessui-popover-panel-${useId()}`\n\n    let popoverState = ref<StateDefinition['popoverState']['value']>(PopoverStates.Closed)\n    let button = ref<StateDefinition['button']['value']>(null)\n    let panel = ref<StateDefinition['panel']['value']>(null)\n\n    let api = {\n      popoverState,\n      buttonId,\n      panelId,\n      panel,\n      button,\n      togglePopover() {\n        popoverState.value = match(popoverState.value, {\n          [PopoverStates.Open]: PopoverStates.Closed,\n          [PopoverStates.Closed]: PopoverStates.Open,\n        })\n      },\n      closePopover() {\n        if (popoverState.value === PopoverStates.Closed) return\n        popoverState.value = PopoverStates.Closed\n      },\n      close(focusableElement: HTMLElement | Ref<HTMLElement | null>) {\n        api.closePopover()\n\n        let restoreElement = (() => {\n          if (!focusableElement) return dom(api.button)\n          if (focusableElement instanceof HTMLElement) return focusableElement\n          if (focusableElement.value instanceof HTMLElement) return dom(focusableElement)\n\n          return dom(api.button)\n        })()\n\n        restoreElement?.focus()\n      },\n    } as StateDefinition\n\n    provide(PopoverContext, api)\n    useOpenClosedProvider(\n      computed(() =>\n        match(popoverState.value, {\n          [PopoverStates.Open]: State.Open,\n          [PopoverStates.Closed]: State.Closed,\n        })\n      )\n    )\n\n    let registerBag = {\n      buttonId,\n      panelId,\n      close() {\n        api.closePopover()\n      },\n    }\n\n    let groupContext = usePopoverGroupContext()\n    let registerPopover = groupContext?.registerPopover\n\n    function isFocusWithinPopoverGroup() {\n      return (\n        groupContext?.isFocusWithinPopoverGroup() ??\n        (dom(button)?.contains(document.activeElement) ||\n          dom(panel)?.contains(document.activeElement))\n      )\n    }\n\n    watchEffect(() => registerPopover?.(registerBag))\n\n    // Handle focus out\n    useWindowEvent(\n      'focus',\n      () => {\n        if (popoverState.value !== PopoverStates.Open) return\n        if (isFocusWithinPopoverGroup()) return\n        if (!button) return\n        if (!panel) return\n\n        api.closePopover()\n      },\n      true\n    )\n\n    // Handle outside click\n    useWindowEvent('mousedown', (event: MouseEvent) => {\n      let target = event.target as HTMLElement\n\n      if (popoverState.value !== PopoverStates.Open) return\n\n      if (dom(button)?.contains(target)) return\n      if (dom(panel)?.contains(target)) return\n\n      api.closePopover()\n\n      if (!isFocusableElement(target, FocusableMode.Loose)) {\n        event.preventDefault()\n        dom(button)?.focus()\n      }\n    })\n\n    return () => {\n      let slot = { open: popoverState.value === PopoverStates.Open, close: api.close }\n      return render({ props, slot, slots, attrs, name: 'Popover' })\n    }\n  },\n})\n\n// ---\n\nexport let PopoverButton = defineComponent({\n  name: 'PopoverButton',\n  props: {\n    as: { type: [Object, String], default: 'button' },\n    disabled: { type: [Boolean], default: false },\n  },\n  render() {\n    let api = usePopoverContext('PopoverButton')\n\n    let slot = { open: api.popoverState.value === PopoverStates.Open }\n    let propsWeControl = this.isWithinPanel\n      ? {\n          ref: 'el',\n          type: this.type,\n          onKeydown: this.handleKeyDown,\n          onClick: this.handleClick,\n        }\n      : {\n          ref: 'el',\n          id: api.buttonId,\n          type: this.type,\n          'aria-expanded': this.$props.disabled\n            ? undefined\n            : api.popoverState.value === PopoverStates.Open,\n          'aria-controls': dom(api.panel) ? api.panelId : undefined,\n          disabled: this.$props.disabled ? true : undefined,\n          onKeydown: this.handleKeyDown,\n          onKeyup: this.handleKeyUp,\n          onClick: this.handleClick,\n        }\n\n    return render({\n      props: { ...this.$props, ...propsWeControl },\n      slot,\n      attrs: this.$attrs,\n      slots: this.$slots,\n      name: 'PopoverButton',\n    })\n  },\n  setup(props, { attrs }) {\n    let api = usePopoverContext('PopoverButton')\n\n    let groupContext = usePopoverGroupContext()\n    let closeOthers = groupContext?.closeOthers\n\n    let panelContext = usePopoverPanelContext()\n    let isWithinPanel = panelContext === null ? false : panelContext === api.panelId\n\n    // TODO: Revisit when handling Tab/Shift+Tab when using Portal's\n    let activeElementRef = ref<Element | null>(null)\n    let previousActiveElementRef = ref<Element | null>(\n      typeof window === 'undefined' ? null : document.activeElement\n    )\n\n    useWindowEvent(\n      'focus',\n      () => {\n        previousActiveElementRef.value = activeElementRef.value\n        activeElementRef.value = document.activeElement\n      },\n      true\n    )\n\n    let elementRef = ref(null)\n\n    if (!isWithinPanel) {\n      watchEffect(() => {\n        api.button.value = elementRef.value\n      })\n    }\n\n    return {\n      isWithinPanel,\n      el: elementRef,\n      type: useResolveButtonType(\n        computed(() => ({ as: props.as, type: attrs.type })),\n        elementRef\n      ),\n      handleKeyDown(event: KeyboardEvent) {\n        if (isWithinPanel) {\n          if (api.popoverState.value === PopoverStates.Closed) return\n          switch (event.key) {\n            case Keys.Space:\n            case Keys.Enter:\n              event.preventDefault() // Prevent triggering a *click* event\n              event.stopPropagation()\n              api.closePopover()\n              dom(api.button)?.focus() // Re-focus the original opening Button\n              break\n          }\n        } else {\n          switch (event.key) {\n            case Keys.Space:\n            case Keys.Enter:\n              event.preventDefault() // Prevent triggering a *click* event\n              event.stopPropagation()\n              if (api.popoverState.value === PopoverStates.Closed) closeOthers?.(api.buttonId)\n              api.togglePopover()\n              break\n\n            case Keys.Escape:\n              if (api.popoverState.value !== PopoverStates.Open) return closeOthers?.(api.buttonId)\n              if (!dom(api.button)) return\n              if (!dom(api.button)?.contains(document.activeElement)) return\n              event.preventDefault()\n              event.stopPropagation()\n              api.closePopover()\n              break\n\n            case Keys.Tab:\n              if (api.popoverState.value !== PopoverStates.Open) return\n              if (!api.panel) return\n              if (!api.button) return\n\n              // TODO: Revisit when handling Tab/Shift+Tab when using Portal's\n              if (event.shiftKey) {\n                // Check if the last focused element exists, and check that it is not inside button or panel itself\n                if (!previousActiveElementRef.value) return\n                if (dom(api.button)?.contains(previousActiveElementRef.value)) return\n                if (dom(api.panel)?.contains(previousActiveElementRef.value)) return\n\n                // Check if the last focused element is *after* the button in the DOM\n                let focusableElements = getFocusableElements()\n                let previousIdx = focusableElements.indexOf(\n                  previousActiveElementRef.value as HTMLElement\n                )\n                let buttonIdx = focusableElements.indexOf(dom(api.button)!)\n                if (buttonIdx > previousIdx) return\n\n                event.preventDefault()\n                event.stopPropagation()\n\n                focusIn(dom(api.panel)!, Focus.Last)\n              } else {\n                event.preventDefault()\n                event.stopPropagation()\n\n                focusIn(dom(api.panel)!, Focus.First)\n              }\n\n              break\n          }\n        }\n      },\n      handleKeyUp(event: KeyboardEvent) {\n        if (isWithinPanel) return\n        if (event.key === Keys.Space) {\n          // Required for firefox, event.preventDefault() in handleKeyDown for\n          // the Space key doesn't cancel the handleKeyUp, which in turn\n          // triggers a *click*.\n          event.preventDefault()\n        }\n        if (api.popoverState.value !== PopoverStates.Open) return\n        if (!api.panel) return\n        if (!api.button) return\n\n        // TODO: Revisit when handling Tab/Shift+Tab when using Portal's\n        switch (event.key) {\n          case Keys.Tab:\n            // Check if the last focused element exists, and check that it is not inside button or panel itself\n            if (!previousActiveElementRef.value) return\n            if (dom(api.button)?.contains(previousActiveElementRef.value)) return\n            if (dom(api.panel)?.contains(previousActiveElementRef.value)) return\n\n            // Check if the last focused element is *after* the button in the DOM\n            let focusableElements = getFocusableElements()\n            let previousIdx = focusableElements.indexOf(\n              previousActiveElementRef.value as HTMLElement\n            )\n            let buttonIdx = focusableElements.indexOf(dom(api.button)!)\n            if (buttonIdx > previousIdx) return\n\n            event.preventDefault()\n            event.stopPropagation()\n            focusIn(dom(api.panel)!, Focus.Last)\n            break\n        }\n      },\n      handleClick() {\n        if (props.disabled) return\n        if (isWithinPanel) {\n          api.closePopover()\n          dom(api.button)?.focus() // Re-focus the original opening Button\n        } else {\n          if (api.popoverState.value === PopoverStates.Closed) closeOthers?.(api.buttonId)\n          dom(api.button)?.focus()\n          api.togglePopover()\n        }\n      },\n    }\n  },\n})\n\n// ---\n\nexport let PopoverOverlay = defineComponent({\n  name: 'PopoverOverlay',\n  props: {\n    as: { type: [Object, String], default: 'div' },\n    static: { type: Boolean, default: false },\n    unmount: { type: Boolean, default: true },\n  },\n  render() {\n    let api = usePopoverContext('PopoverOverlay')\n\n    let slot = { open: api.popoverState.value === PopoverStates.Open }\n    let propsWeControl = {\n      id: this.id,\n      ref: 'el',\n      'aria-hidden': true,\n      onClick: this.handleClick,\n    }\n\n    return render({\n      props: { ...this.$props, ...propsWeControl },\n      slot,\n      attrs: this.$attrs,\n      slots: this.$slots,\n      features: Features.RenderStrategy | Features.Static,\n      visible: this.visible,\n      name: 'PopoverOverlay',\n    })\n  },\n  setup() {\n    let api = usePopoverContext('PopoverOverlay')\n\n    let usesOpenClosedState = useOpenClosed()\n    let visible = computed(() => {\n      if (usesOpenClosedState !== null) {\n        return usesOpenClosedState.value === State.Open\n      }\n\n      return api.popoverState.value === PopoverStates.Open\n    })\n\n    return {\n      id: `headlessui-popover-overlay-${useId()}`,\n      handleClick() {\n        api.closePopover()\n      },\n      visible,\n    }\n  },\n})\n\n// ---\n\nexport let PopoverPanel = defineComponent({\n  name: 'PopoverPanel',\n  props: {\n    as: { type: [Object, String], default: 'div' },\n    static: { type: Boolean, default: false },\n    unmount: { type: Boolean, default: true },\n    focus: { type: Boolean, default: false },\n  },\n  render() {\n    let api = usePopoverContext('PopoverPanel')\n\n    let slot = {\n      open: api.popoverState.value === PopoverStates.Open,\n      close: api.close,\n    }\n\n    let propsWeControl = {\n      ref: 'el',\n      id: this.id,\n      onKeydown: this.handleKeyDown,\n    }\n\n    return render({\n      props: { ...this.$props, ...propsWeControl },\n      slot,\n      attrs: this.$attrs,\n      slots: this.$slots,\n      features: Features.RenderStrategy | Features.Static,\n      visible: this.visible,\n      name: 'PopoverPanel',\n    })\n  },\n  setup(props) {\n    let { focus } = props\n    let api = usePopoverContext('PopoverPanel')\n\n    provide(PopoverPanelContext, api.panelId)\n\n    onUnmounted(() => {\n      api.panel.value = null\n    })\n\n    // Move focus within panel\n    watchEffect(() => {\n      if (!focus) return\n      if (api.popoverState.value !== PopoverStates.Open) return\n      if (!api.panel) return\n\n      let activeElement = document.activeElement as HTMLElement\n      if (dom(api.panel)?.contains(activeElement)) return // Already focused within Dialog\n\n      focusIn(dom(api.panel)!, Focus.First)\n    })\n\n    // Handle Tab / Shift+Tab focus positioning\n    useWindowEvent('keydown', (event: KeyboardEvent) => {\n      if (api.popoverState.value !== PopoverStates.Open) return\n      if (!dom(api.panel)) return\n\n      if (event.key !== Keys.Tab) return\n      if (!document.activeElement) return\n      if (!dom(api.panel)?.contains(document.activeElement)) return\n\n      // We will take-over the default tab behaviour so that we have a bit\n      // control over what is focused next. It will behave exactly the same,\n      // but it will also \"fix\" some issues based on whether you are using a\n      // Portal or not.\n      event.preventDefault()\n\n      let result = focusIn(dom(api.panel)!, event.shiftKey ? Focus.Previous : Focus.Next)\n\n      if (result === FocusResult.Underflow) {\n        return dom(api.button)?.focus()\n      } else if (result === FocusResult.Overflow) {\n        if (!dom(api.button)) return\n\n        let elements = getFocusableElements()\n        let buttonIdx = elements.indexOf(dom(api.button)!)\n\n        let nextElements = elements\n          .splice(buttonIdx + 1) // Elements after button\n          .filter(element => !dom(api.panel)?.contains(element)) // Ignore items in panel\n\n        // Try to focus the next element, however it could fail if we are in a\n        // Portal that happens to be the very last one in the DOM. In that\n        // case we would Error (because nothing after the button is\n        // focusable). Therefore we will try and focus the very first item in\n        // the document.body.\n        if (focusIn(nextElements, Focus.First) === FocusResult.Error) {\n          focusIn(document.body, Focus.First)\n        }\n      }\n    })\n\n    // Handle focus out when we are in special \"focus\" mode\n    useWindowEvent(\n      'focus',\n      () => {\n        if (!focus) return\n        if (api.popoverState.value !== PopoverStates.Open) return\n        if (!dom(api.panel)) return\n        if (dom(api.panel)?.contains(document.activeElement as HTMLElement)) return\n        api.closePopover()\n      },\n      true\n    )\n\n    let usesOpenClosedState = useOpenClosed()\n    let visible = computed(() => {\n      if (usesOpenClosedState !== null) {\n        return usesOpenClosedState.value === State.Open\n      }\n\n      return api.popoverState.value === PopoverStates.Open\n    })\n\n    return {\n      id: api.panelId,\n      el: api.panel,\n      handleKeyDown(event: KeyboardEvent) {\n        switch (event.key) {\n          case Keys.Escape:\n            if (api.popoverState.value !== PopoverStates.Open) return\n            if (!dom(api.panel)) return\n            if (!dom(api.panel)?.contains(document.activeElement)) return\n            event.preventDefault()\n            event.stopPropagation()\n            api.closePopover()\n            dom(api.button)?.focus()\n            break\n        }\n      },\n      visible,\n    }\n  },\n})\n\n// ---\n\nexport let PopoverGroup = defineComponent({\n  name: 'PopoverGroup',\n  props: {\n    as: { type: [Object, String], default: 'div' },\n  },\n  render() {\n    let propsWeControl = { ref: 'el' }\n\n    return render({\n      props: { ...this.$props, ...propsWeControl },\n      slot: {},\n      attrs: this.$attrs,\n      slots: this.$slots,\n      name: 'PopoverGroup',\n    })\n  },\n  setup() {\n    let groupRef = ref<HTMLElement | null>(null)\n    let popovers = ref<PopoverRegisterBag[]>([])\n\n    function unregisterPopover(registerBag: PopoverRegisterBag) {\n      let idx = popovers.value.indexOf(registerBag)\n      if (idx !== -1) popovers.value.splice(idx, 1)\n    }\n\n    function registerPopover(registerBag: PopoverRegisterBag) {\n      popovers.value.push(registerBag)\n      return () => {\n        unregisterPopover(registerBag)\n      }\n    }\n\n    function isFocusWithinPopoverGroup() {\n      let element = document.activeElement as HTMLElement\n\n      if (dom(groupRef)?.contains(element)) return true\n\n      // Check if the focus is in one of the button or panel elements. This is important in case you are rendering inside a Portal.\n      return popovers.value.some(bag => {\n        return (\n          document.getElementById(bag.buttonId)?.contains(element) ||\n          document.getElementById(bag.panelId)?.contains(element)\n        )\n      })\n    }\n\n    function closeOthers(buttonId: string) {\n      for (let popover of popovers.value) {\n        if (popover.buttonId !== buttonId) popover.close()\n      }\n    }\n\n    provide(PopoverGroupContext, {\n      registerPopover,\n      unregisterPopover,\n      isFocusWithinPopoverGroup,\n      closeOthers,\n    })\n\n    return { el: groupRef }\n  },\n})\n","import {\n  computed,\n  defineComponent,\n  inject,\n  onMounted,\n  onUnmounted,\n  provide,\n  ref,\n  unref,\n\n  // Types\n  ComputedRef,\n  InjectionKey,\n} from 'vue'\n\nimport { useId } from '../../hooks/use-id'\nimport { render } from '../../utils/render'\n\n// ---\n\nlet LabelContext = Symbol('LabelContext') as InjectionKey<{\n  register(value: string): () => void\n  slot: Record<string, unknown>\n  name: string\n  props: Record<string, unknown>\n}>\n\nfunction useLabelContext() {\n  let context = inject(LabelContext, null)\n  if (context === null) {\n    let err = new Error('You used a <Label /> component, but it is not inside a parent.')\n    if (Error.captureStackTrace) Error.captureStackTrace(err, useLabelContext)\n    throw err\n  }\n  return context\n}\n\nexport function useLabels({\n  slot = {},\n  name = 'Label',\n  props = {},\n}: {\n  slot?: Record<string, unknown>\n  name?: string\n  props?: Record<string, unknown>\n} = {}): ComputedRef<string | undefined> {\n  let labelIds = ref<string[]>([])\n  function register(value: string) {\n    labelIds.value.push(value)\n\n    return () => {\n      let idx = labelIds.value.indexOf(value)\n      if (idx === -1) return\n      labelIds.value.splice(idx, 1)\n    }\n  }\n\n  provide(LabelContext, { register, slot, name, props })\n\n  // The actual id's as string or undefined.\n  return computed(() => (labelIds.value.length > 0 ? labelIds.value.join(' ') : undefined))\n}\n\n// ---\n\nexport let Label = defineComponent({\n  name: 'Label',\n  props: {\n    as: { type: [Object, String], default: 'label' },\n    passive: { type: [Boolean], default: false },\n  },\n  render() {\n    let { name = 'Label', slot = {}, props = {} } = this.context\n    let { passive, ...passThroughProps } = this.$props\n    let propsWeControl = {\n      ...Object.entries(props).reduce(\n        (acc, [key, value]) => Object.assign(acc, { [key]: unref(value) }),\n        {}\n      ),\n      id: this.id,\n    }\n    let allProps = { ...passThroughProps, ...propsWeControl }\n\n    // @ts-expect-error props are dynamic via context, some components will\n    //                  provide an onClick then we can delete it.\n    if (passive) delete allProps['onClick']\n\n    return render({\n      props: allProps,\n      slot,\n      attrs: this.$attrs,\n      slots: this.$slots,\n      name,\n    })\n  },\n  setup() {\n    let context = useLabelContext()\n    let id = `headlessui-label-${useId()}`\n\n    onMounted(() => onUnmounted(context.register(id)))\n\n    return { id, context }\n  },\n})\n","import {\n  computed,\n  defineComponent,\n  inject,\n  onMounted,\n  onUnmounted,\n  provide,\n  ref,\n  toRaw,\n\n  // Types\n  InjectionKey,\n  Ref,\n  UnwrapRef,\n} from 'vue'\nimport { dom } from '../../utils/dom'\nimport { Keys } from '../../keyboard'\nimport { focusIn, Focus, FocusResult } from '../../utils/focus-management'\nimport { useId } from '../../hooks/use-id'\nimport { render } from '../../utils/render'\nimport { Label, useLabels } from '../label/label'\nimport { Description, useDescriptions } from '../description/description'\nimport { useTreeWalker } from '../../hooks/use-tree-walker'\n\ninterface Option {\n  id: string\n  element: Ref<HTMLElement | null>\n  propsRef: Ref<{ value: unknown; disabled: boolean }>\n}\n\ninterface StateDefinition {\n  // State\n  options: Ref<Option[]>\n  value: Ref<unknown>\n  disabled: Ref<boolean>\n  firstOption: Ref<Option | undefined>\n  containsCheckedOption: Ref<boolean>\n\n  // State mutators\n  change(nextValue: unknown): boolean\n  registerOption(action: Option): void\n  unregisterOption(id: Option['id']): void\n}\n\nlet RadioGroupContext = Symbol('RadioGroupContext') as InjectionKey<StateDefinition>\n\nfunction useRadioGroupContext(component: string) {\n  let context = inject(RadioGroupContext, null)\n\n  if (context === null) {\n    let err = new Error(`<${component} /> is missing a parent <RadioGroup /> component.`)\n    if (Error.captureStackTrace) Error.captureStackTrace(err, useRadioGroupContext)\n    throw err\n  }\n\n  return context\n}\n\n// ---\n\nexport let RadioGroup = defineComponent({\n  name: 'RadioGroup',\n  emits: { 'update:modelValue': (_value: any) => true },\n  props: {\n    as: { type: [Object, String], default: 'div' },\n    disabled: { type: [Boolean], default: false },\n    modelValue: { type: [Object, String, Number, Boolean] },\n  },\n  render() {\n    let { modelValue, disabled, ...passThroughProps } = this.$props\n\n    let propsWeControl = {\n      ref: 'el',\n      id: this.id,\n      role: 'radiogroup',\n      'aria-labelledby': this.labelledby,\n      'aria-describedby': this.describedby,\n      onKeydown: this.handleKeyDown,\n    }\n\n    return render({\n      props: { ...passThroughProps, ...propsWeControl },\n      slot: {},\n      attrs: this.$attrs,\n      slots: this.$slots,\n      name: 'RadioGroup',\n    })\n  },\n  setup(props, { emit }) {\n    let radioGroupRef = ref<HTMLElement | null>(null)\n    let options = ref<StateDefinition['options']['value']>([])\n    let labelledby = useLabels({ name: 'RadioGroupLabel' })\n    let describedby = useDescriptions({ name: 'RadioGroupDescription' })\n\n    let value = computed(() => props.modelValue)\n\n    let api = {\n      options,\n      value,\n      disabled: computed(() => props.disabled),\n      firstOption: computed(() =>\n        options.value.find(option => {\n          if (option.propsRef.disabled) return false\n          return true\n        })\n      ),\n      containsCheckedOption: computed(() =>\n        options.value.some(option => toRaw(option.propsRef.value) === toRaw(props.modelValue))\n      ),\n      change(nextValue: unknown) {\n        if (props.disabled) return false\n        if (value.value === nextValue) return false\n        let nextOption = options.value.find(\n          option => toRaw(option.propsRef.value) === toRaw(nextValue)\n        )?.propsRef\n        if (nextOption?.disabled) return false\n        emit('update:modelValue', nextValue)\n        return true\n      },\n      registerOption(action: UnwrapRef<Option>) {\n        let orderMap = Array.from(\n          radioGroupRef.value?.querySelectorAll('[id^=\"headlessui-radiogroup-option-\"]')!\n        ).reduce(\n          (lookup, element, index) => Object.assign(lookup, { [element.id]: index }),\n          {}\n        ) as Record<string, number>\n\n        options.value.push(action)\n        options.value.sort((a, z) => orderMap[a.id] - orderMap[z.id])\n      },\n      unregisterOption(id: Option['id']) {\n        let idx = options.value.findIndex(radio => radio.id === id)\n        if (idx === -1) return\n        options.value.splice(idx, 1)\n      },\n    }\n\n    // @ts-expect-error ...\n    provide(RadioGroupContext, api)\n\n    useTreeWalker({\n      container: computed(() => dom(radioGroupRef)),\n      accept(node) {\n        if (node.getAttribute('role') === 'radio') return NodeFilter.FILTER_REJECT\n        if (node.hasAttribute('role')) return NodeFilter.FILTER_SKIP\n        return NodeFilter.FILTER_ACCEPT\n      },\n      walk(node) {\n        node.setAttribute('role', 'none')\n      },\n    })\n\n    function handleKeyDown(event: KeyboardEvent) {\n      if (!radioGroupRef.value) return\n      if (!radioGroupRef.value.contains(event.target as HTMLElement)) return\n\n      let all = options.value\n        .filter(option => option.propsRef.disabled === false)\n        .map(radio => radio.element) as HTMLElement[]\n\n      switch (event.key) {\n        case Keys.ArrowLeft:\n        case Keys.ArrowUp:\n          {\n            event.preventDefault()\n            event.stopPropagation()\n\n            let result = focusIn(all, Focus.Previous | Focus.WrapAround)\n\n            if (result === FocusResult.Success) {\n              let activeOption = options.value.find(\n                option => option.element === document.activeElement\n              )\n              if (activeOption) api.change(activeOption.propsRef.value)\n            }\n          }\n          break\n\n        case Keys.ArrowRight:\n        case Keys.ArrowDown:\n          {\n            event.preventDefault()\n            event.stopPropagation()\n\n            let result = focusIn(all, Focus.Next | Focus.WrapAround)\n\n            if (result === FocusResult.Success) {\n              let activeOption = options.value.find(\n                option => option.element === document.activeElement\n              )\n              if (activeOption) api.change(activeOption.propsRef.value)\n            }\n          }\n          break\n\n        case Keys.Space:\n          {\n            event.preventDefault()\n            event.stopPropagation()\n\n            let activeOption = options.value.find(\n              option => option.element === document.activeElement\n            )\n            if (activeOption) api.change(activeOption.propsRef.value)\n          }\n          break\n      }\n    }\n\n    let id = `headlessui-radiogroup-${useId()}`\n\n    return {\n      id,\n      labelledby,\n      describedby,\n      el: radioGroupRef,\n      handleKeyDown,\n    }\n  },\n})\n\n// ---\n\nenum OptionState {\n  Empty = 1 << 0,\n  Active = 1 << 1,\n}\n\nexport let RadioGroupOption = defineComponent({\n  name: 'RadioGroupOption',\n  props: {\n    as: { type: [Object, String], default: 'div' },\n    value: { type: [Object, String, Number, Boolean] },\n    disabled: { type: Boolean, default: false },\n  },\n  render() {\n    let { value, disabled, ...passThroughProps } = this.$props\n\n    let slot = {\n      checked: this.checked,\n      disabled: this.disabled,\n      active: Boolean(this.state & OptionState.Active),\n    }\n\n    let propsWeControl = {\n      id: this.id,\n      ref: 'el',\n      role: 'radio',\n      'aria-checked': this.checked ? 'true' : 'false',\n      'aria-labelledby': this.labelledby,\n      'aria-describedby': this.describedby,\n      'aria-disabled': this.disabled ? true : undefined,\n      tabIndex: this.tabIndex,\n      onClick: this.disabled ? undefined : this.handleClick,\n      onFocus: this.disabled ? undefined : this.handleFocus,\n      onBlur: this.disabled ? undefined : this.handleBlur,\n    }\n\n    return render({\n      props: { ...passThroughProps, ...propsWeControl },\n      slot,\n      attrs: this.$attrs,\n      slots: this.$slots,\n      name: 'RadioGroupOption',\n    })\n  },\n  setup(props) {\n    let api = useRadioGroupContext('RadioGroupOption')\n    let id = `headlessui-radiogroup-option-${useId()}`\n    let labelledby = useLabels({ name: 'RadioGroupLabel' })\n    let describedby = useDescriptions({ name: 'RadioGroupDescription' })\n\n    let optionRef = ref<HTMLElement | null>(null)\n    let propsRef = computed(() => ({ value: props.value, disabled: props.disabled }))\n    let state = ref(OptionState.Empty)\n\n    onMounted(() => api.registerOption({ id, element: optionRef, propsRef }))\n    onUnmounted(() => api.unregisterOption(id))\n\n    let isFirstOption = computed(() => api.firstOption.value?.id === id)\n    let disabled = computed(() => api.disabled.value || props.disabled)\n    let checked = computed(() => toRaw(api.value.value) === toRaw(props.value))\n\n    return {\n      id,\n      el: optionRef,\n      labelledby,\n      describedby,\n      state,\n      disabled,\n      checked,\n      tabIndex: computed(() => {\n        if (disabled.value) return -1\n        if (checked.value) return 0\n        if (!api.containsCheckedOption.value && isFirstOption.value) return 0\n        return -1\n      }),\n      handleClick() {\n        if (!api.change(props.value)) return\n\n        state.value |= OptionState.Active\n        optionRef.value?.focus()\n      },\n      handleFocus() {\n        state.value |= OptionState.Active\n      },\n      handleBlur() {\n        state.value &= ~OptionState.Active\n      },\n    }\n  },\n})\n\n// ---\n\nexport let RadioGroupLabel = Label\nexport let RadioGroupDescription = Description\n","import {\n  defineComponent,\n  inject,\n  provide,\n  ref,\n\n  // Types\n  InjectionKey,\n  Ref,\n  computed,\n} from 'vue'\n\nimport { render } from '../../utils/render'\nimport { useId } from '../../hooks/use-id'\nimport { Keys } from '../../keyboard'\nimport { Label, useLabels } from '../label/label'\nimport { Description, useDescriptions } from '../description/description'\nimport { useResolveButtonType } from '../../hooks/use-resolve-button-type'\n\ntype StateDefinition = {\n  // State\n  switchRef: Ref<HTMLButtonElement | null>\n  labelledby: Ref<string | undefined>\n  describedby: Ref<string | undefined>\n}\n\nlet GroupContext = Symbol('GroupContext') as InjectionKey<StateDefinition>\n\n// ---\n\nexport let SwitchGroup = defineComponent({\n  name: 'SwitchGroup',\n  props: {\n    as: { type: [Object, String], default: 'template' },\n  },\n  setup(props, { slots, attrs }) {\n    let switchRef = ref<StateDefinition['switchRef']['value']>(null)\n    let labelledby = useLabels({\n      name: 'SwitchLabel',\n      props: {\n        onClick() {\n          if (!switchRef.value) return\n          switchRef.value.click()\n          switchRef.value.focus({ preventScroll: true })\n        },\n      },\n    })\n    let describedby = useDescriptions({ name: 'SwitchDescription' })\n\n    let api = { switchRef, labelledby, describedby }\n\n    provide(GroupContext, api)\n\n    return () => render({ props, slot: {}, slots, attrs, name: 'SwitchGroup' })\n  },\n})\n\n// ---\n\nexport let Switch = defineComponent({\n  name: 'Switch',\n  emits: { 'update:modelValue': (_value: boolean) => true },\n  props: {\n    as: { type: [Object, String], default: 'button' },\n    modelValue: { type: Boolean, default: false },\n  },\n  render() {\n    let slot = { checked: this.$props.modelValue }\n    let propsWeControl = {\n      id: this.id,\n      ref: 'el',\n      role: 'switch',\n      type: this.type,\n      tabIndex: 0,\n      'aria-checked': this.$props.modelValue,\n      'aria-labelledby': this.labelledby,\n      'aria-describedby': this.describedby,\n      onClick: this.handleClick,\n      onKeyup: this.handleKeyUp,\n      onKeypress: this.handleKeyPress,\n    }\n\n    return render({\n      props: { ...this.$props, ...propsWeControl },\n      slot,\n      attrs: this.$attrs,\n      slots: this.$slots,\n      name: 'Switch',\n    })\n  },\n  setup(props, { emit, attrs }) {\n    let api = inject(GroupContext, null)\n    let id = `headlessui-switch-${useId()}`\n\n    function toggle() {\n      emit('update:modelValue', !props.modelValue)\n    }\n\n    let internalSwitchRef = ref(null)\n    let switchRef = api === null ? internalSwitchRef : api.switchRef\n\n    return {\n      id,\n      el: switchRef,\n      type: useResolveButtonType(\n        computed(() => ({ as: props.as, type: attrs.type })),\n        switchRef\n      ),\n      labelledby: api?.labelledby,\n      describedby: api?.describedby,\n      handleClick(event: MouseEvent) {\n        event.preventDefault()\n        toggle()\n      },\n      handleKeyUp(event: KeyboardEvent) {\n        if (event.key !== Keys.Tab) event.preventDefault()\n        if (event.key === Keys.Space) toggle()\n      },\n      // This is needed so that we can \"cancel\" the click event when we use the `Enter` key on a button.\n      handleKeyPress(event: KeyboardEvent) {\n        event.preventDefault()\n      },\n    }\n  },\n})\n\n// ---\n\nexport let SwitchLabel = Label\nexport let SwitchDescription = Description\n","import {\n  defineComponent,\n  ref,\n  provide,\n  inject,\n  onMounted,\n  onUnmounted,\n  computed,\n  InjectionKey,\n  Ref,\n  watchEffect,\n} from 'vue'\n\nimport { Features, render, omit } from '../../utils/render'\nimport { useId } from '../../hooks/use-id'\nimport { Keys } from '../../keyboard'\nimport { dom } from '../../utils/dom'\nimport { match } from '../../utils/match'\nimport { focusIn, Focus } from '../../utils/focus-management'\nimport { useResolveButtonType } from '../../hooks/use-resolve-button-type'\n\ntype StateDefinition = {\n  // State\n  selectedIndex: Ref<number | null>\n  orientation: Ref<'vertical' | 'horizontal'>\n  activation: Ref<'auto' | 'manual'>\n\n  tabs: Ref<Ref<HTMLElement | null>[]>\n  panels: Ref<Ref<HTMLElement | null>[]>\n\n  // State mutators\n  setSelectedIndex(index: number): void\n  registerTab(tab: Ref<HTMLElement | null>): void\n  unregisterTab(tab: Ref<HTMLElement | null>): void\n  registerPanel(panel: Ref<HTMLElement | null>): void\n  unregisterPanel(panel: Ref<HTMLElement | null>): void\n}\n\nlet TabsContext = Symbol('TabsContext') as InjectionKey<StateDefinition>\n\nfunction useTabsContext(component: string) {\n  let context = inject(TabsContext, null)\n\n  if (context === null) {\n    let err = new Error(`<${component} /> is missing a parent <TabGroup /> component.`)\n    if (Error.captureStackTrace) Error.captureStackTrace(err, useTabsContext)\n    throw err\n  }\n\n  return context\n}\n\n// ---\n\nexport let TabGroup = defineComponent({\n  name: 'TabGroup',\n  emits: {\n    change: (_index: number) => true,\n  },\n  props: {\n    as: { type: [Object, String], default: 'template' },\n    selectedIndex: { type: [Number], default: null },\n    defaultIndex: { type: [Number], default: 0 },\n    vertical: { type: [Boolean], default: false },\n    manual: { type: [Boolean], default: false },\n  },\n  setup(props, { slots, attrs, emit }) {\n    let selectedIndex = ref<StateDefinition['selectedIndex']['value']>(null)\n    let tabs = ref<StateDefinition['tabs']['value']>([])\n    let panels = ref<StateDefinition['panels']['value']>([])\n\n    let api = {\n      selectedIndex,\n      orientation: computed(() => (props.vertical ? 'vertical' : 'horizontal')),\n      activation: computed(() => (props.manual ? 'manual' : 'auto')),\n      tabs,\n      panels,\n      setSelectedIndex(index: number) {\n        if (selectedIndex.value === index) return\n        selectedIndex.value = index\n        emit('change', index)\n      },\n      registerTab(tab: typeof tabs['value'][number]) {\n        if (!tabs.value.includes(tab)) tabs.value.push(tab)\n      },\n      unregisterTab(tab: typeof tabs['value'][number]) {\n        let idx = tabs.value.indexOf(tab)\n        if (idx !== -1) tabs.value.splice(idx, 1)\n      },\n      registerPanel(panel: typeof panels['value'][number]) {\n        if (!panels.value.includes(panel)) panels.value.push(panel)\n      },\n      unregisterPanel(panel: typeof panels['value'][number]) {\n        let idx = panels.value.indexOf(panel)\n        if (idx !== -1) panels.value.splice(idx, 1)\n      },\n    }\n\n    provide(TabsContext, api)\n\n    watchEffect(() => {\n      if (api.tabs.value.length <= 0) return\n      if (props.selectedIndex === null && selectedIndex.value !== null) return\n\n      let tabs = api.tabs.value.map(tab => dom(tab)).filter(Boolean) as HTMLElement[]\n      let focusableTabs = tabs.filter(tab => !tab.hasAttribute('disabled'))\n\n      let indexToSet = props.selectedIndex ?? props.defaultIndex\n\n      // Underflow\n      if (indexToSet < 0) {\n        selectedIndex.value = tabs.indexOf(focusableTabs[0])\n      }\n\n      // Overflow\n      else if (indexToSet > api.tabs.value.length) {\n        selectedIndex.value = tabs.indexOf(focusableTabs[focusableTabs.length - 1])\n      }\n\n      // Middle\n      else {\n        let before = tabs.slice(0, indexToSet)\n        let after = tabs.slice(indexToSet)\n\n        let next = [...after, ...before].find(tab => focusableTabs.includes(tab))\n        if (!next) return\n\n        selectedIndex.value = tabs.indexOf(next)\n      }\n    })\n\n    return () => {\n      let slot = { selectedIndex: selectedIndex.value }\n\n      return render({\n        props: omit(props, ['selectedIndex', 'defaultIndex', 'manual', 'vertical', 'onChange']),\n        slot,\n        slots,\n        attrs,\n        name: 'TabGroup',\n      })\n    }\n  },\n})\n\n// ---\n\nexport let TabList = defineComponent({\n  name: 'TabList',\n  props: {\n    as: { type: [Object, String], default: 'div' },\n  },\n  setup(props, { attrs, slots }) {\n    let api = useTabsContext('TabList')\n\n    return () => {\n      let slot = { selectedIndex: api.selectedIndex.value }\n\n      let propsWeControl = {\n        role: 'tablist',\n        'aria-orientation': api.orientation.value,\n      }\n      let passThroughProps = props\n\n      return render({\n        props: { ...passThroughProps, ...propsWeControl },\n        slot,\n        attrs,\n        slots,\n        name: 'TabList',\n      })\n    }\n  },\n})\n\n// ---\n\nexport let Tab = defineComponent({\n  name: 'Tab',\n  props: {\n    as: { type: [Object, String], default: 'button' },\n    disabled: { type: [Boolean], default: false },\n  },\n  render() {\n    let api = useTabsContext('Tab')\n\n    let slot = { selected: this.selected }\n    let propsWeControl = {\n      ref: 'el',\n      onKeydown: this.handleKeyDown,\n      onFocus: api.activation.value === 'manual' ? this.handleFocus : this.handleSelection,\n      onClick: this.handleSelection,\n      id: this.id,\n      role: 'tab',\n      type: this.type,\n      'aria-controls': api.panels.value[this.myIndex]?.value?.id,\n      'aria-selected': this.selected,\n      tabIndex: this.selected ? 0 : -1,\n      disabled: this.$props.disabled ? true : undefined,\n    }\n\n    return render({\n      props: { ...this.$props, ...propsWeControl },\n      slot,\n      attrs: this.$attrs,\n      slots: this.$slots,\n      name: 'Tab',\n    })\n  },\n  setup(props, { attrs }) {\n    let api = useTabsContext('Tab')\n    let id = `headlessui-tabs-tab-${useId()}`\n\n    let tabRef = ref()\n\n    onMounted(() => api.registerTab(tabRef))\n    onUnmounted(() => api.unregisterTab(tabRef))\n\n    let myIndex = computed(() => api.tabs.value.indexOf(tabRef))\n    let selected = computed(() => myIndex.value === api.selectedIndex.value)\n\n    function handleKeyDown(event: KeyboardEvent) {\n      let list = api.tabs.value.map(tab => dom(tab)).filter(Boolean) as HTMLElement[]\n\n      if (event.key === Keys.Space || event.key === Keys.Enter) {\n        event.preventDefault()\n        event.stopPropagation()\n\n        api.setSelectedIndex(myIndex.value)\n        return\n      }\n\n      switch (event.key) {\n        case Keys.Home:\n        case Keys.PageUp:\n          event.preventDefault()\n          event.stopPropagation()\n\n          return focusIn(list, Focus.First)\n\n        case Keys.End:\n        case Keys.PageDown:\n          event.preventDefault()\n          event.stopPropagation()\n\n          return focusIn(list, Focus.Last)\n      }\n\n      return match(api.orientation.value, {\n        vertical() {\n          if (event.key === Keys.ArrowUp) return focusIn(list, Focus.Previous | Focus.WrapAround)\n          if (event.key === Keys.ArrowDown) return focusIn(list, Focus.Next | Focus.WrapAround)\n          return\n        },\n        horizontal() {\n          if (event.key === Keys.ArrowLeft) return focusIn(list, Focus.Previous | Focus.WrapAround)\n          if (event.key === Keys.ArrowRight) return focusIn(list, Focus.Next | Focus.WrapAround)\n          return\n        },\n      })\n    }\n\n    function handleFocus() {\n      dom(tabRef)?.focus()\n    }\n\n    function handleSelection() {\n      if (props.disabled) return\n\n      dom(tabRef)?.focus()\n      api.setSelectedIndex(myIndex.value)\n    }\n\n    return {\n      el: tabRef,\n      id,\n      selected,\n      myIndex,\n      type: useResolveButtonType(\n        computed(() => ({ as: props.as, type: attrs.type })),\n        tabRef\n      ),\n      handleKeyDown,\n      handleFocus,\n      handleSelection,\n    }\n  },\n})\n\n// ---\n\nexport let TabPanels = defineComponent({\n  name: 'TabPanels',\n  props: {\n    as: { type: [Object, String], default: 'div' },\n  },\n  setup(props, { slots, attrs }) {\n    let api = useTabsContext('TabPanels')\n\n    return () => {\n      let slot = { selectedIndex: api.selectedIndex.value }\n\n      return render({\n        props,\n        slot,\n        attrs,\n        slots,\n        name: 'TabPanels',\n      })\n    }\n  },\n})\n\nexport let TabPanel = defineComponent({\n  name: 'TabPanel',\n  props: {\n    as: { type: [Object, String], default: 'div' },\n    static: { type: Boolean, default: false },\n    unmount: { type: Boolean, default: true },\n  },\n  render() {\n    let api = useTabsContext('TabPanel')\n\n    let slot = { selected: this.selected }\n    let propsWeControl = {\n      ref: 'el',\n      id: this.id,\n      role: 'tabpanel',\n      'aria-labelledby': api.tabs.value[this.myIndex]?.value?.id,\n      tabIndex: this.selected ? 0 : -1,\n    }\n\n    return render({\n      props: { ...this.$props, ...propsWeControl },\n      slot,\n      attrs: this.$attrs,\n      slots: this.$slots,\n      features: Features.Static | Features.RenderStrategy,\n      visible: this.selected,\n      name: 'TabPanel',\n    })\n  },\n  setup() {\n    let api = useTabsContext('TabPanel')\n    let id = `headlessui-tabs-panel-${useId()}`\n\n    let panelRef = ref()\n\n    onMounted(() => api.registerPanel(panelRef))\n    onUnmounted(() => api.unregisterPanel(panelRef))\n\n    let myIndex = computed(() => api.panels.value.indexOf(panelRef))\n    let selected = computed(() => myIndex.value === api.selectedIndex.value)\n\n    return { id, el: panelRef, selected, myIndex }\n  },\n})\n","import { once } from '../../../utils/once'\nimport { disposables } from '../../../utils/disposables'\n\nfunction addClasses(node: HTMLElement, ...classes: string[]) {\n  node && classes.length > 0 && node.classList.add(...classes)\n}\n\nfunction removeClasses(node: HTMLElement, ...classes: string[]) {\n  node && classes.length > 0 && node.classList.remove(...classes)\n}\n\nexport enum Reason {\n  Finished = 'finished',\n  Cancelled = 'cancelled',\n}\n\nfunction waitForTransition(node: HTMLElement, done: (reason: Reason) => void) {\n  let d = disposables()\n\n  if (!node) return d.dispose\n\n  // Safari returns a comma separated list of values, so let's sort them and take the highest value.\n  let { transitionDuration, transitionDelay } = getComputedStyle(node)\n\n  let [durationMs, delaysMs] = [transitionDuration, transitionDelay].map(value => {\n    let [resolvedValue = 0] = value\n      .split(',')\n      // Remove falseys we can't work with\n      .filter(Boolean)\n      // Values are returned as `0.3s` or `75ms`\n      .map(v => (v.includes('ms') ? parseFloat(v) : parseFloat(v) * 1000))\n      .sort((a, z) => z - a)\n\n    return resolvedValue\n  })\n\n  // Waiting for the transition to end. We could use the `transitionend` event, however when no\n  // actual transition/duration is defined then the `transitionend` event is not fired.\n  //\n  // TODO: Downside is, when you slow down transitions via devtools this timeout is still using the\n  // full 100% speed instead of the 25% or 10%.\n  if (durationMs !== 0) {\n    d.setTimeout(() => done(Reason.Finished), durationMs + delaysMs)\n  } else {\n    // No transition is happening, so we should cleanup already. Otherwise we have to wait until we\n    // get disposed.\n    done(Reason.Finished)\n  }\n\n  // If we get disposed before the timeout runs we should cleanup anyway\n  d.add(() => done(Reason.Cancelled))\n\n  return d.dispose\n}\n\nexport function transition(\n  node: HTMLElement,\n  base: string[],\n  from: string[],\n  to: string[],\n  entered: string[],\n  done?: (reason: Reason) => void\n) {\n  let d = disposables()\n  let _done = done !== undefined ? once(done) : () => {}\n\n  removeClasses(node, ...entered)\n  addClasses(node, ...base, ...from)\n\n  d.nextFrame(() => {\n    removeClasses(node, ...from)\n    addClasses(node, ...to)\n\n    d.add(\n      waitForTransition(node, reason => {\n        removeClasses(node, ...to, ...base)\n        addClasses(node, ...entered)\n        return _done(reason)\n      })\n    )\n  })\n\n  // Once we get disposed, we should ensure that we cleanup after ourselves. In case of an unmount,\n  // the node itself will be nullified and will be a no-op. In case of a full transition the classes\n  // are already removed which is also a no-op. However if you go from enter -> leave mid-transition\n  // then we have some leftovers that should be cleaned.\n  d.add(() => removeClasses(node, ...base, ...from, ...to, ...entered))\n\n  // When we get disposed early, than we should also call the done method but switch the reason.\n  d.add(() => _done(Reason.Cancelled))\n\n  return d.dispose\n}\n","export function disposables() {\n  let disposables: Function[] = []\n\n  let api = {\n    requestAnimationFrame(...args: Parameters<typeof requestAnimationFrame>) {\n      let raf = requestAnimationFrame(...args)\n      api.add(() => cancelAnimationFrame(raf))\n    },\n\n    nextFrame(...args: Parameters<typeof requestAnimationFrame>) {\n      api.requestAnimationFrame(() => {\n        api.requestAnimationFrame(...args)\n      })\n    },\n\n    setTimeout(...args: Parameters<typeof setTimeout>) {\n      let timer = setTimeout(...args)\n      api.add(() => clearTimeout(timer))\n    },\n\n    add(cb: () => void) {\n      disposables.push(cb)\n    },\n\n    dispose() {\n      for (let dispose of disposables.splice(0)) {\n        dispose()\n      }\n    },\n  }\n\n  return api\n}\n","export function once<T>(cb: (...args: T[]) => void) {\n  let state = { called: false }\n\n  return (...args: T[]) => {\n    if (state.called) return\n    state.called = true\n    return cb(...args)\n  }\n}\n","import {\n  computed,\n  defineComponent,\n  h,\n  inject,\n  onMounted,\n  onUnmounted,\n  provide,\n  ref,\n  watch,\n  watchEffect,\n\n  // Types\n  InjectionKey,\n  Ref,\n} from 'vue'\n\nimport { useId } from '../../hooks/use-id'\nimport { match } from '../../utils/match'\n\nimport { Features, render, RenderStrategy } from '../../utils/render'\nimport { Reason, transition } from './utils/transition'\nimport { dom } from '../../utils/dom'\nimport {\n  useOpenClosedProvider,\n  State,\n  useOpenClosed,\n  hasOpenClosed,\n} from '../../internal/open-closed'\n\ntype ID = ReturnType<typeof useId>\n\nfunction splitClasses(classes: string = '') {\n  return classes.split(' ').filter(className => className.trim().length > 1)\n}\n\ninterface TransitionContextValues {\n  show: Ref<boolean>\n  appear: Ref<boolean>\n}\nlet TransitionContext = Symbol('TransitionContext') as InjectionKey<TransitionContextValues | null>\n\nenum TreeStates {\n  Visible = 'visible',\n  Hidden = 'hidden',\n}\n\nfunction hasTransitionContext() {\n  return inject(TransitionContext, null) !== null\n}\n\nfunction useTransitionContext() {\n  let context = inject(TransitionContext, null)\n\n  if (context === null) {\n    throw new Error('A <TransitionChild /> is used but it is missing a parent <TransitionRoot />.')\n  }\n\n  return context\n}\n\nfunction useParentNesting() {\n  let context = inject(NestingContext, null)\n\n  if (context === null) {\n    throw new Error('A <TransitionChild /> is used but it is missing a parent <TransitionRoot />.')\n  }\n\n  return context\n}\n\ninterface NestingContextValues {\n  children: Ref<{ id: ID; state: TreeStates }[]>\n  register: (id: ID) => () => void\n  unregister: (id: ID, strategy?: RenderStrategy) => void\n}\n\nlet NestingContext = Symbol('NestingContext') as InjectionKey<NestingContextValues | null>\n\nfunction hasChildren(\n  bag: NestingContextValues['children'] | { children: NestingContextValues['children'] }\n): boolean {\n  if ('children' in bag) return hasChildren(bag.children)\n  return bag.value.filter(({ state }) => state === TreeStates.Visible).length > 0\n}\n\nfunction useNesting(done?: () => void) {\n  let transitionableChildren = ref<NestingContextValues['children']['value']>([])\n\n  let mounted = ref(false)\n  onMounted(() => (mounted.value = true))\n  onUnmounted(() => (mounted.value = false))\n\n  function unregister(childId: ID, strategy = RenderStrategy.Hidden) {\n    let idx = transitionableChildren.value.findIndex(({ id }) => id === childId)\n    if (idx === -1) return\n\n    match(strategy, {\n      [RenderStrategy.Unmount]() {\n        transitionableChildren.value.splice(idx, 1)\n      },\n      [RenderStrategy.Hidden]() {\n        transitionableChildren.value[idx].state = TreeStates.Hidden\n      },\n    })\n\n    if (!hasChildren(transitionableChildren) && mounted.value) {\n      done?.()\n    }\n  }\n\n  function register(childId: ID) {\n    let child = transitionableChildren.value.find(({ id }) => id === childId)\n    if (!child) {\n      transitionableChildren.value.push({ id: childId, state: TreeStates.Visible })\n    } else if (child.state !== TreeStates.Visible) {\n      child.state = TreeStates.Visible\n    }\n\n    return () => unregister(childId, RenderStrategy.Unmount)\n  }\n\n  return {\n    children: transitionableChildren,\n    register,\n    unregister,\n  }\n}\n\n// ---\n\nlet TransitionChildRenderFeatures = Features.RenderStrategy\n\nexport let TransitionChild = defineComponent({\n  props: {\n    as: { type: [Object, String], default: 'div' },\n    show: { type: [Boolean], default: null },\n    unmount: { type: [Boolean], default: true },\n    appear: { type: [Boolean], default: false },\n    enter: { type: [String], default: '' },\n    enterFrom: { type: [String], default: '' },\n    enterTo: { type: [String], default: '' },\n    entered: { type: [String], default: '' },\n    leave: { type: [String], default: '' },\n    leaveFrom: { type: [String], default: '' },\n    leaveTo: { type: [String], default: '' },\n  },\n  emits: {\n    beforeEnter: () => true,\n    afterEnter: () => true,\n    beforeLeave: () => true,\n    afterLeave: () => true,\n  },\n  render() {\n    if (this.renderAsRoot) {\n      return h(\n        TransitionRoot,\n        {\n          ...this.$props,\n          onBeforeEnter: () => this.$emit('beforeEnter'),\n          onAfterEnter: () => this.$emit('afterEnter'),\n          onBeforeLeave: () => this.$emit('beforeLeave'),\n          onAfterLeave: () => this.$emit('afterLeave'),\n        },\n        this.$slots\n      )\n    }\n\n    let {\n      appear,\n      show,\n\n      // Class names\n      enter,\n      enterFrom,\n      enterTo,\n      entered,\n      leave,\n      leaveFrom,\n      leaveTo,\n      ...rest\n    } = this.$props\n\n    let propsWeControl = { ref: 'el' }\n    let passthroughProps = rest\n\n    return render({\n      props: { ...passthroughProps, ...propsWeControl },\n      slot: {},\n      slots: this.$slots,\n      attrs: this.$attrs,\n      features: TransitionChildRenderFeatures,\n      visible: this.state === TreeStates.Visible,\n      name: 'TransitionChild',\n    })\n  },\n  setup(props, { emit }) {\n    if (!hasTransitionContext() && hasOpenClosed()) {\n      return {\n        renderAsRoot: true,\n      }\n    }\n\n    let container = ref<HTMLElement | null>(null)\n    let state = ref(TreeStates.Visible)\n    let strategy = computed(() => (props.unmount ? RenderStrategy.Unmount : RenderStrategy.Hidden))\n\n    let { show, appear } = useTransitionContext()\n    let { register, unregister } = useParentNesting()\n\n    let initial = { value: true }\n\n    let id = useId()\n\n    let isTransitioning = { value: false }\n\n    let nesting = useNesting(() => {\n      // When all children have been unmounted we can only hide ourselves if and only if we are not\n      // transitioning ourselves. Otherwise we would unmount before the transitions are finished.\n      if (!isTransitioning.value) {\n        state.value = TreeStates.Hidden\n        unregister(id)\n        emit('afterLeave')\n      }\n    })\n\n    onMounted(() => {\n      let unregister = register(id)\n      onUnmounted(unregister)\n    })\n\n    watchEffect(() => {\n      // If we are in another mode than the Hidden mode then ignore\n      if (strategy.value !== RenderStrategy.Hidden) return\n      if (!id) return\n\n      // Make sure that we are visible\n      if (show && state.value !== TreeStates.Visible) {\n        state.value = TreeStates.Visible\n        return\n      }\n\n      match(state.value, {\n        [TreeStates.Hidden]: () => unregister(id),\n        [TreeStates.Visible]: () => register(id),\n      })\n    })\n\n    let enterClasses = splitClasses(props.enter)\n    let enterFromClasses = splitClasses(props.enterFrom)\n    let enterToClasses = splitClasses(props.enterTo)\n\n    let enteredClasses = splitClasses(props.entered)\n\n    let leaveClasses = splitClasses(props.leave)\n    let leaveFromClasses = splitClasses(props.leaveFrom)\n    let leaveToClasses = splitClasses(props.leaveTo)\n\n    onMounted(() => {\n      watchEffect(() => {\n        if (state.value === TreeStates.Visible) {\n          let domElement = dom(container)\n          // When you return `null` from a component, the actual DOM reference will\n          // be an empty comment... This means that we can never check for the DOM\n          // node to be `null`. So instead we check for an empty comment.\n          let isEmptyDOMNode = domElement instanceof Comment && domElement.data === ''\n          if (isEmptyDOMNode) {\n            throw new Error('Did you forget to passthrough the `ref` to the actual DOM node?')\n          }\n        }\n      })\n    })\n\n    function executeTransition(onInvalidate: (cb: () => void) => void) {\n      // Skipping initial transition\n      let skip = initial.value && !appear.value\n\n      let node = dom(container)\n      if (!node || !(node instanceof HTMLElement)) return\n      if (skip) return\n\n      isTransitioning.value = true\n\n      if (show.value) emit('beforeEnter')\n      if (!show.value) emit('beforeLeave')\n\n      onInvalidate(\n        show.value\n          ? transition(\n              node,\n              enterClasses,\n              enterFromClasses,\n              enterToClasses,\n              enteredClasses,\n              reason => {\n                isTransitioning.value = false\n                if (reason === Reason.Finished) emit('afterEnter')\n              }\n            )\n          : transition(\n              node,\n              leaveClasses,\n              leaveFromClasses,\n              leaveToClasses,\n              enteredClasses,\n              reason => {\n                isTransitioning.value = false\n\n                if (reason !== Reason.Finished) return\n\n                // When we don't have children anymore we can safely unregister from the parent and hide\n                // ourselves.\n                if (!hasChildren(nesting)) {\n                  state.value = TreeStates.Hidden\n                  unregister(id)\n                  emit('afterLeave')\n                }\n              }\n            )\n      )\n    }\n\n    onMounted(() => {\n      watch(\n        [show, appear],\n        (_oldValues, _newValues, onInvalidate) => {\n          executeTransition(onInvalidate)\n          initial.value = false\n        },\n        { immediate: true }\n      )\n    })\n\n    provide(NestingContext, nesting)\n    useOpenClosedProvider(\n      computed(() =>\n        match(state.value, {\n          [TreeStates.Visible]: State.Open,\n          [TreeStates.Hidden]: State.Closed,\n        })\n      )\n    )\n\n    return { el: container, renderAsRoot: false, state }\n  },\n})\n\n// ---\n\nexport let TransitionRoot = defineComponent({\n  inheritAttrs: false,\n  props: {\n    as: { type: [Object, String], default: 'div' },\n    show: { type: [Boolean], default: null },\n    unmount: { type: [Boolean], default: true },\n    appear: { type: [Boolean], default: false },\n    enter: { type: [String], default: '' },\n    enterFrom: { type: [String], default: '' },\n    enterTo: { type: [String], default: '' },\n    entered: { type: [String], default: '' },\n    leave: { type: [String], default: '' },\n    leaveFrom: { type: [String], default: '' },\n    leaveTo: { type: [String], default: '' },\n  },\n  emits: {\n    beforeEnter: () => true,\n    afterEnter: () => true,\n    beforeLeave: () => true,\n    afterLeave: () => true,\n  },\n  render() {\n    let { show, appear, unmount, ...passThroughProps } = this.$props\n    let sharedProps = { unmount }\n\n    return render({\n      props: {\n        ...sharedProps,\n        as: 'template',\n      },\n      slot: {},\n      slots: {\n        ...this.$slots,\n        default: () => [\n          h(\n            TransitionChild,\n            {\n              onBeforeEnter: () => this.$emit('beforeEnter'),\n              onAfterEnter: () => this.$emit('afterEnter'),\n              onBeforeLeave: () => this.$emit('beforeLeave'),\n              onAfterLeave: () => this.$emit('afterLeave'),\n              ...this.$attrs,\n              ...sharedProps,\n              ...passThroughProps,\n            },\n            this.$slots.default\n          ),\n        ],\n      },\n      attrs: {},\n      features: TransitionChildRenderFeatures,\n      visible: this.state === TreeStates.Visible,\n      name: 'Transition',\n    })\n  },\n  setup(props) {\n    let usesOpenClosedState = useOpenClosed()\n\n    let show = computed(() => {\n      if (props.show === null && usesOpenClosedState !== null) {\n        return match(usesOpenClosedState.value, {\n          [State.Open]: true,\n          [State.Closed]: false,\n        })\n      }\n\n      return props.show\n    })\n\n    watchEffect(() => {\n      if (![true, false].includes(show.value)) {\n        throw new Error('A <Transition /> is used but it is missing a `:show=\"true | false\"` prop.')\n      }\n    })\n\n    let state = ref(show.value ? TreeStates.Visible : TreeStates.Hidden)\n\n    let nestingBag = useNesting(() => {\n      state.value = TreeStates.Hidden\n    })\n\n    let initial = { value: true }\n    let transitionBag = {\n      show,\n      appear: computed(() => props.appear || !initial.value),\n    }\n\n    onMounted(() => {\n      watchEffect(() => {\n        initial.value = false\n\n        if (show.value) {\n          state.value = TreeStates.Visible\n        } else if (!hasChildren(nestingBag)) {\n          state.value = TreeStates.Hidden\n        }\n      })\n    })\n\n    provide(NestingContext, nestingBag)\n    provide(TransitionContext, transitionBag)\n\n    return { state, show }\n  },\n})\n"],"names":["match","value","lookup","returnValue","args","error","Error","Object","keys","map","key","join","captureStackTrace","Features","RenderStrategy","Keys","render","visible","features","None","main","Static","props","_render","unmount","Unmount","Hidden","hidden","style","display","input","attrs","slots","slot","name","omit","as","passThroughProps","children","length","firstChild","other","type","concat","line","cloneVNode","Array","isArray","h","object","keysToOmit","clone","assign","id","useId","Focus","FocusResult","Direction","FocusableMode","focusableSelector","selector","getFocusableElements","container","document","body","from","querySelectorAll","focusElement","element","focus","preventScroll","focusIn","elements","slice","sort","a","b","position","compareDocumentPosition","Node","DOCUMENT_POSITION_FOLLOWING","DOCUMENT_POSITION_PRECEDING","active","activeElement","direction","First","Next","Previous","Last","startIndex","Math","max","indexOf","focusOptions","NoScroll","offset","total","next","undefined","nextIdx","WrapAround","Underflow","Overflow","hasAttribute","setAttribute","Success","useWindowEvent","listener","options","window","watchEffect","onInvalidate","addEventListener","removeEventListener","contains","containers","useFocusTrap","enabled","ref","restoreElement","previousActiveElement","handleFocus","size","initialFocus","couldFocus","console","warn","restore","onUpdated","onUnmounted","event","Tab","preventDefault","shiftKey","previous","toElement","target","HTMLElement","stopPropagation","interactables","Set","originals","Map","inert","original","get","removeAttribute","StackMessage","StackContext","Symbol","useStackContext","inject","useStackProvider","onUpdate","parentUpdate","provide","ForcePortalRootContext","ForcePortalRoot","defineComponent","String","force","Boolean","setup","Portal","forcePortalRoot","groupContext","PortalGroupContext","myTarget","existingRoot","getElementById","root","createElement","appendChild","getPortalRoot","resolveTarget","notify","domElement","AddElement","RemoveElement","useElemenStack","parentElement","removeChild","Teleport","to","PortalGroup","api","reactive","DescriptionContext","useDescriptions","descriptionIds","register","push","idx","splice","computed","Description","this","context","$props","propsWeControl","entries","reduce","acc","unref","$attrs","$slots","useDescriptionContext","onMounted","dom","$el","State","DialogStates","Context","useOpenClosed","useOpenClosedProvider","DialogContext","useDialogContext","component","err","DisclosureStates","Missing","Dialog","inheritAttrs","open","emits","close","_close","role","dialogState","Open","titleId","describedby","onClick","handleClick","_","_this","dialogRef","emit","usesOpenClosedState","Closed","internalDialogRef","focusTrapOptions","add","forEach","child","set","getAttribute","has","useInertOthers","message","setTitleId","nextTick","Escape","overflow","documentElement","paddingRight","scrollbarWidth","innerWidth","clientWidth","observer","IntersectionObserver","entry","boundingClientRect","x","y","width","height","observe","disconnect","el","DialogOverlay","currentTarget","DialogTitle","DialogDescription","resolveType","tag","toLowerCase","useResolveButtonType","data","refElement","HTMLButtonElement","_dom","DisclosureContext","useDisclosureContext","ListboxStates","DisclosurePanelContext","Disclosure","defaultOpen","buttonId","panelId","disclosureState","panelRef","buttonRef","panel","button","toggleDisclosure","closeDisclosure","focusableElement","DisclosureButton","disabled","isWithinPanel","onKeydown","handleKeyDown","onKeyup","handleKeyUp","panelContext","elementRef","Space","Enter","DisclosurePanel","FocusTrap","calculateActiveIndex","action","resolvers","items","resolveItems","currentActiveIndex","resolveActiveIndex","activeIndex","nextActiveIndex","findIndex","item","resolveDisabled","reverse","all","Specific","resolveId","Nothing","assertNever","ListboxContext","useListboxContext","MenuStates","Listbox","_value","horizontal","modelValue","Number","listboxState","labelRef","optionsRef","searchQuery","activeOptionIndex","orientation","closeListbox","openListbox","goToOption","nextActiveOptionIndex","option","dataRef","search","textValue","startsWith","clearSearch","registerOption","unregisterOption","nextOptions","currentActiveOption","select","_dom2","defaultPrevented","ListboxLabel","ListboxButton","_dom5","_dom6","ArrowDown","ArrowUp","cb","_dom9","_dom10","requestAnimationFrame","ListboxOptions","_api$options$value$ap","_dom11","_dom12","tabIndex","searchDebounce","clearTimeout","_dom13","vertical","ArrowRight","ArrowLeft","Home","PageUp","End","PageDown","_dom14","setTimeout","ListboxOption","selected","toRaw","_dom15","handleMove","handleLeave","_document$getElementB","textContent","_document$getElementB2","trim","watch","immediate","_document$getElementB4","scrollIntoView","block","onFocus","onPointermove","onMousemove","onPointerleave","onMouseleave","useTreeWalker","accept","walk","acceptNode","node","walker","createTreeWalker","NodeFilter","SHOW_ELEMENT","nextNode","currentNode","MenuContext","useMenuContext","PopoverStates","Menu","menuState","itemsRef","activeItemIndex","closeMenu","openMenu","goToItem","nextActiveItemIndex","registerItem","unregisterItem","nextItems","currentActiveItem","MenuButton","_dom4","_dom7","_dom8","MenuItems","_api$items$value$api$","FILTER_REJECT","FILTER_SKIP","FILTER_ACCEPT","click","MenuItem","_document$getElementB3","PopoverContext","usePopoverContext","Popover","PopoverGroupContext","usePopoverGroupContext","PopoverPanelContext","popoverState","togglePopover","closePopover","registerBag","registerPopover","isFocusWithinPopoverGroup","mode","_dom3","Loose","Strict","matches","PopoverButton","closeOthers","activeElementRef","previousActiveElementRef","focusableElements","previousIdx","PopoverOverlay","PopoverPanel","result","_dom16","buttonIdx","filter","_dom17","_dom18","_dom19","PopoverGroup","groupRef","popovers","unregisterPopover","_dom21","some","bag","popover","LabelContext","useLabelContext","useLabels","labelIds","Label","passive","allProps","RadioGroupContext","useRadioGroupContext","OptionState","RadioGroup","labelledby","radioGroupRef","firstOption","find","propsRef","containsCheckedOption","change","nextValue","nextOption","_options$value$find","orderMap","_radioGroupRef$value","index","z","radio","activeOption","RadioGroupOption","checked","state","Active","onBlur","handleBlur","optionRef","Empty","isFirstOption","RadioGroupLabel","RadioGroupDescription","GroupContext","SwitchGroup","switchRef","Switch","onKeypress","handleKeyPress","toggle","internalSwitchRef","SwitchLabel","SwitchDescription","TabsContext","useTabsContext","Reason","TabGroup","_index","selectedIndex","defaultIndex","manual","tabs","panels","activation","setSelectedIndex","registerTab","tab","includes","unregisterTab","registerPanel","unregisterPanel","focusableTabs","indexToSet","before","after","TabList","handleSelection","myIndex","_api$panels$value$thi","_api$panels$value$thi2","tabRef","list","TabPanels","TabPanel","_api$tabs$value$this$","_api$tabs$value$this$2","disposables","raf","cancelAnimationFrame","nextFrame","timer","dispose","addClasses","classes","classList","removeClasses","remove","transition","base","entered","done","d","_done","called","getComputedStyle","transitionDuration","transitionDelay","split","v","parseFloat","durationMs","Finished","Cancelled","waitForTransition","reason","splitClasses","className","TreeStates","TransitionContext","NestingContext","hasChildren","Visible","useNesting","transitionableChildren","mounted","unregister","childId","strategy","TransitionChildRenderFeatures","TransitionChild","show","appear","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","beforeEnter","afterEnter","beforeLeave","afterLeave","renderAsRoot","TransitionRoot","onBeforeEnter","$emit","onAfterEnter","onBeforeLeave","onAfterLeave","useTransitionContext","useParentNesting","initial","isTransitioning","nesting","enterClasses","enterFromClasses","enterToClasses","enteredClasses","leaveClasses","leaveFromClasses","leaveToClasses","Comment","_oldValues","_newValues","skip","executeTransition","sharedProps","_this2","nestingBag","transitionBag"],"mappings":"g4CAAgBA,EACdC,EACAC,MAGID,KAASC,EAAQ,SACfC,EAAcD,EAAOD,sBAHxBG,mCAAAA,0BAI6B,mBAAhBD,EAA6BA,eAAeC,GAAQD,MAGhEE,EAAQ,IAAIC,0BACML,mEAAsEM,OAAOC,KAC/FN,GAECO,KAAI,SAAAC,aAAWA,SACfC,KAAK,iBAENL,MAAMM,mBAAmBN,MAAMM,kBAAkBP,EAAOL,GACtDK,ECfR,IAAYQ,EAoBAC,ECrBAC,WD0BIC,iBACdC,QAAAA,oBACAC,SAAAA,aAAWL,EAASM,OACjBC,qCAYCH,GAEAC,EAAWL,EAASQ,QAElBD,EAAKE,aAJSC,EAAQH,GAOxBF,EAAWL,EAASC,eAGfd,WAFQoB,EAAKE,MAAME,YAAkBV,EAAeW,QAAUX,EAAeY,eAGjFZ,EAAeW,2BACP,QAERX,EAAeY,0BACPH,OACFH,GACHE,WAAYF,EAAKE,OAAOK,QAAQ,EAAMC,MAAO,CAAEC,QAAS,kBAOzDN,EAAQH,GAGjB,SAASG,SAiEeO,EA/DtBC,IAAAA,MACAC,IAAAA,MACAC,IAAAA,KACAC,IAAAA,OAQkCC,IAZlCb,MAY8C,CAAC,UAAW,WAApDc,IAAAA,GAAOC,cAETC,QAAWN,iBAAAA,UAAgBC,MAEpB,aAAPG,EAAmB,IACjB7B,OAAOC,KAAK6B,GAAkBE,OAAS,GAAKhC,OAAOC,KAAKuB,GAAOQ,OAAS,EAAG,aAChDD,EAAAA,EAAY,GAApCE,OAAeC,gBA+CX,OADSX,EA5CEU,IA8CE,iBAAfV,EAAMY,MACS,iBAAfZ,EAAMY,MACS,mBAAfZ,EAAMY,MAhDsBD,EAAMF,OAAS,QAC1C,IAAIjC,MACR,CACE,+BACA,6BAC0B4B,yFAE1B3B,OAAOC,KAAK6B,GACTM,OAAOpC,OAAOC,KAAKuB,IACnBtB,KAAI,SAAAmC,gBAAeA,KACnBjC,KAAK,MACR,GACA,iCACA,CACE,8FACA,4FAECF,KAAI,SAAAmC,gBAAeA,KACnBjC,KAAK,OACRA,KAAK,cAIJkC,aAAWL,EAAYH,UAG5BS,MAAMC,QAAQT,IAAiC,IAApBA,EAASC,OAC/BD,EAAS,GAGXA,SAGFU,IAAEZ,EAAIC,EAAkBC,YAGjBH,EAAiCc,EAAWC,YAAAA,IAAAA,EAAuB,cAC7EC,EAAQ5C,OAAO6C,OAAO,GAAIH,OACdC,kBAAY,KAAnBxC,UACHA,KAAOyC,UAAcA,EAAMzC,UAE1ByC,GAjIT,SAAYtC,GAEVA,mBASAA,uCAMAA,uBAjBF,CAAYA,IAAAA,OAoBZ,SAAYC,GACVA,yBACAA,uBAFF,CAAYA,IAAAA,OCrBZ,SAAYC,GACVA,YACAA,gBACAA,kBACAA,wBAEAA,wBACAA,oBACAA,0BACAA,wBAEAA,cACAA,YAEAA,kBACAA,sBAEAA,YAjBF,CAAYA,IAAAA,OCFZ,IAAIsC,EAAK,WAKOC,YAHLD,ECEX,IAqBYE,EAoBAC,EAOPC,EAUOC,EA1DRC,EAAoB,CACtB,yBACA,aACA,UACA,aACA,yBACA,SACA,wBACA,yBACA,4BAEClD,KAMK,SAAAmD,UAAeA,6BAEpBjD,KAAK,cAkCQkD,EAAqBC,mBAAAA,IAAAA,EAAgCC,SAASC,MAC3D,MAAbF,EAA0B,GACvBhB,MAAMmB,KAAKH,EAAUI,iBAA8BP,aAkC5CQ,EAAaC,SAC3BA,GAAAA,EAASC,MAAM,CAAEC,eAAe,aAGlBC,EAAQT,EAAwCO,OAC1DG,EAAW1B,MAAMC,QAAQe,GACzBA,EAAUW,QAAQC,MAAK,SAACC,EAAGC,OACrBC,EAAWF,EAAEG,wBAAwBF,UAErCC,EAAWE,KAAKC,6BAAqC,EACrDH,EAAWE,KAAKE,4BAAoC,EACjD,KAETpB,EAAqBC,GACrBoB,EAASnB,SAASoB,cAElBC,EAAa,cACXf,GAASd,EAAM8B,MAAQ9B,EAAM+B,MAAO,OAAO7B,EAAU6B,QACrDjB,GAASd,EAAMgC,SAAWhC,EAAMiC,MAAO,OAAO/B,EAAU8B,eAEtD,IAAIjF,MAAM,iEAJD,GAObmF,EAAc,cACZpB,EAAQd,EAAM8B,MAAO,OAAO,KAC5BhB,EAAQd,EAAMgC,SAAU,OAAOG,KAAKC,IAAI,EAAGnB,EAASoB,QAAQV,IAAW,KACvEb,EAAQd,EAAM+B,KAAM,OAAOI,KAAKC,IAAI,EAAGnB,EAASoB,QAAQV,IAAW,KACnEb,EAAQd,EAAMiC,KAAM,OAAOhB,EAASjC,OAAS,QAE3C,IAAIjC,MAAM,iEANA,GASduF,EAAexB,EAAQd,EAAMuC,SAAW,CAAExB,eAAe,GAAS,GAElEyB,EAAS,EACTC,EAAQxB,EAASjC,OACjB0D,OAAOC,IACR,UAEGH,GAAUC,GAASD,EAASC,GAAS,EAAG,OAAOxC,EAAYlD,UAE3D6F,EAAUV,EAAaM,KAEvB1B,EAAQd,EAAM6C,WAChBD,GAAWA,EAAUH,GAASA,MACzB,IACDG,EAAU,EAAG,OAAO3C,EAAY6C,aAChCF,GAAWH,EAAO,OAAOxC,EAAY8C,kBAG3CL,EAAOzB,EAAS2B,OAGV9B,MAAMwB,GAGZE,GAAUX,QACHa,IAASlC,SAASoB,sBAStBc,EAAKM,aAAa,aAAaN,EAAKO,aAAa,WAAY,KAE3DhD,EAAYiD,iBC/JLC,EACdhE,EACAiE,EACAC,GAEsB,oBAAXC,QAEXC,eAAY,SAAAC,GACVF,OAAOG,iBAAiBtE,EAAMiE,EAAUC,GAExCG,GAAa,WACXF,OAAOI,oBAAoBvE,EAAMiE,EAAUC,kBCbjCM,EAASC,EAA8B/C,iBAC/B+C,6BACND,SAAS9C,GAAU,OAAO,SAGnC,WCUOgD,EACdD,EACAE,EACAT,YADAS,IAAAA,EAAwBC,OAAI,aAC5BV,IAAAA,EAAsDU,MAAI,SAEtDC,EAAiBD,MACD,oBAAXT,OAA0B9C,SAASoB,cAAgC,MAExEqC,EAAwBF,MAAwB,eAE3CG,OACFJ,EAAQpH,OACiB,IAA1BkH,EAAWlH,MAAMyH,UACfC,EAAiBf,EAAQ3G,MAAzB0H,aAEFxC,EAAgBpB,SAASoB,iBAEzBwC,MACEA,IAAiBxC,cAGhB,GAAI+B,EAASC,EAAWlH,MAAOkF,aAItCoC,EAAetH,MAAQkF,EAGnBwC,EACFxD,EAAawD,OACR,WACDC,GAAa,MACKT,EAAWlH,yBAClBsE,UAAmBhB,EAAM8B,SACvB7B,EAAYiD,QAAS,CAClCmB,GAAa,QAKZA,GAAYC,QAAQC,KAAK,4DAGhCN,EAAsBvH,MAAQ8D,SAASoB,wBAIhC4C,IACP5D,EAAaoD,EAAetH,OAC5BsH,EAAetH,MAAQ,KACvBuH,EAAsBvH,MAAQ,KAIhC6G,cAAYW,GAEZO,aAAU,WACRX,EAAQpH,MAAQwH,IAAgBM,OAElCE,cAAYF,GAGZrB,EAAe,WAAW,SAAAwB,MACnBb,EAAQpH,OACTiI,EAAMxH,MAAQK,EAAKoH,KAClBpE,SAASoB,eACgB,IAA1BgC,EAAWlH,MAAMyH,MAErBQ,EAAME,+BAEcjB,EAAWlH,yBAChBsE,WAEV2D,EAAMG,SAAW9E,EAAMgC,SAAWhC,EAAM+B,MAAQ/B,EAAM6C,cAG1C5C,EAAYiD,QAAS,CAClCe,EAAsBvH,MAAQ8D,SAASoB,yBAO7CuB,EACE,SACA,SAAAwB,MACOb,EAAQpH,OACiB,IAA1BkH,EAAWlH,MAAMyH,UAEjBY,EAAWd,EAAsBvH,SAChCqI,OAEDC,EAAYL,EAAMM,OAElBD,GAAaA,aAAqBE,YAC/BvB,EAASC,EAAWlH,MAAOsI,IAK9Bf,EAAsBvH,MAAQsI,EAC9BpE,EAAaoE,KALbL,EAAME,iBACNF,EAAMQ,kBACNvE,EAAamE,IAMfnE,EAAaqD,EAAsBvH,YAGvC,IHlGJ,SAAYsD,GAEVA,qBAGAA,2BAGAA,mBAGAA,mBAGAA,gCAGAA,4BAjBF,CAAYA,IAAAA,OAoBZ,SAAYC,GACVA,qBACAA,2BACAA,yBACAA,6BAJF,CAAYA,IAAAA,OAOZ,SAAKC,GACHA,4BACAA,mBAFF,CAAKA,IAAAA,OAUL,SAAYC,GAEVA,uBAGAA,qBALF,CAAYA,IAAAA,OIrDZ,IAEIiF,EAAgB,IAAIC,IACpBC,EAAY,IAAIC,IAEpB,SAASC,EAAM3E,GACbA,EAAQoC,aAAa,cAAe,QAEpCpC,EAAQ2E,OAAQ,EAGlB,SAAShB,EAAQ3D,OACX4E,EAAWH,EAAUI,IAAI7E,GACxB4E,IAE2B,OAA5BA,EAAS,eAAyB5E,EAAQ8E,gBAAgB,eACzD9E,EAAQoC,aAAa,cAAewC,EAAS,gBAElD5E,EAAQ2E,MAAQC,EAASD,OCf3B,IAEYI,EAFRC,EAAeC,OAAO,yBAOVC,WACPC,SAAOH,GAAc,wBAedI,EAAiBC,OAC3BC,EAAeJ,IAUnBK,UAAQP,yCARWhJ,2BAAAA,wBAEjBqJ,GAAAA,eAAcrJ,GAGdsJ,eAAgBtJ,OA7BpB,SAAY+I,GACVA,+BACAA,qCAFF,CAAYA,IAAAA,OCJZ,IAAIS,EAAyBP,OAAO,0BAMzBQ,EAAkBC,kBAAgB,CAC3C5H,KAAM,kBACNZ,MAAO,CACLc,GAAI,CAAEM,KAAM,CAACnC,OAAQwJ,gBAAkB,YACvCC,MAAO,CAAEtH,KAAMuH,iBAAkB,IAEnCC,eAAM5I,SAASU,IAAAA,MAAOD,IAAAA,aACpB4H,UAAQC,EAAwBtI,EAAM0I,OAE/B,kBAEEhJ,EAAO,CAAEM,QADqBA,aACIW,KAAM,GAAID,MAAAA,EAAOD,MAAAA,EAAOG,KAAM,wBCGlEiI,EAASL,kBAAgB,CAClC5H,KAAM,SACNZ,MAAO,CACLc,GAAI,CAAEM,KAAM,CAACnC,OAAQwJ,gBAAkB,QAEzCG,eAAM5I,SAASU,IAAAA,MAAOD,IAAAA,MAChBqI,EDvBCb,SAAOK,GAAwB,GCwBhCS,EAAed,SAAOe,EAAoB,MAC1CC,EAAWjD,OACO,IAApB8C,GAEqB,OAAjBC,iBAnBJG,EAAezG,SAAS0G,eAAe,6BACvCD,EAAc,OAAOA,MAErBE,EAAO3G,SAAS4G,cAAc,cAClCD,EAAKlE,aAAa,KAAM,0BACjBzC,SAASC,KAAK4G,YAAYF,GAazBG,GAGAR,EAAaS,iBAGnBhE,eAAY,WACNsD,GACiB,OAAjBC,IACJE,EAAStK,MAAQoK,EAAaS,wBAG5B1G,EAAUkD,MAAI,sBF7BSlD,OACzB2G,EAASzB,IAEbxC,eAAY,SAAAC,OACNiE,QAAa5G,SAAAA,EAASnE,MACrB+K,IAELD,EAAO5B,EAAa8B,WAAYD,GAChCjE,GAAa,kBAAMgE,EAAO5B,EAAa+B,cAAeF,UEsBtDG,CAAe/G,GAEf6D,eAAY,iBACNyC,EAAO3G,SAAS0G,eAAe,0BAC9BC,GACDH,EAAStK,QAAUyK,GAEnBH,EAAStK,MAAMqC,SAASC,QAAU,aACpCgI,EAAStK,MAAMmL,kBAAeC,YAAYd,EAAStK,WAIvDuJ,IAEO,kBACkB,OAAnBe,EAAStK,MAAuB,KAM7B+C,IAGLsI,WACA,CAAEC,GAAIhB,EAAStK,OACfe,EAAO,CACLM,WAAYA,EAVK,CACnBgG,IAAKlD,IAUHnC,KAAM,GACNF,MAAAA,EACAC,MAAAA,EACAE,KAAM,gBASZoI,EAAqBjB,OAAO,sBAIrBmC,EAAc1B,kBAAgB,CACvC5H,KAAM,cACNZ,MAAO,CACLc,GAAI,CAAEM,KAAM,CAACnC,OAAQwJ,gBAAkB,YACvCvB,OAAQ,CAAE9F,KAAMnC,eAAiD,OAEnE2J,eAAM5I,SAASS,IAAAA,MAAOC,IAAAA,MAChByJ,EAAMC,WAAS,CACjBZ,gCACSxJ,EAAMkH,iBAIjBmB,UAAQW,EAAoBmB,GAErB,kBAGEzK,EAAO,CAAEM,QAFyBA,cAEAW,KAAM,GAAIF,MAAAA,EAAOC,MAAAA,EAAOE,KAAM,oBC9FzEyJ,EAAqBtC,OAAO,+BAehBuC,sBAQZ,SAPF3J,KAAAA,aAAOqF,MAAI,UACXpF,KAAAA,aAAO,oBACPZ,MAAAA,aAAQ,KAMJuK,EAAiBvE,MAAc,WAYnCqC,UAAQgC,EAAoB,CAAEG,kBAVZ7L,UAChB4L,EAAe5L,MAAM8L,KAAK9L,GAEnB,eACD+L,EAAMH,EAAe5L,MAAM2F,QAAQ3F,IAC1B,IAAT+L,GACJH,EAAe5L,MAAMgM,OAAOD,EAAK,KAIG/J,KAAAA,EAAMC,KAAAA,EAAMZ,MAAAA,IAG7C4K,YAAS,kBACdL,EAAe5L,MAAMsC,OAAS,EAAIsJ,EAAe5L,MAAMU,KAAK,UAAOuF,KAMhE,IAAIiG,EAAcrC,kBAAgB,CACvC5H,KAAM,cACNZ,MAAO,CACLc,GAAI,CAAEM,KAAM,CAACnC,OAAQwJ,gBAAkB,MAEzC/I,wBAC6DoL,KAAKC,YAA1DnK,KAAAA,aAAO,oBAAeD,KAAAA,aAAOqF,MAAI,UAAKhG,MACxCe,EAAmB+J,KAAKE,OACxBC,OACChM,OAAOiM,mBAHwC,MAGzBC,QACvB,SAACC,kBAAsBnM,OAAO6C,OAAOsJ,gBAAcC,oBACnD,KAEFtJ,GAAI+I,KAAK/I,YAGJrC,EAAO,CACZM,WAAYe,EAAqBkK,GACjCtK,KAAMA,EAAKhC,MACX8B,MAAOqK,KAAKQ,OACZ5K,MAAOoK,KAAKS,OACZ3K,KAAAA,KAGJgI,qBACMmC,EAhER,eACMA,EAAU9C,SAAOoC,EAAoB,SACzB,OAAZU,QACI,IAAI/L,MAAM,yBAEX+L,EA2DSS,GACVzJ,4BAA+BC,WAEnCyJ,aAAU,kBAAM9E,cAAYoE,EAAQP,SAASzI,OAEtC,CAAEA,GAAAA,EAAIgJ,QAAAA,eC/FDW,EAA2B1F,gBAC9B,MAAPA,GACa,MAAbA,EAAIrH,MADgB,cAEfqH,EAAkCrH,MAAMgN,OAAO3F,EAAIrH,MCI9D,IAEYiN,ECwBPC,ED1BDC,EAAU/D,OAAO,oBAWLgE,WACP9D,SAAO6D,EAAS,eAGTE,EAAsBrN,GACpC0J,UAAQyD,EAASnN,IAdnB,SAAYiN,GACVA,mBACAA,uBAFF,CAAYA,IAAAA,OCwBZ,SAAKC,GACHA,mBACAA,uBAFF,CAAKA,IAAAA,OAeL,IAAII,EAAgBlE,OAAO,iBAE3B,SAASmE,EAAiBC,OACpBpB,EAAU9C,SAAOgE,EAAe,SACpB,OAAZlB,EAAkB,KAChBqB,EAAM,IAAIpN,UAAUmN,yDACpBnN,MAAMM,mBAAmBN,MAAMM,kBAAkB8M,EAAKF,GACpDE,SAEDrB,EAKT,IC5CKsB,ED4CDC,EAAU,uCAEHC,EAAS/D,kBAAgB,CAClC5H,KAAM,SACN4L,cAAc,EACdxM,MAAO,CACLc,GAAI,CAAEM,KAAM,CAACnC,OAAQwJ,gBAAkB,cAC/B,CAAErH,KAAMuH,iBAAkB,GAClCzI,QAAS,CAAEkB,KAAMuH,iBAAkB,GACnC8D,KAAM,CAAErL,KAAM,CAACuH,QAASF,gBAAkB6D,GAC1CjG,aAAc,CAAEjF,KAAMnC,eAAiD,OAEzEyN,MAAO,CAAEC,MAAO,SAACC,UAAoB,IACrClN,6BACMuL,OAGCH,KAAKQ,QACRtF,IAAK,KACLjE,GAAI+I,KAAK/I,GACT8K,KAAM,sBACQ/B,KAAKgC,cAAgBjB,EAAakB,WAAcnI,oBAC3CkG,KAAKkC,2BACJlC,KAAKmC,YACzBC,QAASpC,KAAKqC,cAEJC,IAAyCtC,KAAKE,gCAEtDrK,EAAO,CAAE8L,KAAM3B,KAAKgC,cAAgBjB,EAAakB,aAE9CrL,IAAE6G,EAAiB,CAAEG,OAAO,IAAQ,kBACzChH,IAAEmH,GAAQ,kBACRnH,IAAEwI,EAAa,CAAEhD,OAAQmG,EAAKC,YAAa,kBACzC5L,IAAE6G,EAAiB,CAAEG,OAAO,IAAS,kBACnChJ,EAAO,CACLM,WAAYe,EAAqBkK,GACjCtK,KAAAA,EACAF,MAAO4M,EAAK/B,OACZ5K,MAAO2M,EAAK9B,OACZ5L,QAAS0N,EAAK1N,QACdC,SAAUL,EAASC,eAAiBD,EAASQ,OAC7Ca,KAAM,wBAOlBgI,eAAM5I,SAASuN,IAAAA,KACT1H,EAAaG,MAAsB,IAAIsB,KAEvCkG,EAAsBzB,IACtBU,EAAO7B,YAAS,wBACd5K,EAAMyM,OAASH,GAAmC,OAAxBkB,EAErB9O,EAAM8O,EAAoB7O,cAC9BiN,EAAMmB,OAAO,IACbnB,EAAM6B,SAAS,MAGbzN,EAAMyM,WAIDzM,EAAMyM,OAASH,GAAmC,OAAxBkB,QAGhC,IAAIxO,kEAGc,kBAAfyN,EAAK9N,YACR,IAAIK,iGAENyN,EAAK9N,QAAU2N,OAAU1H,EAAY5E,EAAMyM,WAK7CK,EAAclC,YAAS,kBAAO5K,EAAMyM,KAAOZ,EAAakB,KAAOlB,EAAa4B,UAC5E9N,EAAUiL,YAAS,kBACO,OAAxB4C,EACKA,EAAoB7O,QAAUiN,EAAMmB,KAGtCD,EAAYnO,QAAUkN,EAAakB,QAExCW,EAAoB1H,MAA2B,MAC/CD,EAAUC,MAAI8G,EAAYnO,QAAUkN,EAAakB,MAErDrG,aAAU,WACRX,EAAQpH,MAAQmO,EAAYnO,QAAUkN,EAAakB,YAGjDhL,uBAA0BC,IAC1B2L,EAAmB/C,YAAS,iBAAO,CAAEvE,aAAcrG,EAAMqG,iBAE7DP,EAAaD,EAAYE,EAAS4H,YPjIpCnL,EACAuD,YAAAA,IAAAA,EAAwBC,OAAI,IAE5BR,eAAY,SAAAC,MACLM,EAAQpH,OACR6D,EAAU7D,WAEXmE,EAAUN,EAAU7D,MAGxB0I,EAAcuG,IAAI9K,iBAGGyE,EAAUrI,uBAAQ,KAA9BwI,UACHA,EAAS9B,SAAS9C,KACpB2D,EAAQiB,GACRH,SAAiBG,IAKrBjF,SAASG,iBA3CqE,YA2CjCiL,SAAQ,SAAAC,MAC7CA,aAAiB3G,2BAGEE,qBACnByG,EAAMlI,kBAAwB,OAIT,IAAvByB,EAAcjB,OAChBmB,EAAUwG,IAAID,EAAO,eACJA,EAAME,aAAa,eAElCvG,MAAOqG,EAAMrG,QAIfA,EAAMqG,QAIVrI,GAAa,cAEX4B,SAAqBvE,GAIjBuE,EAAcjB,KAAO,EAEvB3D,SAASG,iBAxEiE,YAwE7BiL,SAAQ,SAAAC,MAC7CA,aAAiB3G,cAGnBI,EAAU0G,IAAIH,kBAGOzG,qBACnByG,EAAMlI,kBAAwB,OAGpC2B,EAAUwG,IAAID,EAAO,eACJA,EAAME,aAAa,eAElCvG,MAAOqG,EAAMrG,QAIfA,EAAMqG,0BAGYvG,EAAUrI,uBAAQ,KAA7B4D,UAEP2D,EAAQ3D,GAGRyE,SAAiBzE,WOsDvBoL,CAAeR,EAAmB3H,GAClCmC,GAAiB,SAACiG,EAASrL,gBAClBpE,EAAMyP,UACVtG,EAAa8B,uBACZ9D,EAAWlH,MAAMiP,IAAI9K,MAEtB+E,EAAa+B,0BACZ/D,EAAWlH,aAAamE,eAK1BmK,EAAc3C,EAAgB,CAChC1J,KAAM,oBACND,KAAMiK,YAAS,iBAAO,CAAE6B,KAAMA,EAAK9N,YAGjCqO,EAAUhH,MAAyC,MAEnDmE,EAAM,CACR6C,QAAAA,EACAF,YAAAA,EACAsB,oBAAWrM,GACLiL,EAAQrO,QAAUoD,IACtBiL,EAAQrO,MAAQoD,IAElB4K,iBACEY,EAAK,SAAS,YAIlBlF,UAAQ4D,EAAe9B,GAGvB/E,EAAe,aAAa,SAAAwB,OACtBM,EAASN,EAAMM,OAEf4F,EAAYnO,QAAUkN,EAAakB,MACT,IAA1BlH,EAAWlH,MAAMyH,OACjBR,EAASC,EAAWlH,MAAOuI,KAE/BiD,EAAIwC,QACJ0B,YAAS,wBAAMnH,SAAAA,EAAQnE,gBAIzBqC,EAAe,WAAW,SAAAwB,GACpBA,EAAMxH,MAAQK,EAAK6O,QACnBxB,EAAYnO,QAAUkN,EAAakB,OACnClH,EAAWlH,MAAMyH,KAAO,IAC5BQ,EAAME,iBACNF,EAAMQ,kBACN+C,EAAIwC,aAINnH,eAAY,SAAAC,MACNqH,EAAYnO,QAAUkN,EAAakB,UAEnCwB,EAAW9L,SAAS+L,gBAAgBlO,MAAMiO,SAC1CE,EAAehM,SAAS+L,gBAAgBlO,MAAMmO,aAE9CC,EAAiBnJ,OAAOoJ,WAAalM,SAAS+L,gBAAgBI,YAElEnM,SAAS+L,gBAAgBlO,MAAMiO,SAAW,SAC1C9L,SAAS+L,gBAAgBlO,MAAMmO,aAAkBC,OAEjDjJ,GAAa,WACXhD,SAAS+L,gBAAgBlO,MAAMiO,SAAWA,EAC1C9L,SAAS+L,gBAAgBlO,MAAMmO,aAAeA,SAKlDjJ,eAAY,SAAAC,MACNqH,EAAYnO,QAAUkN,EAAakB,UACnCvK,EAAYkJ,EAAIgC,MACflL,OAEDqM,EAAW,IAAIC,sBAAqB,SAAA5D,iBACpBA,kBAAS,KAAlB6D,UAE0B,IAA/BA,EAAMC,mBAAmBC,GACM,IAA/BF,EAAMC,mBAAmBE,GACU,IAAnCH,EAAMC,mBAAmBG,OACW,IAApCJ,EAAMC,mBAAmBI,QAEzBjF,EAAIwC,YAKVkC,EAASQ,QAAQ7M,GAEjBiD,GAAa,kBAAMoJ,EAASS,qBAGvB,CACLvN,GAAAA,EACAwN,GAAI7B,EACJJ,UAAWI,EACX7H,WAAAA,EACAiH,YAAAA,EACAE,QAAAA,EACAC,YAAAA,EACAtN,QAAAA,EACA8M,KAAAA,EACAU,qBAAYvG,GACVA,EAAMQ,uBAQHoI,EAAgBhH,kBAAgB,CACzC5H,KAAM,gBACNZ,MAAO,CACLc,GAAI,CAAEM,KAAM,CAACnC,OAAQwJ,gBAAkB,QAEzC/I,sBACMyK,EAAM+B,EAAiB,wBASpBxM,EAAO,CACZM,WAHqB8K,KAAKE,OANP,CACnBhF,IAAK,KACLjE,GAAI+I,KAAK/I,kBACM,EACfmL,QAASpC,KAAKqC,cAMdxM,KAAM,CAAE8L,KAAMtC,EAAI2C,YAAYnO,QAAUkN,EAAakB,MACrDtM,MAAOqK,KAAKQ,OACZ5K,MAAOoK,KAAKS,OACZ3K,KAAM,mBAGVgI,qBACMuB,EAAM+B,EAAiB,uBAGpB,CACLnK,gCAHoCC,IAIpCmL,qBAAYvG,GACNA,EAAMM,SAAWN,EAAM6I,gBAC3B7I,EAAME,iBACNF,EAAMQ,kBACN+C,EAAIwC,cAQD+C,GAAclH,kBAAgB,CACvC5H,KAAM,cACNZ,MAAO,CACLc,GAAI,CAAEM,KAAM,CAACnC,OAAQwJ,gBAAkB,OAEzC/I,sBACMyK,EAAM+B,EAAiB,sBAIpBxM,EAAO,CACZM,WAHqB8K,KAAKE,OADP,CAAEjJ,GAAI+I,KAAK/I,KAK9BpB,KAAM,CAAE8L,KAAMtC,EAAI2C,YAAYnO,QAAUkN,EAAakB,MACrDtM,MAAOqK,KAAKQ,OACZ5K,MAAOoK,KAAKS,OACZ3K,KAAM,iBAGVgI,qBACMuB,EAAM+B,EAAiB,eACvBnK,6BAAgCC,WAEpCyJ,aAAU,WACRtB,EAAIiE,WAAWrM,GACf4E,eAAY,kBAAMwD,EAAIiE,WAAW,YAG5B,CAAErM,GAAAA,MAMF4N,GAAoB9E,EE5V/B,SAAS+E,GAAYxO,EAAeN,MAC9BM,EAAM,OAAOA,MAEbyO,QAAM/O,EAAAA,EAAM,eACG,iBAAR+O,GAA0C,WAAtBA,EAAIC,cAAmC,yBAKxDC,GACdC,EACAC,OAEI7O,EAAO4E,MAAI4J,GAAYI,EAAKrR,MAAMyC,KAAM4O,EAAKrR,MAAMmC,YAEvD2K,aAAU,WACRrK,EAAKzC,MAAQiR,GAAYI,EAAKrR,MAAMyC,KAAM4O,EAAKrR,MAAMmC,OAGvD0E,eAAY,iBACNpE,EAAKzC,OACJ+M,EAAIuE,IAELvE,EAAIuE,aAAuBC,8BAAsBxE,EAAIuE,WAAJE,EAAiBlL,aAAa,WACjF7D,EAAKzC,MAAQ,aAIVyC,GDXT,SAAKiL,GACHA,mBACAA,uBAFF,CAAKA,IAAAA,OAqBL,IAAI+D,GAAoBrI,OAAO,qBAE/B,SAASsI,GAAqBlE,OACxBpB,EAAU9C,SAAOmI,GAAmB,SAExB,OAAZrF,EAAkB,KAChBqB,EAAM,IAAIpN,UAAUmN,6DACpBnN,MAAMM,mBAAmBN,MAAMM,kBAAkB8M,EAAKiE,IACpDjE,SAGDrB,EAGT,IEnDY9I,GCuBPqO,GH4BDC,GAAyBxI,OAAO,0BAOzByI,GAAahI,kBAAgB,CACtC5H,KAAM,aACNZ,MAAO,CACLc,GAAI,CAAEM,KAAM,CAACnC,OAAQwJ,gBAAkB,YACvCgI,YAAa,CAAErP,KAAM,CAACuH,kBAAmB,IAE3CC,eAAM5I,SAASU,IAAAA,MAAOD,IAAAA,MAChBiQ,kCAA2C1O,IAC3C2O,iCAAyC3O,IAEzC4O,EAAkB5K,MACpBhG,EAAMyQ,YAAcpE,EAAiBU,KAAOV,EAAiBoB,QAE3DoD,EAAW7K,MAAuC,MAClD8K,EAAY9K,MAAwC,MAEpDmE,EAAM,CACRuG,SAAAA,EACAC,QAAAA,EACAC,gBAAAA,EACAG,MAAOF,EACPG,OAAQF,EACRG,kCACEL,EAAgBjS,MAAQD,EAAMkS,EAAgBjS,cAC3C0N,EAAiBU,MAAOV,EAAiBoB,SACzCpB,EAAiBoB,QAASpB,EAAiBU,UAGhDmE,2BACMN,EAAgBjS,QAAU0N,EAAiBoB,SAC/CmD,EAAgBjS,MAAQ0N,EAAiBoB,SAE3Cd,eAAMwE,GACJhH,EAAI+G,sBAEAjL,EACGkL,EACDA,aAA4BhK,YAAoBgK,EAChDA,EAAiBxS,iBAAiBwI,YAAoBuE,EAAIyF,GAEvDzF,EAAIvB,EAAI6G,QAJetF,EAAIvB,EAAI6G,cAOxC/K,GAAAA,EAAgBlD,iBAIpBsF,UAAQ+H,GAAmBjG,GAC3B6B,EACEpB,YAAS,wBACAlM,EAAMkS,EAAgBjS,cAC1B0N,EAAiBU,MAAOnB,EAAMmB,OAC9BV,EAAiBoB,QAAS7B,EAAM6B,eAKhC,kBAGE/N,EAAO,CAAEM,QAF8BA,mBAELW,KAD9B,CAAE8L,KAAMmE,EAAgBjS,QAAU0N,EAAiBU,KAAMJ,MAAOxC,EAAIwC,OAChCjM,MAAAA,EAAOD,MAAAA,EAAOG,KAAM,mBAO9DwQ,GAAmB5I,kBAAgB,CAC5C5H,KAAM,mBACNZ,MAAO,CACLc,GAAI,CAAEM,KAAM,CAACnC,OAAQwJ,gBAAkB,UACvC4I,SAAU,CAAEjQ,KAAM,CAACuH,kBAAmB,IAExCjJ,sBACMyK,EAAMkG,GAAqB,oBAE3B1P,EAAO,CAAE8L,KAAMtC,EAAIyG,gBAAgBjS,QAAU0N,EAAiBU,MAC9D9B,EAAiBH,KAAKwG,cACtB,CACEtL,IAAK,KACL5E,KAAM0J,KAAK1J,KACX8L,QAASpC,KAAKqC,YACdoE,UAAWzG,KAAK0G,eAElB,CACEzP,GAAI+I,KAAK/I,GACTiE,IAAK,KACL5E,KAAM0J,KAAK1J,qBACM0J,KAAKE,OAAOqG,cACzBzM,EACAuF,EAAIyG,gBAAgBjS,QAAU0N,EAAiBU,qBAClCrB,EAAIvB,EAAI4G,OAAS5G,EAAIwG,aAAU/L,EAChDyM,WAAUvG,KAAKE,OAAOqG,eAAkBzM,EACxCsI,QAASpC,KAAKqC,YACdoE,UAAWzG,KAAK0G,cAChBC,QAAS3G,KAAK4G,oBAGbhS,EAAO,CACZM,WAAY8K,KAAKE,OAAWC,GAC5BtK,KAAAA,EACAF,MAAOqK,KAAKQ,OACZ5K,MAAOoK,KAAKS,OACZ3K,KAAM,sBAGVgI,eAAM5I,SAASS,IAAAA,MACT0J,EAAMkG,GAAqB,oBAE3BsB,EAlHC1J,SAAOsI,GAAwB,MAmHhCe,EAAiC,OAAjBK,GAAgCA,IAAiBxH,EAAIwG,QAErEiB,EAAa5L,MAAI,aAEhBsL,GACH9L,eAAY,WACV2E,EAAI6G,OAAOrS,MAAQiT,EAAWjT,SAI3B,CACL2S,cAAAA,EACAvP,GAAIoI,EAAIuG,SACRnB,GAAIqC,EACJxQ,KAAM2O,GACJnF,YAAS,iBAAO,CAAE9J,GAAId,EAAMc,GAAIM,KAAMX,EAAMW,SAC5CwQ,GAEFzE,6BACMnN,EAAMqR,WAENC,GACFnH,EAAI8G,4BACJvF,EAAIvB,EAAI6G,YAASjO,SAEjBoH,EAAI8G,qBAGRO,uBAAc5K,aACR5G,EAAMqR,YAENC,SACM1K,EAAMxH,UACPK,EAAKoS,WACLpS,EAAKqS,MACRlL,EAAME,iBACNF,EAAMQ,kBACN+C,EAAI8G,4BACJvF,EAAIvB,EAAI6G,YAASjO,oBAIb6D,EAAMxH,UACPK,EAAKoS,WACLpS,EAAKqS,MACRlL,EAAME,iBACNF,EAAMQ,kBACN+C,EAAI8G,qBAKZS,qBAAY9K,UACFA,EAAMxH,UACPK,EAAKoS,MAIRjL,EAAME,uBAUPiL,GAAkBvJ,kBAAgB,CAC3C5H,KAAM,kBACNZ,MAAO,CACLc,GAAI,CAAEM,KAAM,CAACnC,OAAQwJ,gBAAkB,cAC/B,CAAErH,KAAMuH,iBAAkB,GAClCzI,QAAS,CAAEkB,KAAMuH,iBAAkB,IAErCjJ,sBACMyK,EAAMkG,GAAqB,mBAE3B1P,EAAO,CAAE8L,KAAMtC,EAAIyG,gBAAgBjS,QAAU0N,EAAiBU,KAAMJ,MAAOxC,EAAIwC,cAG5EjN,EAAO,CACZM,WAAY8K,KAAKE,OAHE,CAAEjJ,GAAI+I,KAAK/I,GAAIiE,IAAK,OAIvCrF,KAAAA,EACAF,MAAOqK,KAAKQ,OACZ5K,MAAOoK,KAAKS,OACZ3L,SAAUL,EAASC,eAAiBD,EAASQ,OAC7CJ,QAASmL,KAAKnL,QACdiB,KAAM,qBAGVgI,qBACMuB,EAAMkG,GAAqB,mBAE/BhI,UAAQkI,GAAwBpG,EAAIwG,aAEhCnD,EAAsBzB,IACtBpM,EAAUiL,YAAS,kBACO,OAAxB4C,EACKA,EAAoB7O,QAAUiN,EAAMmB,KAGtC5C,EAAIyG,gBAAgBjS,QAAU0N,EAAiBU,cAGjD,CACLhL,GAAIoI,EAAIwG,QACRpB,GAAIpF,EAAI4G,MACRpR,QAAAA,MI3QKqS,GAAYxJ,kBAAgB,CACrC5H,KAAM,YACNZ,MAAO,CACLc,GAAI,CAAEM,KAAM,CAACnC,OAAQwJ,gBAAkB,OACvCpC,aAAc,CAAEjF,KAAMnC,eAAiD,OAEzES,yBAKSA,EAAO,CACZM,aAH0C8K,KAAKE,yBAD5B,CAAEhF,IAAK,OAK1BrF,KANS,GAOTF,MAAOqK,KAAKQ,OACZ5K,MAAOoK,KAAKS,OACZ3K,KAAM,eAGVgI,eAAM5I,OACA6F,EAAaG,MAAI,IAAIsB,KACrB9E,EAAYwD,MAAwB,MACpCD,EAAUC,OAAI,GACd2H,EAAmB/C,YAAS,iBAAO,CAAEvE,aAAcrG,EAAMqG,wBAE7DoF,aAAU,WACHjJ,EAAU7D,QACfkH,EAAWlH,MAAMiP,IAAIpL,EAAU7D,OAE/BmH,EAAaD,EAAYE,EAAS4H,OAGpChH,eAAY,WACVZ,EAAQpH,OAAQ,KAGX,CAAE4Q,GAAI/M,eFzBDyP,GACdC,EACAC,OAOIC,EAAQD,EAAUE,kBAClBD,EAAMnR,QAAU,EAAG,OAAO,SAE1BqR,EAAqBH,EAAUI,qBAC/BC,QAAcF,EAAAA,GAAuB,EAErCG,EAAmB,kBACbP,EAAOnP,YACRd,GAAM8B,aACFqO,EAAMM,WAAU,SAAAC,UAASR,EAAUS,gBAAgBD,WAEvD1Q,GAAMgC,aACLyG,EAAM0H,EACPjP,QACA0P,UACAH,WAAU,SAACC,EAAMjI,EAAKoI,YACA,IAAjBN,GAAsBM,EAAI7R,OAASyJ,EAAM,GAAK8H,GAC1CL,EAAUS,gBAAgBD,cAEzB,IAATjI,EAAmBA,EAChB0H,EAAMnR,OAAS,EAAIyJ,OAGvBzI,GAAM+B,YACFoO,EAAMM,WAAU,SAACC,EAAMjI,WACxBA,GAAO8H,GACHL,EAAUS,gBAAgBD,YAGjC1Q,GAAMiC,SACLwG,EAAM0H,EACPjP,QACA0P,UACAH,WAAU,SAAAC,UAASR,EAAUS,gBAAgBD,aACnC,IAATjI,EAAmBA,EAChB0H,EAAMnR,OAAS,EAAIyJ,OAGvBzI,GAAM8Q,gBACFX,EAAMM,WAAU,SAAAC,UAAQR,EAAUa,UAAUL,KAAUT,EAAOnQ,WAEjEE,GAAMgR,eACF,cA3Ef,SAAqBhE,SACb,IAAIjQ,MAAM,sBAAwBiQ,GA6ElCiE,CAAYhB,IAvCK,UA2CK,IAArBO,EAAyBH,EAAqBG,GA9EvD,SAAYxQ,GAEVA,qBAGAA,2BAGAA,mBAGAA,mBAGAA,2BAGAA,yBAjBF,CAAYA,KAAAA,QCuBZ,SAAKqO,GACHA,mBACAA,uBAFF,CAAKA,KAAAA,QAoCL,IAAI6C,GAAiBpL,OAAO,kBAE5B,SAASqL,GAAkBjH,OACrBpB,EAAU9C,SAAOkL,GAAgB,SAErB,OAAZpI,EAAkB,KAChBqB,EAAM,IAAIpN,UAAUmN,0DACpBnN,MAAMM,mBAAmBN,MAAMM,kBAAkB8M,EAAKgH,IACpDhH,SAGDrB,MElDJsI,GFuDMC,GAAU9K,kBAAgB,CACnC5H,KAAM,UACN8L,MAAO,qBAAuB,SAAC6G,UAAgB,IAC/CvT,MAAO,CACLc,GAAI,CAAEM,KAAM,CAACnC,OAAQwJ,gBAAkB,YACvC4I,SAAU,CAAEjQ,KAAM,CAACuH,kBAAmB,GACtC6K,WAAY,CAAEpS,KAAM,CAACuH,kBAAmB,GACxC8K,WAAY,CAAErS,KAAM,CAACnC,OAAQwJ,OAAQiL,OAAQ/K,WAE/CC,eAAM5I,SAASU,IAAAA,MAAOD,IAAAA,MAAO8M,IAAAA,KACvBoG,EAAe3N,MAA8CsK,GAAc7C,QAC3EmG,EAAW5N,MAA0C,MACrD8K,EAAY9K,MAA2C,MACvD6N,EAAa7N,MAA4C,MACzDV,EAAUU,MAAyC,IACnD8N,EAAc9N,MAA6C,IAC3D+N,EAAoB/N,MAAmD,MAEvErH,EAAQiM,YAAS,kBAAM5K,EAAMyT,cAE7BtJ,EAAM,CACRwJ,aAAAA,EACAhV,MAAAA,EACAqV,YAAapJ,YAAS,kBAAO5K,EAAMwT,WAAa,aAAe,cAC/DI,SAAAA,EACA9C,UAAAA,EACA+C,WAAAA,EACAxC,SAAUzG,YAAS,kBAAM5K,EAAMqR,YAC/B/L,QAAAA,EACAwO,YAAAA,EACAC,kBAAAA,EACAE,wBACMjU,EAAMqR,UACNsC,EAAahV,QAAU2R,GAAc7C,SACzCkG,EAAahV,MAAQ2R,GAAc7C,OACnCsG,EAAkBpV,MAAQ,OAE5BuV,uBACMlU,EAAMqR,UACNsC,EAAahV,QAAU2R,GAAcvD,OACzC4G,EAAahV,MAAQ2R,GAAcvD,OAErCoH,oBAAWpR,EAAchB,OACnB/B,EAAMqR,UACNsC,EAAahV,QAAU2R,GAAc7C,YAErC2G,EAAwBnC,GAC1BlP,IAAUd,GAAM8Q,SACZ,CAAEhQ,MAAOd,GAAM8Q,SAAUhR,GAAIA,GAC7B,CAAEgB,MAAOA,GACb,CACEsP,aAAc,kBAAM/M,EAAQ3G,OAC5B4T,mBAAoB,kBAAMwB,EAAkBpV,OAC5CqU,UAAW,SAAAqB,UAAUA,EAAOtS,IAC5B6Q,gBAAiB,SAAAyB,UAAUA,EAAOC,QAAQjD,YAIpB,KAAtByC,EAAYnV,OAAgBoV,EAAkBpV,QAAUyV,IAC5DN,EAAYnV,MAAQ,GACpBoV,EAAkBpV,MAAQyV,KAE5BG,gBAAO5V,OACDqB,EAAMqR,UACNsC,EAAahV,QAAU2R,GAAc7C,QAEzCqG,EAAYnV,OAASA,EAAMmR,kBAEvBpR,EAAQ4G,EAAQ3G,MAAM+T,WACxB,SAAA2B,UACGA,EAAOC,QAAQjD,UAAYgD,EAAOC,QAAQE,UAAUC,WAAWX,EAAYnV,WAGjE,IAAXD,GAAgBA,IAAUqV,EAAkBpV,QAChDoV,EAAkBpV,MAAQD,KAE5BgW,uBACM1U,EAAMqR,UACNsC,EAAahV,QAAU2R,GAAc7C,QACf,KAAtBqG,EAAYnV,QAEhBmV,EAAYnV,MAAQ,KAEtBgW,wBAAe5S,EAAYuS,GAEzBhP,EAAQ3G,MAAM8L,KAAK,CAAE1I,GAAAA,EAAIuS,QAAAA,KAE3BM,0BAAiB7S,OACX8S,EAAcvP,EAAQ3G,MAAMwE,QAC5B2R,EAC0B,OAA5Bf,EAAkBpV,MAAiBkW,EAAYd,EAAkBpV,OAAS,KACxE+L,EAAMmK,EAAYnC,WAAU,SAAArP,UAAKA,EAAEtB,KAAOA,MACjC,IAAT2I,GAAYmK,EAAYlK,OAAOD,EAAK,GACxCpF,EAAQ3G,MAAQkW,EAChBd,EAAkBpV,MACZ+L,IAAQqJ,EAAkBpV,OACF,OAAxBmW,EADwC,KAKrCD,EAAYvQ,QAAQwQ,IAG/BC,gBAAOpW,GACDqB,EAAMqR,UACV9D,EAAK,oBAAqB5O,YAI9ByG,EAAe,aAAa,SAAAwB,aACtBM,EAASN,EAAMM,OACftD,EAASnB,SAASoB,cAElB8P,EAAahV,QAAU2R,GAAcvD,iBACrCrB,EAAIoF,WAAJX,EAAgBvK,SAASsB,gBAExBwE,EAAImI,WAAJmB,EAAiBpP,SAASsB,KAASiD,EAAI8J,eACxCrQ,IAAWnB,SAASC,aAAQkB,SAAAA,EAAQgC,SAASsB,KAC5CN,EAAMqO,2BAAkBvJ,EAAIoF,OAAY/N,MAAM,CAAEC,eAAe,SAItEqF,UAAQ8K,GAAgBhJ,GACxB6B,EACEpB,YAAS,wBACPlM,EAAMiV,EAAahV,cAChB2R,GAAcvD,MAAOnB,EAAMmB,OAC3BuD,GAAc7C,QAAS7B,EAAM6B,eAK7B,eACD9M,EAAO,CAAE8L,KAAMkH,EAAahV,QAAU2R,GAAcvD,KAAMsE,SAAUrR,EAAMqR,iBACvE3R,EAAO,CACZM,MAAOa,EAAKb,EAAO,CAAC,aAAc,sBAAuB,WAAY,eACrEW,KAAAA,EACAD,MAAAA,EACAD,MAAAA,EACAG,KAAM,gBAQHsU,GAAe1M,kBAAgB,CACxC5H,KAAM,eACNZ,MAAO,CAAEc,GAAI,CAAEM,KAAM,CAACnC,OAAQwJ,gBAAkB,UAChD/I,sBACMyK,EAAMiJ,GAAkB,gBAExBzS,EAAO,CAAE8L,KAAMtC,EAAIwJ,aAAahV,QAAU2R,GAAcvD,KAAMsE,SAAUlH,EAAIkH,SAAS1S,cAGlFe,EAAO,CACZM,WAAY8K,KAAKE,OAHE,CAAEjJ,GAAI+I,KAAK/I,GAAIiE,IAAK,KAAMkH,QAASpC,KAAKqC,cAI3DxM,KAAAA,EACAF,MAAOqK,KAAKQ,OACZ5K,MAAOoK,KAAKS,OACZ3K,KAAM,kBAGVgI,qBACMuB,EAAMiJ,GAAkB,sBAGrB,CACLrR,+BAHmCC,IAInCuN,GAAIpF,EAAIyJ,SACRzG,sCACEzB,EAAIvB,EAAI2G,eAAY/N,MAAM,CAAEC,eAAe,SAQxCmS,GAAgB3M,kBAAgB,CACzC5H,KAAM,gBACNZ,MAAO,CACLc,GAAI,CAAEM,KAAM,CAACnC,OAAQwJ,gBAAkB,WAEzC/I,0BACMyK,EAAMiJ,GAAkB,iBAExBzS,EAAO,CAAE8L,KAAMtC,EAAIwJ,aAAahV,QAAU2R,GAAcvD,KAAMsE,SAAUlH,EAAIkH,SAAS1S,OACrFsM,EAAiB,CACnBjF,IAAK,KACLjE,GAAI+I,KAAK/I,GACTX,KAAM0J,KAAK1J,sBACM,2BACAsK,EAAIvB,EAAI0J,oBAARuB,EAAqBrT,mBACrBoI,EAAIkH,SAAS1S,WAC1BiG,EACAuF,EAAIwJ,aAAahV,QAAU2R,GAAcvD,uBAC1B5C,EAAIyJ,SAASjV,MAC5B,UAAC+M,EAAIvB,EAAIyJ,kBAARyB,EAAmBtT,GAAI+I,KAAK/I,IAAI1C,KAAK,UACtCuF,EACJyM,UAAiC,IAAvBlH,EAAIkH,SAAS1S,YAAwBiG,EAC/C2M,UAAWzG,KAAK0G,cAChBC,QAAS3G,KAAK4G,YACdxE,QAASpC,KAAKqC,oBAGTzN,EAAO,CACZM,WAAY8K,KAAKE,OAAWC,GAC5BtK,KAAAA,EACAF,MAAOqK,KAAKQ,OACZ5K,MAAOoK,KAAKS,OACZ3K,KAAM,mBAGVgI,eAAM5I,SAASS,IAAAA,MACT0J,EAAMiJ,GAAkB,uBAoDrB,CACLrR,gCApDoCC,IAqDpCuN,GAAIpF,EAAI2G,UACR1P,KAAM2O,GACJnF,YAAS,iBAAO,CAAE9J,GAAId,EAAMc,GAAIM,KAAMX,EAAMW,SAC5C+I,EAAI2G,WAENU,uBAxDqB5K,UACbA,EAAMxH,UAGPK,EAAKoS,WACLpS,EAAKqS,WACLrS,EAAK6V,UACR1O,EAAME,iBACNqD,EAAI+J,cACJ7F,YAAS,0BACP3C,EAAIvB,EAAI0J,gBAAa9Q,MAAM,CAAEC,eAAe,IACvCmH,EAAIxL,MAAMA,OAAOwL,EAAIgK,WAAWlS,GAAM8B,qBAI1CtE,EAAK8V,QACR3O,EAAME,iBACNqD,EAAI+J,cACJ7F,YAAS,0BACP3C,EAAIvB,EAAI0J,gBAAa9Q,MAAM,CAAEC,eAAe,IACvCmH,EAAIxL,MAAMA,OAAOwL,EAAIgK,WAAWlS,GAAMiC,WAqCjDwN,qBA/BmB9K,UACXA,EAAMxH,UACPK,EAAKoS,MAIRjL,EAAME,mBA0BVqG,qBArBmBvG,GA/SzB,IAAmB4O,EAgTTrL,EAAIkH,SAAS1S,QACbwL,EAAIwJ,aAAahV,QAAU2R,GAAcvD,MAC3C5C,EAAI8J,eACJ5F,YAAS,iCAAM3C,EAAIvB,EAAI2G,mBAAR2E,EAAoB1S,MAAM,CAAEC,eAAe,SAE1D4D,EAAME,iBACNqD,EAAI+J,cAtTOsB,EAuTD,iCAAM9J,EAAIvB,EAAI0J,oBAAR6B,EAAqB3S,MAAM,CAAEC,eAAe,KAtTlE2S,uBAAsB,kBAAMA,sBAAsBH,aA0UzCI,GAAiBpN,kBAAgB,CAC1C5H,KAAM,iBACNZ,MAAO,CACLc,GAAI,CAAEM,KAAM,CAACnC,OAAQwJ,gBAAkB,aAC/B,CAAErH,KAAMuH,iBAAkB,GAClCzI,QAAS,CAAEkB,KAAMuH,iBAAkB,IAErCjJ,8BACMyK,EAAMiJ,GAAkB,kBAExBzS,EAAO,CAAE8L,KAAMtC,EAAIwJ,aAAahV,QAAU2R,GAAcvD,MACxD9B,EAAiB,yBAEe,OAAhCd,EAAI4J,kBAAkBpV,gBAElBwL,EAAI7E,QAAQ3G,MAAMwL,EAAI4J,kBAAkBpV,aADxCiG,EACAiR,EAAgD9T,uCACnC2J,EAAIvB,EAAIyJ,kBAARkC,EAAmB/T,eAAM2J,EAAIvB,EAAI2G,mBAARiF,EAAoBhU,sBAC5CoI,EAAI6J,YAAYrV,MACpCoD,GAAI+I,KAAK/I,GACTwP,UAAWzG,KAAK0G,cAChB3E,KAAM,UACNmJ,SAAU,EACVhQ,IAAK,aAIAtG,EAAO,CACZM,WAHqB8K,KAAKE,OAGOC,GACjCtK,KAAAA,EACAF,MAAOqK,KAAKQ,OACZ5K,MAAOoK,KAAKS,OACZ3L,SAAUL,EAASC,eAAiBD,EAASQ,OAC7CJ,QAASmL,KAAKnL,QACdiB,KAAM,oBAGVgI,qBACMuB,EAAMiJ,GAAkB,kBACxBrR,gCAAmCC,IACnCiU,EAAiBjQ,MAA0C,MAyE3DwH,EAAsBzB,IACtBpM,EAAUiL,YAAS,kBACO,OAAxB4C,EACKA,EAAoB7O,QAAUiN,EAAMmB,KAGtC5C,EAAIwJ,aAAahV,QAAU2R,GAAcvD,cAG3C,CAAEhL,GAAAA,EAAIwN,GAAIpF,EAAI0J,WAAYrC,uBAhFV5K,UACjBqP,EAAetX,OAAOuX,aAAaD,EAAetX,OAE9CiI,EAAMxH,UAIPK,EAAKoS,SACsB,KAA1B1H,EAAI2J,YAAYnV,aAClBiI,EAAME,iBACNF,EAAMQ,kBACC+C,EAAIoK,OAAO3N,EAAMxH,UAGvBK,EAAKqS,MACRlL,EAAME,iBACNF,EAAMQ,kBAC8B,OAAhC+C,EAAI4J,kBAAkBpV,OAExBwL,EAAI4K,OADc5K,EAAI7E,QAAQ3G,MAAMwL,EAAI4J,kBAAkBpV,OAApD2V,QACa3V,OAErBwL,EAAI8J,eACJ5F,YAAS,iCAAM3C,EAAIvB,EAAI2G,mBAARqF,EAAoBpT,MAAM,CAAEC,eAAe,kBAGvDtE,EAAMyL,EAAI6J,YAAYrV,MAAO,CAChCyX,SAAU3W,EAAK6V,UACf9B,WAAY/T,EAAK4W,oBAEjBzP,EAAME,iBACNF,EAAMQ,kBACC+C,EAAIgK,WAAWlS,GAAM+B,WAEzBtF,EAAMyL,EAAI6J,YAAYrV,MAAO,CAAEyX,SAAU3W,EAAK8V,QAAS/B,WAAY/T,EAAK6W,mBAC3E1P,EAAME,iBACNF,EAAMQ,kBACC+C,EAAIgK,WAAWlS,GAAMgC,eAEzBxE,EAAK8W,UACL9W,EAAK+W,cACR5P,EAAME,iBACNF,EAAMQ,kBACC+C,EAAIgK,WAAWlS,GAAM8B,YAEzBtE,EAAKgX,SACLhX,EAAKiX,gBACR9P,EAAME,iBACNF,EAAMQ,kBACC+C,EAAIgK,WAAWlS,GAAMiC,WAEzBzE,EAAK6O,OACR1H,EAAME,iBACNF,EAAMQ,kBACN+C,EAAI8J,eACJ5F,YAAS,iCAAM3C,EAAIvB,EAAI2G,mBAAR6F,EAAoB5T,MAAM,CAAEC,eAAe,kBAGvDvD,EAAKoH,IACRD,EAAME,iBACNF,EAAMQ,gCAImB,IAArBR,EAAMxH,IAAI6B,SACZkJ,EAAIoK,OAAO3N,EAAMxH,KACjB6W,EAAetX,MAAQiY,YAAW,kBAAMzM,EAAIuK,gBAAe,QAenB/U,QAAAA,MAIzCkX,GAAgBrO,kBAAgB,CACzC5H,KAAM,gBACNZ,MAAO,CACLc,GAAI,CAAEM,KAAM,CAACnC,OAAQwJ,gBAAkB,MACvC9J,MAAO,CAAEyC,KAAM,CAACnC,OAAQwJ,OAAQiL,OAAQ/K,UACxC0I,SAAU,CAAEjQ,KAAMuH,iBAAkB,IAEtCC,eAAM5I,SAASU,IAAAA,MAAOD,IAAAA,MAChB0J,EAAMiJ,GAAkB,iBACxBrR,+BAAkCC,IAElC4B,EAASgH,YAAS,kBACmB,OAAhCT,EAAI4J,kBAAkBpV,OACzBwL,EAAI7E,QAAQ3G,MAAMwL,EAAI4J,kBAAkBpV,OAAOoD,KAAOA,KAIxD+U,EAAWlM,YAAS,kBAAMmM,QAAM5M,EAAIxL,MAAMA,SAAWoY,QAAM/W,EAAMrB,UAEjE2V,EAAUtO,MAAmC,CAC/CqL,SAAUrR,EAAMqR,SAChB1S,MAAOqB,EAAMrB,MACb6V,UAAW,cAgCJrH,EAAYvG,MACf5G,EAAMqR,SAAU,OAAOzK,EAAME,iBACjCqD,EAAI4K,OAAO/U,EAAMrB,OACjBwL,EAAI8J,eACJ5F,YAAS,iCAAM3C,EAAIvB,EAAI2G,mBAARkG,EAAoBjU,MAAM,CAAEC,eAAe,gBAGnDmD,OACHnG,EAAMqR,SAAU,OAAOlH,EAAIgK,WAAWlS,GAAMgR,SAChD9I,EAAIgK,WAAWlS,GAAM8Q,SAAUhR,YAGxBkV,IACHjX,EAAMqR,UACNzN,EAAOjF,OACXwL,EAAIgK,WAAWlS,GAAM8Q,SAAUhR,YAGxBmV,IACHlX,EAAMqR,UACLzN,EAAOjF,OACZwL,EAAIgK,WAAWlS,GAAMgR,gBAnDvBxH,aAAU,mBACJ+I,WAAY/R,SACb0G,eAAepH,cADFoV,EAEZC,oBAFYC,EAECvH,cACdwH,YACe1S,IAAd4P,IAAyBF,EAAQ3V,MAAM6V,UAAYA,MAGzD/I,aAAU,kBAAMtB,EAAIwK,eAAe5S,EAAIuS,MACvC3N,eAAY,kBAAMwD,EAAIyK,iBAAiB7S,MAEvC0J,aAAU,WACR8L,QACE,CAACpN,EAAIwJ,aAAcmD,IACnB,iBACM3M,EAAIwJ,aAAahV,QAAU2R,GAAcvD,MACxC+J,EAASnY,QACdwL,EAAIgK,WAAWlS,GAAM8Q,SAAUhR,YAC/BU,SAAS0G,eAAepH,aAAKgB,SAAAA,WAE/B,CAAEyU,WAAW,OAIjBhS,eAAY,WACN2E,EAAIwJ,aAAahV,QAAU2R,GAAcvD,MACxCnJ,EAAOjF,OACZ0P,YAAS,iCAAM5L,SAAS0G,eAAepH,WAAxB0V,EAA6BC,sBAA7BD,EAA6BC,eAAiB,CAAEC,MAAO,kBA2BjE,eACCtG,EAAarR,EAAbqR,SACF1Q,EAAO,CAAEiD,OAAQA,EAAOjF,MAAOmY,SAAUA,EAASnY,MAAO0S,SAAAA,UAgBtD3R,EAAO,CACZM,WAAYA,EAhBO,CACnB+B,GAAAA,EACA8K,KAAM,SACNmJ,UAAuB,IAAb3E,OAAoBzM,GAAa,mBACb,IAAbyM,QAA2BzM,mBACR,IAAnBkS,EAASnY,MAAiBmY,EAASnY,WAAQiG,EAC5DyM,cAAUzM,EACVsI,QAASC,EACTyK,QAASzR,EACT0R,cAAeZ,EACfa,YAAab,EACbc,eAAgBb,EAChBc,aAAcd,IAKdvW,KAAAA,EACAF,MAAAA,EACAC,MAAAA,EACAE,KAAM,+BGpkBEqX,UACdzV,IAAAA,UACA0V,IAAAA,OACAC,IAAAA,KACApS,IAAAA,QAOAP,eAAY,eACN4D,EAAO5G,EAAU7D,SAChByK,SACWxE,IAAZmB,GAA0BA,EAAQpH,eAElCyZ,EAAanZ,OAAO6C,QAAO,SAACuW,UAAsBH,EAAOG,KAAO,CAAED,WAAYF,IAC9EI,EAAS7V,SAAS8V,iBAAiBnP,EAAMoP,WAAWC,aAAcL,GAAY,GAE3EE,EAAOI,YAAYP,EAAKG,EAAOK,iBDJ1C,SAAKtF,GACHA,mBACAA,uBAFF,CAAKA,KAAAA,QA6BL,IAAIuF,GAAc7Q,OAAO,eAEzB,SAAS8Q,GAAe1M,OAClBpB,EAAU9C,SAAO2Q,GAAa,SAElB,OAAZ7N,EAAkB,KAChBqB,EAAM,IAAIpN,UAAUmN,uDACpBnN,MAAMM,mBAAmBN,MAAMM,kBAAkB8M,EAAKyM,IACpDzM,SAGDrB,MEjCJ+N,GFoCMC,GAAOvQ,kBAAgB,CAChC5H,KAAM,OACNZ,MAAO,CAAEc,GAAI,CAAEM,KAAM,CAACnC,OAAQwJ,gBAAkB,aAChDG,eAAM5I,SAASU,IAAAA,MAAOD,IAAAA,MAChBuY,EAAYhT,MAA2CqN,GAAW5F,QAClEqD,EAAY9K,MAA2C,MACvDiT,EAAWjT,MAA0C,MACrDoM,EAAQpM,MAAuC,IAC/C8N,EAAc9N,MAA6C,IAC3DkT,EAAkBlT,MAAiD,MAEnEmE,EAAM,CACR6O,UAAAA,EACAlI,UAAAA,EACAmI,SAAAA,EACA7G,MAAAA,EACA0B,YAAAA,EACAoF,gBAAAA,EACAC,UAAW,WACTH,EAAUra,MAAQ0U,GAAW5F,OAC7ByL,EAAgBva,MAAQ,MAE1Bya,SAAU,kBAAOJ,EAAUra,MAAQ0U,GAAWtG,MAC9CsM,kBAAStW,EAAchB,OACjBuX,EAAsBrH,GACxBlP,IAAUd,GAAM8Q,SACZ,CAAEhQ,MAAOd,GAAM8Q,SAAUhR,GAAIA,GAC7B,CAAEgB,MAAOA,GACb,CACEsP,aAAc,kBAAMD,EAAMzT,OAC1B4T,mBAAoB,kBAAM2G,EAAgBva,OAC1CqU,UAAW,SAAAL,UAAQA,EAAK5Q,IACxB6Q,gBAAiB,SAAAD,UAAQA,EAAK2B,QAAQjD,YAIhB,KAAtByC,EAAYnV,OAAgBua,EAAgBva,QAAU2a,IAC1DxF,EAAYnV,MAAQ,GACpBua,EAAgBva,MAAQ2a,IAE1B/E,gBAAO5V,GACLmV,EAAYnV,OAASA,EAAMmR,kBAEvBpR,EAAQ0T,EAAMzT,MAAM+T,WACtB,SAAAC,UAAQA,EAAK2B,QAAQE,UAAUC,WAAWX,EAAYnV,SAAWgU,EAAK2B,QAAQjD,aAGjE,IAAX3S,GAAgBA,IAAUwa,EAAgBva,QAE9Cua,EAAgBva,MAAQD,IAE1BgW,uBACEZ,EAAYnV,MAAQ,IAEtB4a,sBAAaxX,EAAYuS,GAEvBlC,EAAMzT,MAAM8L,KAAK,CAAE1I,GAAAA,EAAIuS,QAAAA,KAEzBkF,wBAAezX,OACT0X,EAAYrH,EAAMzT,MAAMwE,QACxBuW,EACwB,OAA1BR,EAAgBva,MAAiB8a,EAAUP,EAAgBva,OAAS,KAClE+L,EAAM+O,EAAU/G,WAAU,SAAArP,UAAKA,EAAEtB,KAAOA,MAC/B,IAAT2I,GAAY+O,EAAU9O,OAAOD,EAAK,GACtC0H,EAAMzT,MAAQ8a,EACdP,EAAgBva,MACV+L,IAAQwO,EAAgBva,OACF,OAAtB+a,EADsC,KAKnCD,EAAUnV,QAAQoV,YAK/BtU,EAAe,aAAa,SAAAwB,aACtBM,EAASN,EAAMM,OACftD,EAASnB,SAASoB,cAElBmV,EAAUra,QAAU0U,GAAWtG,iBAC/BrB,EAAIoF,WAAJX,EAAgBvK,SAASsB,gBAExBwE,EAAIuN,WAAJjE,EAAepP,SAASsB,KAASiD,EAAIgP,YACtCvV,IAAWnB,SAASC,aAAQkB,SAAAA,EAAQgC,SAASsB,KAC5CN,EAAMqO,2BAAkBvJ,EAAIoF,OAAY/N,MAAM,CAAEC,eAAe,SAItEqF,UAAQuQ,GAAazO,GACrB6B,EACEpB,YAAS,wBACPlM,EAAMsa,EAAUra,cACb0U,GAAWtG,MAAOnB,EAAMmB,OACxBsG,GAAW5F,QAAS7B,EAAM6B,eAK1B,kBAEE/N,EAAO,CAAEM,MAAAA,EAAOW,KADZ,CAAE8L,KAAMuM,EAAUra,QAAU0U,GAAWtG,MACrBrM,MAAAA,EAAOD,MAAAA,EAAOG,KAAM,aAK5C+Y,GAAanR,kBAAgB,CACtC5H,KAAM,aACNZ,MAAO,CACLqR,SAAU,CAAEjQ,KAAMuH,iBAAkB,GACpC7H,GAAI,CAAEM,KAAM,CAACnC,OAAQwJ,gBAAkB,WAEzC/I,wBACMyK,EAAM0O,GAAe,cAErBlY,EAAO,CAAE8L,KAAMtC,EAAI6O,UAAUra,QAAU0U,GAAWtG,MAClD9B,EAAiB,CACnBjF,IAAK,KACLjE,GAAI+I,KAAK/I,GACTX,KAAM0J,KAAK1J,sBACM,2BACAsK,EAAIvB,EAAI8O,kBAARW,EAAmB7X,mBACnB+I,KAAKE,OAAOqG,cAAWzM,EAAYuF,EAAI6O,UAAUra,QAAU0U,GAAWtG,KACvFwE,UAAWzG,KAAK0G,cAChBC,QAAS3G,KAAK4G,YACdxE,QAASpC,KAAKqC,oBAGTzN,EAAO,CACZM,WAAY8K,KAAKE,OAAWC,GAC5BtK,KAAAA,EACAF,MAAOqK,KAAKQ,OACZ5K,MAAOoK,KAAKS,OACZ3K,KAAM,gBAGVgI,eAAM5I,SAASS,IAAAA,MACT0J,EAAM0O,GAAe,oBAuDlB,CACL9W,6BAvDiCC,IAwDjCuN,GAAIpF,EAAI2G,UACR1P,KAAM2O,GACJnF,YAAS,iBAAO,CAAE9J,GAAId,EAAMc,GAAIM,KAAMX,EAAMW,SAC5C+I,EAAI2G,WAENU,uBA3DqB5K,UACbA,EAAMxH,UAGPK,EAAKoS,WACLpS,EAAKqS,WACLrS,EAAK6V,UACR1O,EAAME,iBACNF,EAAMQ,kBACN+C,EAAIiP,WACJ/K,YAAS,0BACP3C,EAAIvB,EAAI8O,cAAWlW,MAAM,CAAEC,eAAe,IAC1CmH,EAAIkP,SAASpX,GAAM8B,qBAIlBtE,EAAK8V,QACR3O,EAAME,iBACNF,EAAMQ,kBACN+C,EAAIiP,WACJ/K,YAAS,0BACP3C,EAAIvB,EAAI8O,cAAWlW,MAAM,CAAEC,eAAe,IAC1CmH,EAAIkP,SAASpX,GAAMiC,WAsCzBwN,qBAhCmB9K,UACXA,EAAMxH,UACPK,EAAKoS,MAIRjL,EAAME,mBA2BVqG,qBAtBmBvG,GAzNzB,IAAmB4O,EA0NTxV,EAAMqR,WACNlH,EAAI6O,UAAUra,QAAU0U,GAAWtG,MACrC5C,EAAIgP,YACJ9K,YAAS,iCAAM3C,EAAIvB,EAAI2G,mBAAR+I,EAAoB9W,MAAM,CAAEC,eAAe,SAE1D4D,EAAME,iBACNF,EAAMQ,kBACN+C,EAAIiP,WAjOO5D,EAkOD,iCAAM9J,EAAIvB,EAAI8O,kBAARa,EAAmB/W,MAAM,CAAEC,eAAe,KAjOhE2S,uBAAsB,kBAAMA,sBAAsBH,aAmPzCuE,GAAYvR,kBAAgB,CACrC5H,KAAM,YACNZ,MAAO,CACLc,GAAI,CAAEM,KAAM,CAACnC,OAAQwJ,gBAAkB,cAC/B,CAAErH,KAAMuH,iBAAkB,GAClCzI,QAAS,CAAEkB,KAAMuH,iBAAkB,IAErCjJ,0BACMyK,EAAM0O,GAAe,aAErBlY,EAAO,CAAE8L,KAAMtC,EAAI6O,UAAUra,QAAU0U,GAAWtG,MAClD9B,EAAiB,yBAEa,OAA9Bd,EAAI+O,gBAAgBva,gBAEhBwL,EAAIiI,MAAMzT,MAAMwL,EAAI+O,gBAAgBva,aADpCiG,EACAoV,EAA4CjY,8BAC/B2J,EAAIvB,EAAI2G,mBAAR2E,EAAoB1T,GACvCA,GAAI+I,KAAK/I,GACTwP,UAAWzG,KAAK0G,cAChBC,QAAS3G,KAAK4G,YACd7E,KAAM,OACNmJ,SAAU,EACVhQ,IAAK,aAIAtG,EAAO,CACZM,WAHqB8K,KAAKE,OAGOC,GACjCtK,KAAAA,EACAF,MAAOqK,KAAKQ,OACZ5K,MAAOoK,KAAKS,OACZ3L,SAAUL,EAASC,eAAiBD,EAASQ,OAC7CJ,QAASmL,KAAKnL,QACdiB,KAAM,eAGVgI,qBACMuB,EAAM0O,GAAe,aACrB9W,2BAA8BC,IAC9BiU,EAAiBjQ,MAA0C,MAE/DiS,GAAc,CACZzV,UAAWoI,YAAS,kBAAMc,EAAIvB,EAAI8O,aAClClT,QAAS6E,YAAS,kBAAMT,EAAI6O,UAAUra,QAAU0U,GAAWtG,QAC3DmL,gBAAOG,SAC6B,aAA9BA,EAAKrK,aAAa,QAA+BwK,WAAWyB,cAC5D5B,EAAKpT,aAAa,QAAgBuT,WAAW0B,YAC1C1B,WAAW2B,eAEpBhC,cAAKE,GACHA,EAAKnT,aAAa,OAAQ,eAmF1BsI,EAAsBzB,IACtBpM,EAAUiL,YAAS,kBACO,OAAxB4C,EACKA,EAAoB7O,QAAUiN,EAAMmB,KAGtC5C,EAAI6O,UAAUra,QAAU0U,GAAWtG,cAGrC,CAAEhL,GAAAA,EAAIwN,GAAIpF,EAAI8O,SAAUzH,uBAxFR5K,UACjBqP,EAAetX,OAAOuX,aAAaD,EAAetX,OAE9CiI,EAAMxH,UAIPK,EAAKoS,SACsB,KAA1B1H,EAAI2J,YAAYnV,aAClBiI,EAAME,iBACNF,EAAMQ,kBACC+C,EAAIoK,OAAO3N,EAAMxH,UAGvBK,EAAKqS,YACRlL,EAAME,iBACNF,EAAMQ,kBAC4B,OAA9B+C,EAAI+O,gBAAgBva,iBAEtB8D,SAAS0G,eADIgB,EAAIiI,MAAMzT,MAAMwL,EAAI+O,gBAAgBva,OAA3CoD,QACuBqY,SAE/BjQ,EAAIgP,YACJ9K,YAAS,iCAAM3C,EAAIvB,EAAI2G,mBAAR4E,EAAoB3S,MAAM,CAAEC,eAAe,kBAGvDvD,EAAK6V,iBACR1O,EAAME,iBACNF,EAAMQ,kBACC+C,EAAIkP,SAASpX,GAAM+B,WAEvBvE,EAAK8V,eACR3O,EAAME,iBACNF,EAAMQ,kBACC+C,EAAIkP,SAASpX,GAAMgC,eAEvBxE,EAAK8W,UACL9W,EAAK+W,cACR5P,EAAME,iBACNF,EAAMQ,kBACC+C,EAAIkP,SAASpX,GAAM8B,YAEvBtE,EAAKgX,SACLhX,EAAKiX,gBACR9P,EAAME,iBACNF,EAAMQ,kBACC+C,EAAIkP,SAASpX,GAAMiC,WAEvBzE,EAAK6O,OACR1H,EAAME,iBACNF,EAAMQ,kBACN+C,EAAIgP,YACJ9K,YAAS,iCAAM3C,EAAIvB,EAAI2G,mBAARgF,EAAoB/S,MAAM,CAAEC,eAAe,kBAGvDvD,EAAKoH,IACRD,EAAME,iBACNF,EAAMQ,gCAImB,IAArBR,EAAMxH,IAAI6B,SACZkJ,EAAIoK,OAAO3N,EAAMxH,KACjB6W,EAAetX,MAAQiY,YAAW,kBAAMzM,EAAIuK,gBAAe,QA0BrBhD,qBApBzB9K,UACXA,EAAMxH,UACPK,EAAKoS,MAIRjL,EAAME,mBAc+CnH,QAAAA,MAIpD0a,GAAW7R,kBAAgB,CACpC5H,KAAM,WACNZ,MAAO,CACLc,GAAI,CAAEM,KAAM,CAACnC,OAAQwJ,gBAAkB,YACvC4I,SAAU,CAAEjQ,KAAMuH,iBAAkB,IAEtCC,eAAM5I,SAASU,IAAAA,MAAOD,IAAAA,MAChB0J,EAAM0O,GAAe,YACrB9W,0BAA6BC,IAE7B4B,EAASgH,YAAS,kBACiB,OAA9BT,EAAI+O,gBAAgBva,OACvBwL,EAAIiI,MAAMzT,MAAMwL,EAAI+O,gBAAgBva,OAAOoD,KAAOA,KAIpDuS,EAAUtO,MAA8B,CAAEqL,SAAUrR,EAAMqR,SAAUmD,UAAW,cAkB1ErH,EAAYvG,MACf5G,EAAMqR,SAAU,OAAOzK,EAAME,iBACjCqD,EAAIgP,YACJ9K,YAAS,iCAAM3C,EAAIvB,EAAI2G,mBAARiF,EAAoBhT,MAAM,CAAEC,eAAe,gBAGnDmD,OACHnG,EAAMqR,SAAU,OAAOlH,EAAIkP,SAASpX,GAAMgR,SAC9C9I,EAAIkP,SAASpX,GAAM8Q,SAAUhR,YAGtBkV,IACHjX,EAAMqR,UACNzN,EAAOjF,OACXwL,EAAIkP,SAASpX,GAAM8Q,SAAUhR,YAGtBmV,IACHlX,EAAMqR,UACLzN,EAAOjF,OACZwL,EAAIkP,SAASpX,GAAMgR,gBArCrBxH,aAAU,mBACJ+I,WAAY/R,SACb0G,eAAepH,cADFsV,EAEZD,oBAFYkD,EAECxK,cACdwH,YACe1S,IAAd4P,IAAyBF,EAAQ3V,MAAM6V,UAAYA,MAGzD/I,aAAU,kBAAMtB,EAAIoP,aAAaxX,EAAIuS,MACrC3N,eAAY,kBAAMwD,EAAIqP,eAAezX,MAErCyD,eAAY,WACN2E,EAAI6O,UAAUra,QAAU0U,GAAWtG,MAClCnJ,EAAOjF,OACZ0P,YAAS,iCAAM5L,SAAS0G,eAAepH,WAAxB0V,EAA6BC,sBAA7BD,EAA6BC,eAAiB,CAAEC,MAAO,kBA0BjE,eACCtG,EAAarR,EAAbqR,SACF1Q,EAAO,CAAEiD,OAAQA,EAAOjF,MAAO0S,SAAAA,UAc5B3R,EAAO,CACZM,WAAYA,EAdO,CACnB+B,GAAAA,EACA8K,KAAM,WACNmJ,UAAuB,IAAb3E,OAAoBzM,GAAa,mBACb,IAAbyM,QAA2BzM,EAC5CsI,QAASC,EACTyK,QAASzR,EACT0R,cAAeZ,EACfa,YAAab,EACbc,eAAgBb,EAChBc,aAAcd,IAKdvW,KAAAA,EACAF,MAAAA,EACAC,MAAAA,EACAE,KAAM,kBEldd,SAAKkY,GACHA,mBACAA,uBAFF,CAAKA,KAAAA,QAqBL,IAAIyB,GAAiBxS,OAAO,kBAC5B,SAASyS,GAAkBrO,OACrBpB,EAAU9C,SAAOsS,GAAgB,SACrB,OAAZxP,EAAkB,KAChBqB,EAAM,IAAIpN,UAAUmN,8BAAqCsO,GAAQ7Z,6BACjE5B,MAAMM,mBAAmBN,MAAMM,kBAAkB8M,EAAKoO,IACpDpO,SAEDrB,EAGT,IAAI2P,GAAsB3S,OAAO,uBAOjC,SAAS4S,YACA1S,SAAOyS,GAAqB,MAGrC,IAAIE,GAAsB7S,OAAO,uBAatB0S,GAAUjS,kBAAgB,CACnC5H,KAAM,UACNZ,MAAO,CACLc,GAAI,CAAEM,KAAM,CAACnC,OAAQwJ,gBAAkB,QAEzCG,eAAM5I,SAASU,IAAAA,MAAOD,IAAAA,MAChBiQ,+BAAwC1O,IACxC2O,8BAAsC3O,IAEtC6Y,EAAe7U,MAA8C8S,GAAcrL,QAC3EuD,EAAShL,MAAwC,MACjD+K,EAAQ/K,MAAuC,MAE/CmE,EAAM,CACR0Q,aAAAA,EACAnK,SAAAA,EACAC,QAAAA,EACAI,MAAAA,EACAC,OAAAA,EACA8J,+BACED,EAAalc,MAAQD,EAAMmc,EAAalc,cACrCma,GAAc/L,MAAO+L,GAAcrL,SACnCqL,GAAcrL,QAASqL,GAAc/L,UAG1CgO,wBACMF,EAAalc,QAAUma,GAAcrL,SACzCoN,EAAalc,MAAQma,GAAcrL,SAErCd,eAAMwE,GACJhH,EAAI4Q,mBAEA9U,EACGkL,EACDA,aAA4BhK,YAAoBgK,EAChDA,EAAiBxS,iBAAiBwI,YAAoBuE,EAAIyF,GAEvDzF,EAAIvB,EAAI6G,QAJetF,EAAIvB,EAAI6G,cAOxC/K,GAAAA,EAAgBlD,UAIpBsF,UAAQkS,GAAgBpQ,GACxB6B,EACEpB,YAAS,wBACPlM,EAAMmc,EAAalc,cAChBma,GAAc/L,MAAOnB,EAAMmB,OAC3B+L,GAAcrL,QAAS7B,EAAM6B,mBAKhCuN,EAAc,CAChBtK,SAAAA,EACAC,QAAAA,EACAhE,iBACExC,EAAI4Q,iBAIJhS,EAAe4R,KACfM,QAAkBlS,SAAAA,EAAckS,uBAUpCzV,eAAY,wBAAMyV,SAAAA,EAAkBD,MAGpC5V,EACE,SACA,qBACMyV,EAAalc,QAAUma,GAAc/L,uBAZzChE,SAAAA,EAAcmS,yCACbxP,EAAIsF,aAASpL,SAASnD,SAASoB,2BAC9B6H,EAAIqF,WAAJiE,EAAYpP,SAASnD,SAASoB,kBAY3BmN,GACAD,GAEL5G,EAAI4Q,mBAEN,GAIF3V,EAAe,aAAa,SAACwB,anB1G/B9D,EACAqY,ImB0GQjU,EAASN,EAAMM,OAEf2T,EAAalc,QAAUma,GAAc/L,iBAErCrB,EAAIsF,WAAJoK,EAAaxV,SAASsB,eACtBwE,EAAIqF,WAAJ6I,EAAYhU,SAASsB,MAEzBiD,EAAI4Q,yBnBjHRI,EmBmHoC/Y,EAAciZ,SnBnHlDF,EAAsB/Y,EAAckZ,SADpCxY,EmBoH4BoE,KnBjHZzE,SAASC,MAElBhE,EAAMyc,UACV/Y,EAAckZ,0BACNxY,EAAQyY,QAAQlZ,MAExBD,EAAciZ,0BACT1W,EAA2B7B,EAEf,OAAT6B,GAAe,IAChBA,EAAK4W,QAAQlZ,GAAoB,OAAO,EAC5CsC,EAAOA,EAAKmF,qBAGP,SmBoGLlD,EAAME,0BACN4E,EAAIsF,OAASjO,cAIV,kBAEErD,EAAO,CAAEM,MAAAA,EAAOW,KADZ,CAAE8L,KAAMoO,EAAalc,QAAUma,GAAc/L,KAAMJ,MAAOxC,EAAIwC,OAC5CjM,MAAAA,EAAOD,MAAAA,EAAOG,KAAM,gBAO5C4a,GAAgBhT,kBAAgB,CACzC5H,KAAM,gBACNZ,MAAO,CACLc,GAAI,CAAEM,KAAM,CAACnC,OAAQwJ,gBAAkB,UACvC4I,SAAU,CAAEjQ,KAAM,CAACuH,kBAAmB,IAExCjJ,sBACMyK,EAAMqQ,GAAkB,iBAExB7Z,EAAO,CAAE8L,KAAMtC,EAAI0Q,aAAalc,QAAUma,GAAc/L,MACxD9B,EAAiBH,KAAKwG,cACtB,CACEtL,IAAK,KACL5E,KAAM0J,KAAK1J,KACXmQ,UAAWzG,KAAK0G,cAChBtE,QAASpC,KAAKqC,aAEhB,CACEnH,IAAK,KACLjE,GAAIoI,EAAIuG,SACRtP,KAAM0J,KAAK1J,qBACM0J,KAAKE,OAAOqG,cACzBzM,EACAuF,EAAI0Q,aAAalc,QAAUma,GAAc/L,qBAC5BrB,EAAIvB,EAAI4G,OAAS5G,EAAIwG,aAAU/L,EAChDyM,WAAUvG,KAAKE,OAAOqG,eAAkBzM,EACxC2M,UAAWzG,KAAK0G,cAChBC,QAAS3G,KAAK4G,YACdxE,QAASpC,KAAKqC,oBAGbzN,EAAO,CACZM,WAAY8K,KAAKE,OAAWC,GAC5BtK,KAAAA,EACAF,MAAOqK,KAAKQ,OACZ5K,MAAOoK,KAAKS,OACZ3K,KAAM,mBAGVgI,eAAM5I,SAASS,IAAAA,MACT0J,EAAMqQ,GAAkB,iBAExBzR,EAAe4R,KACfc,QAAc1S,SAAAA,EAAc0S,YAE5B9J,EA3KC1J,SAAO2S,GAAqB,MA4K7BtJ,EAAiC,OAAjBK,GAAgCA,IAAiBxH,EAAIwG,QAGrE+K,EAAmB1V,MAAoB,MACvC2V,EAA2B3V,MACX,oBAAXT,OAAyB,KAAO9C,SAASoB,eAGlDuB,EACE,SACA,WACEuW,EAAyBhd,MAAQ+c,EAAiB/c,MAClD+c,EAAiB/c,MAAQ8D,SAASoB,iBAEpC,OAGE+N,EAAa5L,MAAI,aAEhBsL,GACH9L,eAAY,WACV2E,EAAI6G,OAAOrS,MAAQiT,EAAWjT,SAI3B,CACL2S,cAAAA,EACA/B,GAAIqC,EACJxQ,KAAM2O,GACJnF,YAAS,iBAAO,CAAE9J,GAAId,EAAMc,GAAIM,KAAMX,EAAMW,SAC5CwQ,GAEFJ,uBAAc5K,cACR0K,EAAe,IACbnH,EAAI0Q,aAAalc,QAAUma,GAAcrL,OAAQ,cAC7C7G,EAAMxH,UACPK,EAAKoS,WACLpS,EAAKqS,MACRlL,EAAME,iBACNF,EAAMQ,kBACN+C,EAAI4Q,wBACJrP,EAAIvB,EAAI6G,YAASjO,qBAIb6D,EAAMxH,UACPK,EAAKoS,WACLpS,EAAKqS,MACRlL,EAAME,iBACNF,EAAMQ,kBACF+C,EAAI0Q,aAAalc,QAAUma,GAAcrL,eAAQgO,GAAAA,EAActR,EAAIuG,WACvEvG,EAAI2Q,2BAGDrb,EAAK6O,UACJnE,EAAI0Q,aAAalc,QAAUma,GAAc/L,KAAM,aAAO0O,SAAAA,EAActR,EAAIuG,cACvEhF,EAAIvB,EAAI6G,QAAS,qBACjBtF,EAAIvB,EAAI6G,gBAAR6I,EAAiBjU,SAASnD,SAASoB,gBAAgB,OACxD+C,EAAME,iBACNF,EAAMQ,kBACN+C,EAAI4Q,0BAGDtb,EAAKoH,OACJsD,EAAI0Q,aAAalc,QAAUma,GAAc/L,KAAM,WAC9C5C,EAAI4G,MAAO,WACX5G,EAAI6G,OAAQ,UAGbpK,EAAMG,SAAU,aAEb4U,EAAyBhd,MAAO,mBACjC+M,EAAIvB,EAAI6G,gBAAR8I,EAAiBlU,SAAS+V,EAAyBhd,OAAQ,mBAC3D+M,EAAIvB,EAAI4G,eAAR0E,EAAgB7P,SAAS+V,EAAyBhd,OAAQ,WAG1Did,EAAoBrZ,IACpBsZ,EAAcD,EAAkBtX,QAClCqX,EAAyBhd,UAEXid,EAAkBtX,QAAQoH,EAAIvB,EAAI6G,SAClC6K,EAAa,OAE7BjV,EAAME,iBACNF,EAAMQ,kBAENnE,EAAQyI,EAAIvB,EAAI4G,OAAS9O,EAAMiC,WAE/B0C,EAAME,iBACNF,EAAMQ,kBAENnE,EAAQyI,EAAIvB,EAAI4G,OAAS9O,EAAM8B,SAOzC2N,qBAAY9K,eACN0K,IACA1K,EAAMxH,MAAQK,EAAKoS,OAIrBjL,EAAME,iBAEJqD,EAAI0Q,aAAalc,QAAUma,GAAc/L,MACxC5C,EAAI4G,OACJ5G,EAAI6G,eAGDpK,EAAMxH,UACPK,EAAKoH,QAEH8U,EAAyBhd,MAAO,mBACjC+M,EAAIvB,EAAI6G,gBAAR0E,EAAiB9P,SAAS+V,EAAyBhd,OAAQ,mBAC3D+M,EAAIvB,EAAI4G,eAAR+E,EAAgBlQ,SAAS+V,EAAyBhd,OAAQ,WAG1Did,EAAoBrZ,IACpBsZ,EAAcD,EAAkBtX,QAClCqX,EAAyBhd,UAEXid,EAAkBtX,QAAQoH,EAAIvB,EAAI6G,SAClC6K,EAAa,OAE7BjV,EAAME,iBACNF,EAAMQ,kBACNnE,EAAQyI,EAAIvB,EAAI4G,OAAS9O,EAAMiC,QAIrCiJ,+BACMnN,EAAMqR,WACNC,GACFnH,EAAI4Q,wBACJrP,EAAIvB,EAAI6G,YAASjO,UAEboH,EAAI0Q,aAAalc,QAAUma,GAAcrL,eAAQgO,GAAAA,EAActR,EAAIuG,oBACvEhF,EAAIvB,EAAI6G,YAASjO,QACjBoH,EAAI2Q,uBASHgB,GAAiBtT,kBAAgB,CAC1C5H,KAAM,iBACNZ,MAAO,CACLc,GAAI,CAAEM,KAAM,CAACnC,OAAQwJ,gBAAkB,cAC/B,CAAErH,KAAMuH,iBAAkB,GAClCzI,QAAS,CAAEkB,KAAMuH,iBAAkB,IAErCjJ,sBAGMiB,EAAO,CAAE8L,KAFH+N,GAAkB,kBAELK,aAAalc,QAAUma,GAAc/L,aAQrDrN,EAAO,CACZM,WAAY8K,KAAKE,OARE,CACnBjJ,GAAI+I,KAAK/I,GACTiE,IAAK,oBACU,EACfkH,QAASpC,KAAKqC,cAKdxM,KAAAA,EACAF,MAAOqK,KAAKQ,OACZ5K,MAAOoK,KAAKS,OACZ3L,SAAUL,EAASC,eAAiBD,EAASQ,OAC7CJ,QAASmL,KAAKnL,QACdiB,KAAM,oBAGVgI,qBACMuB,EAAMqQ,GAAkB,kBAExBhN,EAAsBzB,IACtBpM,EAAUiL,YAAS,kBACO,OAAxB4C,EACKA,EAAoB7O,QAAUiN,EAAMmB,KAGtC5C,EAAI0Q,aAAalc,QAAUma,GAAc/L,cAG3C,CACLhL,iCAAkCC,IAClCmL,uBACEhD,EAAI4Q,gBAENpb,QAAAA,MAOKoc,GAAevT,kBAAgB,CACxC5H,KAAM,eACNZ,MAAO,CACLc,GAAI,CAAEM,KAAM,CAACnC,OAAQwJ,gBAAkB,cAC/B,CAAErH,KAAMuH,iBAAkB,GAClCzI,QAAS,CAAEkB,KAAMuH,iBAAkB,GACnC5F,MAAO,CAAE3B,KAAMuH,iBAAkB,IAEnCjJ,sBACMyK,EAAMqQ,GAAkB,gBAExB7Z,EAAO,CACT8L,KAAMtC,EAAI0Q,aAAalc,QAAUma,GAAc/L,KAC/CJ,MAAOxC,EAAIwC,cASNjN,EAAO,CACZM,WAAY8K,KAAKE,OAPE,CACnBhF,IAAK,KACLjE,GAAI+I,KAAK/I,GACTwP,UAAWzG,KAAK0G,gBAKhB7Q,KAAAA,EACAF,MAAOqK,KAAKQ,OACZ5K,MAAOoK,KAAKS,OACZ3L,SAAUL,EAASC,eAAiBD,EAASQ,OAC7CJ,QAASmL,KAAKnL,QACdiB,KAAM,kBAGVgI,eAAM5I,OACE+C,EAAU/C,EAAV+C,MACFoH,EAAMqQ,GAAkB,gBAE5BnS,UAAQuS,GAAqBzQ,EAAIwG,SAEjChK,eAAY,WACVwD,EAAI4G,MAAMpS,MAAQ,QAIpB6G,eAAY,oBACLzC,GACDoH,EAAI0Q,aAAalc,QAAUma,GAAc/L,MACxC5C,EAAI4G,WAELlN,EAAgBpB,SAASoB,wBACzB6H,EAAIvB,EAAI4G,eAAR4F,EAAgB/Q,SAAS/B,KAE7BZ,EAAQyI,EAAIvB,EAAI4G,OAAS9O,EAAM8B,WAIjCqB,EAAe,WAAW,SAACwB,YACrBuD,EAAI0Q,aAAalc,QAAUma,GAAc/L,MACxCrB,EAAIvB,EAAI4G,QAETnK,EAAMxH,MAAQK,EAAKoH,KAClBpE,SAASoB,yBACT6H,EAAIvB,EAAI4G,eAARiG,EAAgBpR,SAASnD,SAASoB,iBAMvC+C,EAAME,uBAEFkV,EAAS/Y,EAAQyI,EAAIvB,EAAI4G,OAASnK,EAAMG,SAAW9E,EAAMgC,SAAWhC,EAAM+B,SAE1EgY,IAAW9Z,EAAY6C,0BAClB2G,EAAIvB,EAAI6G,gBAARiL,EAAiBlZ,QACnB,GAAIiZ,IAAW9Z,EAAY8C,SAAU,KACrC0G,EAAIvB,EAAI6G,QAAS,WAElB9N,EAAWX,IACX2Z,EAAYhZ,EAASoB,QAAQoH,EAAIvB,EAAI6G,SAWrC/N,EATeC,EAChByH,OAAOuR,EAAY,GACnBC,QAAO,SAAArZ,0BAAY4I,EAAIvB,EAAI4G,eAARqL,EAAgBxW,SAAS9C,OAOrBb,EAAM8B,SAAW7B,EAAYlD,OACrDiE,EAAQR,SAASC,KAAMT,EAAM8B,YAMnCqB,EACE,SACA,iBACOrC,GACDoH,EAAI0Q,aAAalc,QAAUma,GAAc/L,MACxCrB,EAAIvB,EAAI4G,mBACTrF,EAAIvB,EAAI4G,eAARsL,EAAgBzW,SAASnD,SAASoB,iBACtCsG,EAAI4Q,mBAEN,OAGEvN,EAAsBzB,IACtBpM,EAAUiL,YAAS,kBACO,OAAxB4C,EACKA,EAAoB7O,QAAUiN,EAAMmB,KAGtC5C,EAAI0Q,aAAalc,QAAUma,GAAc/L,cAG3C,CACLhL,GAAIoI,EAAIwG,QACRpB,GAAIpF,EAAI4G,MACRS,uBAAc5K,kBACJA,EAAMxH,UACPK,EAAK6O,UACJnE,EAAI0Q,aAAalc,QAAUma,GAAc/L,KAAM,WAC9CrB,EAAIvB,EAAI4G,OAAQ,qBAChBrF,EAAIvB,EAAI4G,eAARuL,EAAgB1W,SAASnD,SAASoB,gBAAgB,OACvD+C,EAAME,iBACNF,EAAMQ,kBACN+C,EAAI4Q,wBACJrP,EAAIvB,EAAI6G,YAASjO,UAIvBpD,QAAAA,MAOK4c,GAAe/T,kBAAgB,CACxC5H,KAAM,eACNZ,MAAO,CACLc,GAAI,CAAEM,KAAM,CAACnC,OAAQwJ,gBAAkB,QAEzC/I,yBAGSA,EAAO,CACZM,WAAY8K,KAAKE,OAHE,CAAEhF,IAAK,OAI1BrF,KAAM,GACNF,MAAOqK,KAAKQ,OACZ5K,MAAOoK,KAAKS,OACZ3K,KAAM,kBAGVgI,qBACM4T,EAAWxW,MAAwB,MACnCyW,EAAWzW,MAA0B,aAEhC0W,EAAkB1B,OACrBtQ,EAAM+R,EAAS9d,MAAM2F,QAAQ0W,IACpB,IAATtQ,GAAY+R,EAAS9d,MAAMgM,OAAOD,EAAK,UA8B7CrC,UAAQqS,GAAqB,CAC3BO,yBA5BuBD,UACvByB,EAAS9d,MAAM8L,KAAKuQ,GACb,WACL0B,EAAkB1B,KA0BpB0B,kBAAAA,EACAxB,2CAtBIpY,EAAUL,SAASoB,gCAEnB6H,EAAI8Q,WAAJG,EAAe/W,SAAS9C,KAGrB2Z,EAAS9d,MAAMie,MAAK,SAAAC,2BAEvBpa,SAAS0G,eAAe0T,EAAInM,oBAAW9K,SAAS9C,eAChDL,SAAS0G,eAAe0T,EAAIlM,iBAA5B0G,EAAsCzR,SAAS9C,QAenD2Y,qBAVmB/K,iBACC+L,EAAS9d,sBAAO,KAA3Bme,UACHA,EAAQpM,WAAaA,GAAUoM,EAAQnQ,YAWxC,CAAE4C,GAAIiN,MCnnBbO,GAAehV,OAAO,gBAO1B,SAASiV,SACHjS,EAAU9C,SAAO8U,GAAc,SACnB,OAAZhS,EAAkB,KAChBqB,EAAM,IAAIpN,MAAM,wEAChBA,MAAMM,mBAAmBN,MAAMM,kBAAkB8M,EAAK4Q,IACpD5Q,SAEDrB,WAGOkS,uBAQZ,SAPFtc,KAAAA,aAAO,SACPC,KAAAA,aAAO,cACPZ,MAAAA,aAAQ,KAMJkd,EAAWlX,MAAc,WAW7BqC,UAAQ0U,GAAc,CAAEvS,kBAVN7L,UAChBue,EAASve,MAAM8L,KAAK9L,GAEb,eACD+L,EAAMwS,EAASve,MAAM2F,QAAQ3F,IACpB,IAAT+L,GACJwS,EAASve,MAAMgM,OAAOD,EAAK,KAIG/J,KAAAA,EAAMC,KAAAA,EAAMZ,MAAAA,IAGvC4K,YAAS,kBAAOsS,EAASve,MAAMsC,OAAS,EAAIic,EAASve,MAAMU,KAAK,UAAOuF,KAKzE,IAAIuY,GAAQ3U,kBAAgB,CACjC5H,KAAM,QACNZ,MAAO,CACLc,GAAI,CAAEM,KAAM,CAACnC,OAAQwJ,gBAAkB,SACvC2U,QAAS,CAAEhc,KAAM,CAACuH,kBAAmB,IAEvCjJ,wBACkDoL,KAAKC,YAA/CnK,KAAAA,aAAO,cAASD,KAAAA,aAAO,SAAIX,MAAAA,aAAQ,OACF8K,KAAKE,OAAtCoS,IAAAA,QAAYrc,mBACdkK,OACChM,OAAOiM,QAAQlL,GAAOmL,QACvB,SAACC,kBAAsBnM,OAAO6C,OAAOsJ,gBAAcC,oBACnD,KAEFtJ,GAAI+I,KAAK/I,KAEPsb,OAAgBtc,EAAqBkK,UAIrCmS,UAAgBC,EAAQ,QAErB3d,EAAO,CACZM,MAAOqd,EACP1c,KAAAA,EACAF,MAAOqK,KAAKQ,OACZ5K,MAAOoK,KAAKS,OACZ3K,KAAAA,KAGJgI,qBACMmC,EAAUiS,KACVjb,sBAAyBC,WAE7ByJ,aAAU,kBAAM9E,cAAYoE,EAAQP,SAASzI,OAEtC,CAAEA,GAAAA,EAAIgJ,QAAAA,MCzDbuS,GAAoBvV,OAAO,qBAE/B,SAASwV,GAAqBpR,OACxBpB,EAAU9C,SAAOqV,GAAmB,SAExB,OAAZvS,EAAkB,KAChBqB,EAAM,IAAIpN,UAAUmN,6DACpBnN,MAAMM,mBAAmBN,MAAMM,kBAAkB8M,EAAKmR,IACpDnR,SAGDrB,MAwKJyS,GAnKMC,GAAajV,kBAAgB,CACtC5H,KAAM,aACN8L,MAAO,qBAAuB,SAAC6G,UAAgB,IAC/CvT,MAAO,CACLc,GAAI,CAAEM,KAAM,CAACnC,OAAQwJ,gBAAkB,OACvC4I,SAAU,CAAEjQ,KAAM,CAACuH,kBAAmB,GACtC8K,WAAY,CAAErS,KAAM,CAACnC,OAAQwJ,OAAQiL,OAAQ/K,WAE/CjJ,yBAYSA,EAAO,CACZM,aAZkD8K,KAAKE,kCAEpC,CACnBhF,IAAK,KACLjE,GAAI+I,KAAK/I,GACT8K,KAAM,+BACa/B,KAAK4S,8BACJ5S,KAAKmC,YACzBsE,UAAWzG,KAAK0G,gBAKhB7Q,KAAM,GACNF,MAAOqK,KAAKQ,OACZ5K,MAAOoK,KAAKS,OACZ3K,KAAM,gBAGVgI,eAAM5I,SAASuN,IAAAA,KACToQ,EAAgB3X,MAAwB,MACxCV,EAAUU,MAAyC,IACnD0X,EAAaT,GAAU,CAAErc,KAAM,oBAC/BqM,EAAc3C,EAAgB,CAAE1J,KAAM,0BAEtCjC,EAAQiM,YAAS,kBAAM5K,EAAMyT,cAE7BtJ,EAAM,CACR7E,QAAAA,EACA3G,MAAAA,EACA0S,SAAUzG,YAAS,kBAAM5K,EAAMqR,YAC/BuM,YAAahT,YAAS,kBACpBtF,EAAQ3G,MAAMkf,MAAK,SAAAxJ,UACbA,EAAOyJ,SAASzM,eAIxB0M,sBAAuBnT,YAAS,kBAC9BtF,EAAQ3G,MAAMie,MAAK,SAAAvI,UAAU0C,QAAM1C,EAAOyJ,SAASnf,SAAWoY,QAAM/W,EAAMyT,kBAE5EuK,gBAAOC,YACDje,EAAMqR,SAAU,OAAO,KACvB1S,EAAMA,QAAUsf,EAAW,OAAO,MAClCC,WAAa5Y,EAAQ3G,MAAMkf,MAC7B,SAAAxJ,UAAU0C,QAAM1C,EAAOyJ,SAASnf,SAAWoY,QAAMkH,cADlCE,EAEdL,uBACCI,SAAAA,EAAY7M,YAChB9D,EAAK,oBAAqB0Q,IACnB,IAETtJ,wBAAezC,SACTkM,EAAW5c,MAAMmB,cACnBgb,EAAchf,cAAd0f,EAAqBzb,iBAAiB,0CACtCuI,QACA,SAACvM,EAAQkE,EAASwb,gBAAUrf,OAAO6C,OAAOlD,UAAWkE,EAAQf,IAAKuc,QAClE,IAGFhZ,EAAQ3G,MAAM8L,KAAKyH,GACnB5M,EAAQ3G,MAAMyE,MAAK,SAACC,EAAGkb,UAAMH,EAAS/a,EAAEtB,IAAMqc,EAASG,EAAExc,QAE3D6S,0BAAiB7S,OACX2I,EAAMpF,EAAQ3G,MAAM+T,WAAU,SAAA8L,UAASA,EAAMzc,KAAOA,MAC3C,IAAT2I,GACJpF,EAAQ3G,MAAMgM,OAAOD,EAAK,YAK9BrC,UAAQiV,GAAmBnT,GAE3B8N,GAAc,CACZzV,UAAWoI,YAAS,kBAAMc,EAAIiS,MAC9BzF,gBAAOG,SAC6B,UAA9BA,EAAKrK,aAAa,QAA4BwK,WAAWyB,cACzD5B,EAAKpT,aAAa,QAAgBuT,WAAW0B,YAC1C1B,WAAW2B,eAEpBhC,cAAKE,GACHA,EAAKnT,aAAa,OAAQ,WA+DvB,CACLnD,4BAHgCC,IAIhC0b,WAAAA,EACAzQ,YAAAA,EACAsC,GAAIoO,EACJnM,uBAhEqB5K,MAChB+W,EAAchf,OACdgf,EAAchf,MAAMiH,SAASgB,EAAMM,aAEpC4L,EAAMxN,EAAQ3G,MACfwd,QAAO,SAAA9H,UAAuC,IAA7BA,EAAOyJ,SAASzM,YACjClS,KAAI,SAAAqf,UAASA,EAAM1b,kBAEd8D,EAAMxH,UACPK,EAAK6W,eACL7W,EAAK8V,WAEN3O,EAAME,iBACNF,EAAMQ,kBAEOnE,EAAQ6P,EAAK7Q,EAAMgC,SAAWhC,EAAM6C,cAElC5C,EAAYiD,QAAS,KAC9BsZ,EAAenZ,EAAQ3G,MAAMkf,MAC/B,SAAAxJ,UAAUA,EAAOvR,UAAYL,SAASoB,iBAEpC4a,GAActU,EAAI6T,OAAOS,EAAaX,SAASnf,kBAKpDc,EAAK4W,gBACL5W,EAAK6V,aAEN1O,EAAME,iBACNF,EAAMQ,kBAEOnE,EAAQ6P,EAAK7Q,EAAM+B,KAAO/B,EAAM6C,cAE9B5C,EAAYiD,QAAS,KAC9BsZ,EAAenZ,EAAQ3G,MAAMkf,MAC/B,SAAAxJ,UAAUA,EAAOvR,UAAYL,SAASoB,iBAEpC4a,GAActU,EAAI6T,OAAOS,EAAaX,SAASnf,kBAKpDc,EAAKoS,MAENjL,EAAME,iBACNF,EAAMQ,sBAEFqX,EAAenZ,EAAQ3G,MAAMkf,MAC/B,SAAAxJ,UAAUA,EAAOvR,UAAYL,SAASoB,iBAEpC4a,GAActU,EAAI6T,OAAOS,EAAaX,SAASnf,eAoB/D,SAAK6e,GACHA,qBACAA,uBAFF,CAAKA,KAAAA,YAKMkB,GAAmBlW,kBAAgB,CAC5C5H,KAAM,mBACNZ,MAAO,CACLc,GAAI,CAAEM,KAAM,CAACnC,OAAQwJ,gBAAkB,OACvC9J,MAAO,CAAEyC,KAAM,CAACnC,OAAQwJ,OAAQiL,OAAQ/K,UACxC0I,SAAU,CAAEjQ,KAAMuH,iBAAkB,IAEtCjJ,sBACQf,IAAyCmM,KAAKE,6BAEhDrK,EAAO,CACTge,QAAS7T,KAAK6T,QACdtN,SAAUvG,KAAKuG,SACfzN,OAAQ+E,QAAQmC,KAAK8T,MAAQpB,GAAYqB,gBAiBpCnf,EAAO,CACZM,WAAYe,EAfO,CACnBgB,GAAI+I,KAAK/I,GACTiE,IAAK,KACL6G,KAAM,uBACU/B,KAAK6T,QAAU,OAAS,0BACrB7T,KAAK4S,8BACJ5S,KAAKmC,8BACRnC,KAAKuG,eAAkBzM,EACxCoR,SAAUlL,KAAKkL,SACf9I,QAASpC,KAAKuG,cAAWzM,EAAYkG,KAAKqC,YAC1CyK,QAAS9M,KAAKuG,cAAWzM,EAAYkG,KAAK3E,YAC1C2Y,OAAQhU,KAAKuG,cAAWzM,EAAYkG,KAAKiU,aAKzCpe,KAAAA,EACAF,MAAOqK,KAAKQ,OACZ5K,MAAOoK,KAAKS,OACZ3K,KAAM,sBAGVgI,eAAM5I,OACAmK,EAAMoT,GAAqB,oBAC3Bxb,kCAAqCC,IACrC0b,EAAaT,GAAU,CAAErc,KAAM,oBAC/BqM,EAAc3C,EAAgB,CAAE1J,KAAM,0BAEtCoe,EAAYhZ,MAAwB,MACpC8X,EAAWlT,YAAS,iBAAO,CAAEjM,MAAOqB,EAAMrB,MAAO0S,SAAUrR,EAAMqR,aACjEuN,EAAQ5Y,MAAIwX,GAAYyB,OAE5BxT,aAAU,kBAAMtB,EAAIwK,eAAe,CAAE5S,GAAAA,EAAIe,QAASkc,EAAWlB,SAAAA,OAC7DnX,eAAY,kBAAMwD,EAAIyK,iBAAiB7S,UAEnCmd,EAAgBtU,YAAS,iCAAMT,EAAIyT,YAAYjf,gBAAOoD,MAAOA,KAC7DsP,EAAWzG,YAAS,kBAAMT,EAAIkH,SAAS1S,OAASqB,EAAMqR,YACtDsN,EAAU/T,YAAS,kBAAMmM,QAAM5M,EAAIxL,MAAMA,SAAWoY,QAAM/W,EAAMrB,gBAE7D,CACLoD,GAAAA,EACAwN,GAAIyP,EACJtB,WAAAA,EACAzQ,YAAAA,EACA2R,MAAAA,EACAvN,SAAAA,EACAsN,QAAAA,EACA3I,SAAUpL,YAAS,kBACbyG,EAAS1S,OAAe,EACxBggB,EAAQhgB,QACPwL,EAAI4T,sBAAsBpf,OAASugB,EAAcvgB,MAD5B,GAElB,KAEVwO,6BACOhD,EAAI6T,OAAOhe,EAAMrB,SAEtBigB,EAAMjgB,OAAS6e,GAAYqB,gBAC3BG,EAAUrgB,UAAOoE,UAEnBoD,uBACEyY,EAAMjgB,OAAS6e,GAAYqB,QAE7BE,sBACEH,EAAMjgB,QAAU6e,GAAYqB,YAQzBM,GAAkBhC,GAClBiC,GAAwBvU,EClS/BwU,GAAetX,OAAO,gBAIfuX,GAAc9W,kBAAgB,CACvC5H,KAAM,cACNZ,MAAO,CACLc,GAAI,CAAEM,KAAM,CAACnC,OAAQwJ,gBAAkB,aAEzCG,eAAM5I,SAASU,IAAAA,MAAOD,IAAAA,MAChB8e,EAAYvZ,MAA2C,MACvD0X,EAAaT,GAAU,CACzBrc,KAAM,cACNZ,MAAO,CACLkN,mBACOqS,EAAU5gB,QACf4gB,EAAU5gB,MAAMyb,QAChBmF,EAAU5gB,MAAMoE,MAAM,CAAEC,eAAe,SAIzCiK,EAAc3C,EAAgB,CAAE1J,KAAM,6BAI1CyH,UAAQgX,GAFE,CAAEE,UAAAA,EAAW7B,WAAAA,EAAYzQ,YAAAA,IAI5B,kBAAMvN,EAAO,CAAEM,MAAAA,EAAOW,KAAM,GAAID,MAAAA,EAAOD,MAAAA,EAAOG,KAAM,oBAMpD4e,GAAShX,kBAAgB,CAClC5H,KAAM,SACN8L,MAAO,qBAAuB,SAAC6G,UAAoB,IACnDvT,MAAO,CACLc,GAAI,CAAEM,KAAM,CAACnC,OAAQwJ,gBAAkB,UACvCgL,WAAY,CAAErS,KAAMuH,iBAAkB,IAExCjJ,sBACMiB,EAAO,CAAEge,QAAS7T,KAAKE,OAAOyI,mBAe3B/T,EAAO,CACZM,WAAY8K,KAAKE,OAfE,CACnBjJ,GAAI+I,KAAK/I,GACTiE,IAAK,KACL6G,KAAM,SACNzL,KAAM0J,KAAK1J,KACX4U,SAAU,iBACMlL,KAAKE,OAAOyI,6BACT3I,KAAK4S,8BACJ5S,KAAKmC,YACzBC,QAASpC,KAAKqC,YACdsE,QAAS3G,KAAK4G,YACd+N,WAAY3U,KAAK4U,iBAKjB/e,KAAAA,EACAF,MAAOqK,KAAKQ,OACZ5K,MAAOoK,KAAKS,OACZ3K,KAAM,YAGVgI,eAAM5I,SAASuN,IAAAA,KAAM9M,IAAAA,MACf0J,EAAMlC,SAAOoX,GAAc,MAC3Btd,uBAA0BC,aAErB2d,IACPpS,EAAK,qBAAsBvN,EAAMyT,gBAG/BmM,EAAoB5Z,MAAI,MACxBuZ,EAAoB,OAARpV,EAAeyV,EAAoBzV,EAAIoV,gBAEhD,CACLxd,GAAAA,EACAwN,GAAIgQ,EACJne,KAAM2O,GACJnF,YAAS,iBAAO,CAAE9J,GAAId,EAAMc,GAAIM,KAAMX,EAAMW,SAC5Cme,GAEF7B,iBAAYvT,SAAAA,EAAKuT,WACjBzQ,kBAAa9C,SAAAA,EAAK8C,YAClBE,qBAAYvG,GACVA,EAAME,iBACN6Y,KAEFjO,qBAAY9K,GACNA,EAAMxH,MAAQK,EAAKoH,KAAKD,EAAME,iBAC9BF,EAAMxH,MAAQK,EAAKoS,OAAO8N,KAGhCD,wBAAe9Y,GACbA,EAAME,sBAQH+Y,GAAc1C,GACd2C,GAAoBjV,EC3F3BkV,GAAchY,OAAO,eAEzB,SAASiY,GAAe7T,OAClBpB,EAAU9C,SAAO8X,GAAa,SAElB,OAAZhV,EAAkB,KAChBqB,EAAM,IAAIpN,UAAUmN,2DACpBnN,MAAMM,mBAAmBN,MAAMM,kBAAkB8M,EAAK4T,IACpD5T,SAGDrB,MCtCGkV,GD2CDC,GAAW1X,kBAAgB,CACpC5H,KAAM,WACN8L,MAAO,CACLsR,OAAQ,SAACmC,UAAmB,IAE9BngB,MAAO,CACLc,GAAI,CAAEM,KAAM,CAACnC,OAAQwJ,gBAAkB,YACvC2X,cAAe,CAAEhf,KAAM,CAACsS,gBAAkB,MAC1C2M,aAAc,CAAEjf,KAAM,CAACsS,gBAAkB,GACzC0C,SAAU,CAAEhV,KAAM,CAACuH,kBAAmB,GACtC2X,OAAQ,CAAElf,KAAM,CAACuH,kBAAmB,IAEtCC,eAAM5I,SAASU,IAAAA,MAAOD,IAAAA,MAAO8M,IAAAA,KACvB6S,EAAgBpa,MAA+C,MAC/Dua,EAAOva,MAAsC,IAC7Cwa,EAASxa,MAAwC,IAEjDmE,EAAM,CACRiW,cAAAA,EACApM,YAAapJ,YAAS,kBAAO5K,EAAMoW,SAAW,WAAa,gBAC3DqK,WAAY7V,YAAS,kBAAO5K,EAAMsgB,OAAS,SAAW,UACtDC,KAAAA,EACAC,OAAAA,EACAE,0BAAiBpC,GACX8B,EAAczhB,QAAU2f,IAC5B8B,EAAczhB,MAAQ2f,EACtB/Q,EAAK,SAAU+Q,KAEjBqC,qBAAYC,GACLL,EAAK5hB,MAAMkiB,SAASD,IAAML,EAAK5hB,MAAM8L,KAAKmW,IAEjDE,uBAAcF,OACRlW,EAAM6V,EAAK5hB,MAAM2F,QAAQsc,IAChB,IAATlW,GAAY6V,EAAK5hB,MAAMgM,OAAOD,EAAK,IAEzCqW,uBAAchQ,GACPyP,EAAO7hB,MAAMkiB,SAAS9P,IAAQyP,EAAO7hB,MAAM8L,KAAKsG,IAEvDiQ,yBAAgBjQ,OACVrG,EAAM8V,EAAO7hB,MAAM2F,QAAQyM,IAClB,IAATrG,GAAY8V,EAAO7hB,MAAMgM,OAAOD,EAAK,YAI7CrC,UAAQ0X,GAAa5V,GAErB3E,eAAY,sBACN2E,EAAIoW,KAAK5hB,MAAMsC,QAAU,GACD,OAAxBjB,EAAMogB,eAAkD,OAAxBA,EAAczhB,YAE9C4hB,EAAOpW,EAAIoW,KAAK5hB,MAAMQ,KAAI,SAAAyhB,UAAOlV,EAAIkV,MAAMzE,OAAOxT,SAClDsY,EAAgBV,EAAKpE,QAAO,SAAAyE,UAAQA,EAAI3b,aAAa,eAErDic,WAAalhB,EAAMogB,iBAAiBpgB,EAAMqgB,gBAG1Ca,EAAa,EACfd,EAAczhB,MAAQ4hB,EAAKjc,QAAQ2c,EAAc,SAI9C,GAAIC,EAAa/W,EAAIoW,KAAK5hB,MAAMsC,OACnCmf,EAAczhB,MAAQ4hB,EAAKjc,QAAQ2c,EAAcA,EAAchgB,OAAS,QAIrE,KACCkgB,EAASZ,EAAKpd,MAAM,EAAG+d,GACvBE,EAAQb,EAAKpd,MAAM+d,GAEnBvc,EAAO,UAAIyc,EAAUD,GAAQtD,MAAK,SAAA+C,UAAOK,EAAcJ,SAASD,UAC/Djc,EAAM,OAEXyb,EAAczhB,MAAQ4hB,EAAKjc,QAAQK,QAIhC,eACDhE,EAAO,CAAEyf,cAAeA,EAAczhB,cAEnCe,EAAO,CACZM,MAAOa,EAAKb,EAAO,CAAC,gBAAiB,eAAgB,SAAU,WAAY,aAC3EW,KAAAA,EACAD,MAAAA,EACAD,MAAAA,EACAG,KAAM,iBAQHygB,GAAU7Y,kBAAgB,CACnC5H,KAAM,UACNZ,MAAO,CACLc,GAAI,CAAEM,KAAM,CAACnC,OAAQwJ,gBAAkB,QAEzCG,eAAM5I,SAASS,IAAAA,MAAOC,IAAAA,MAChByJ,EAAM6V,GAAe,kBAElB,eACDrf,EAAO,CAAEyf,cAAejW,EAAIiW,cAAczhB,cAQvCe,EAAO,CACZM,WAHqBA,EAJF,CACnB6M,KAAM,6BACc1C,EAAI6J,YAAYrV,QAMpCgC,KAAAA,EACAF,MAAAA,EACAC,MAAAA,EACAE,KAAM,gBAQHiG,GAAM2B,kBAAgB,CAC/B5H,KAAM,MACNZ,MAAO,CACLc,GAAI,CAAEM,KAAM,CAACnC,OAAQwJ,gBAAkB,UACvC4I,SAAU,CAAEjQ,KAAM,CAACuH,kBAAmB,IAExCjJ,0BACMyK,EAAM6V,GAAe,OAErBrf,EAAO,CAAEmW,SAAUhM,KAAKgM,UACxB7L,EAAiB,CACnBjF,IAAK,KACLuL,UAAWzG,KAAK0G,cAChBoG,QAAkC,WAAzBzN,EAAIsW,WAAW9hB,MAAqBmM,KAAK3E,YAAc2E,KAAKwW,gBACrEpU,QAASpC,KAAKwW,gBACdvf,GAAI+I,KAAK/I,GACT8K,KAAM,MACNzL,KAAM0J,KAAK1J,8BACM+I,EAAIqW,OAAO7hB,MAAMmM,KAAKyW,oBAAtBC,EAAgC7iB,cAAhC8iB,EAAuC1f,mBACvC+I,KAAKgM,SACtBd,SAAUlL,KAAKgM,SAAW,GAAK,EAC/BzF,WAAUvG,KAAKE,OAAOqG,eAAkBzM,UAGnClF,EAAO,CACZM,WAAY8K,KAAKE,OAAWC,GAC5BtK,KAAAA,EACAF,MAAOqK,KAAKQ,OACZ5K,MAAOoK,KAAKS,OACZ3K,KAAM,SAGVgI,eAAM5I,SAASS,IAAAA,MACT0J,EAAM6V,GAAe,OACrBje,yBAA4BC,IAE5B0f,EAAS1b,QAEbyF,aAAU,kBAAMtB,EAAIwW,YAAYe,MAChC/a,eAAY,kBAAMwD,EAAI2W,cAAcY,UAEhCH,EAAU3W,YAAS,kBAAMT,EAAIoW,KAAK5hB,MAAM2F,QAAQod,MAChD5K,EAAWlM,YAAS,kBAAM2W,EAAQ5iB,QAAUwL,EAAIiW,cAAczhB,eAsD3D,CACL4Q,GAAImS,EACJ3f,GAAAA,EACA+U,SAAAA,EACAyK,QAAAA,EACAngB,KAAM2O,GACJnF,YAAS,iBAAO,CAAE9J,GAAId,EAAMc,GAAIM,KAAMX,EAAMW,SAC5CsgB,GAEFlQ,uBA7DqB5K,OACjB+a,EAAOxX,EAAIoW,KAAK5hB,MAAMQ,KAAI,SAAAyhB,UAAOlV,EAAIkV,MAAMzE,OAAOxT,YAElD/B,EAAMxH,MAAQK,EAAKoS,OAASjL,EAAMxH,MAAQK,EAAKqS,aACjDlL,EAAME,iBACNF,EAAMQ,uBAEN+C,EAAIuW,iBAAiBa,EAAQ5iB,cAIvBiI,EAAMxH,UACPK,EAAK8W,UACL9W,EAAK+W,cACR5P,EAAME,iBACNF,EAAMQ,kBAECnE,EAAQ0e,EAAM1f,EAAM8B,YAExBtE,EAAKgX,SACLhX,EAAKiX,gBACR9P,EAAME,iBACNF,EAAMQ,kBAECnE,EAAQ0e,EAAM1f,EAAMiC,aAGxBxF,EAAMyL,EAAI6J,YAAYrV,MAAO,CAClCyX,2BACMxP,EAAMxH,MAAQK,EAAK8V,QAAgBtS,EAAQ0e,EAAM1f,EAAMgC,SAAWhC,EAAM6C,YACxE8B,EAAMxH,MAAQK,EAAK6V,UAAkBrS,EAAQ0e,EAAM1f,EAAM+B,KAAO/B,EAAM6C,oBAG5E0O,6BACM5M,EAAMxH,MAAQK,EAAK6W,UAAkBrT,EAAQ0e,EAAM1f,EAAMgC,SAAWhC,EAAM6C,YAC1E8B,EAAMxH,MAAQK,EAAK4W,WAAmBpT,EAAQ0e,EAAM1f,EAAM+B,KAAO/B,EAAM6C,uBA2B/EqB,sCApBAuF,EAAIgW,OAAS3e,SAqBbue,iCAjBIthB,EAAMqR,oBAEV3F,EAAIgW,OAAS3e,QACboH,EAAIuW,iBAAiBa,EAAQ5iB,aAqBxBijB,GAAYpZ,kBAAgB,CACrC5H,KAAM,YACNZ,MAAO,CACLc,GAAI,CAAEM,KAAM,CAACnC,OAAQwJ,gBAAkB,QAEzCG,eAAM5I,SAASU,IAAAA,MAAOD,IAAAA,MAChB0J,EAAM6V,GAAe,oBAElB,kBAGEtgB,EAAO,CACZM,MAAAA,EACAW,KAJS,CAAEyf,cAAejW,EAAIiW,cAAczhB,OAK5C8B,MAAAA,EACAC,MAAAA,EACAE,KAAM,kBAMHihB,GAAWrZ,kBAAgB,CACpC5H,KAAM,WACNZ,MAAO,CACLc,GAAI,CAAEM,KAAM,CAACnC,OAAQwJ,gBAAkB,cAC/B,CAAErH,KAAMuH,iBAAkB,GAClCzI,QAAS,CAAEkB,KAAMuH,iBAAkB,IAErCjJ,0BACMyK,EAAM6V,GAAe,YAErBrf,EAAO,CAAEmW,SAAUhM,KAAKgM,UACxB7L,EAAiB,CACnBjF,IAAK,KACLjE,GAAI+I,KAAK/I,GACT8K,KAAM,sCACa1C,EAAIoW,KAAK5hB,MAAMmM,KAAKyW,oBAApBO,EAA8BnjB,cAA9BojB,EAAqChgB,GACxDiU,SAAUlL,KAAKgM,SAAW,GAAK,UAG1BpX,EAAO,CACZM,WAAY8K,KAAKE,OAAWC,GAC5BtK,KAAAA,EACAF,MAAOqK,KAAKQ,OACZ5K,MAAOoK,KAAKS,OACZ3L,SAAUL,EAASQ,OAASR,EAASC,eACrCG,QAASmL,KAAKgM,SACdlW,KAAM,cAGVgI,qBACMuB,EAAM6V,GAAe,YACrBje,2BAA8BC,IAE9B6O,EAAW7K,QAEfyF,aAAU,kBAAMtB,EAAI4W,cAAclQ,MAClClK,eAAY,kBAAMwD,EAAI6W,gBAAgBnQ,UAElC0Q,EAAU3W,YAAS,kBAAMT,EAAIqW,OAAO7hB,MAAM2F,QAAQuM,MAClDiG,EAAWlM,YAAS,kBAAM2W,EAAQ5iB,QAAUwL,EAAIiW,cAAczhB,eAE3D,CAAEoD,GAAAA,EAAIwN,GAAIsB,EAAUiG,SAAAA,EAAUyK,QAAAA,eElWzBS,SACVA,EAA0B,GAE1B7X,EAAM,CACRwL,mJACMsM,EAAMtM,8CACVxL,EAAIyD,KAAI,kBAAMsU,qBAAqBD,SAGrCE,gDAAarjB,2BAAAA,kBACXqL,EAAIwL,uBAAsB,WACxBxL,EAAIwL,4BAAJxL,EAA6BrL,OAIjC8X,wIACMwL,EAAQxL,mCACZzM,EAAIyD,KAAI,kBAAMsI,aAAakM,SAG7BxU,aAAI4H,GACFwM,EAAYvX,KAAK+K,IAGnB6M,iCACsBL,EAAYrX,OAAO,oBACrC0X,sBAKClY,ED5BT,SAASmY,GAAWjK,gCAAsBkK,mCAAAA,oBACxClK,GAAQkK,EAAQthB,OAAS,MAAKoX,EAAKmK,WAAU5U,YAAO2U,GAGtD,SAASE,GAAcpK,gCAAsBkK,mCAAAA,oBAC3ClK,GAAQkK,EAAQthB,OAAS,MAAKoX,EAAKmK,WAAUE,eAAUH,YA+CzCI,GACdtK,EACAuK,EACAjgB,EACAsH,EACA4Y,EACAC,OE7DsBtN,EAClBoJ,EF8DAmE,EAAIf,KACJgB,OAAiBpe,IAATke,GEhEUtN,EFgEgBsN,EE/DlClE,EAAQ,CAAEqE,QAAQ,GAEf,eACDrE,EAAMqE,cACVrE,EAAMqE,QAAS,EACRzN,4BF0DqC,oBAE9CiN,iBAAcpK,UAASwK,IACvBP,iBAAWjK,UAASuK,EAASjgB,IAE7BogB,EAAEZ,WAAU,WACVM,iBAAcpK,UAAS1V,IACvB2f,iBAAWjK,UAASpO,IAEpB8Y,EAAEnV,IAzDN,SAA2ByK,EAAmByK,OACxCC,EAAIf,SAEH3J,EAAM,OAAO0K,EAAEV,cAG0Ba,iBAAiB7K,KAElC,GAFvB8K,qBAAoBC,iBAEyCjkB,KAAI,SAAAR,SAC3CA,EACvB0kB,MAAM,KAENlH,OAAOxT,SAEPxJ,KAAI,SAAAmkB,UAAMA,EAAEzC,SAAS,MAAQ0C,WAAWD,GAAqB,IAAhBC,WAAWD,MACxDlgB,MAAK,SAACC,EAAGkb,UAAMA,EAAIlb,0BAND,OADlBmgB,cAiBc,IAAfA,EACFT,EAAEnM,YAAW,kBAAMkM,EAAK7C,GAAOwD,YAAWD,QAI1CV,EAAK7C,GAAOwD,UAIdV,EAAEnV,KAAI,kBAAMkV,EAAK7C,GAAOyD,cAEjBX,EAAEV,QAsBLsB,CAAkBtL,GAAM,SAAAuL,UACtBnB,iBAAcpK,UAASpO,EAAO2Y,IAC9BN,iBAAWjK,UAASwK,IACbG,EAAMY,UASnBb,EAAEnV,KAAI,kBAAM6U,iBAAcpK,UAASuK,EAASjgB,EAASsH,EAAO4Y,OAG5DE,EAAEnV,KAAI,kBAAMoV,EAAM/C,GAAOyD,cAElBX,EAAEV,QG3DX,SAASwB,GAAatB,mBAAAA,IAAAA,EAAkB,IAC/BA,EAAQc,MAAM,KAAKlH,QAAO,SAAA2H,UAAaA,EAAUxM,OAAOrW,OAAS,MHtB1E,SAAYgf,GACVA,sBACAA,wBAFF,CAAYA,KAAAA,QG6BZ,IAEK8D,GAFDC,GAAoBjc,OAAO,sBAE/B,SAAKgc,GACHA,oBACAA,kBAFF,CAAKA,KAAAA,QAmCL,IAAIE,GAAiBlc,OAAO,kBAE5B,SAASmc,GACPrH,SAEI,aAAcA,EAAYqH,GAAYrH,EAAI7b,UACvC6b,EAAIle,MAAMwd,QAAO,qBAAGyC,QAAsBmF,GAAWI,WAASljB,OAAS,EAGhF,SAASmjB,GAAWtB,OACduB,EAAyBre,MAA+C,IAExEse,EAAUte,OAAI,YAITue,EAAWC,EAAaC,kBAAAA,IAAAA,EAAWjlB,EAAeY,YACrDsK,EAAM2Z,EAAuB1lB,MAAM+T,WAAU,qBAAG3Q,KAAgByiB,MACvD,IAAT9Z,IAEJhM,EAAM+lB,UACHjlB,EAAeW,oBACdkkB,EAAuB1lB,MAAMgM,OAAOD,EAAK,MAE1ClL,EAAeY,mBACdikB,EAAuB1lB,MAAM+L,GAAKkU,MAAQmF,GAAW3jB,aAIpD8jB,GAAYG,IAA2BC,EAAQ3lB,cAClDmkB,GAAAA,aAjBJrX,aAAU,kBAAO6Y,EAAQ3lB,OAAQ,KACjCgI,eAAY,kBAAO2d,EAAQ3lB,OAAQ,KA+B5B,CACLqC,SAAUqjB,EACV7Z,kBAbgBga,OACZ1W,EAAQuW,EAAuB1lB,MAAMkf,MAAK,qBAAG9b,KAAgByiB,YAC5D1W,EAEMA,EAAM8Q,QAAUmF,GAAWI,UACpCrW,EAAM8Q,MAAQmF,GAAWI,SAFzBE,EAAuB1lB,MAAM8L,KAAK,CAAE1I,GAAIyiB,EAAS5F,MAAOmF,GAAWI,UAK9D,kBAAMI,EAAWC,EAAShlB,EAAeW,WAMhDokB,WAAAA,GAMJ,IAAIG,GAAgCnlB,EAASC,eAElCmlB,GAAkBnc,kBAAgB,CAC3CxI,MAAO,CACLc,GAAI,CAAEM,KAAM,CAACnC,OAAQwJ,gBAAkB,OACvCmc,KAAM,CAAExjB,KAAM,CAACuH,iBAAmB,MAClCzI,QAAS,CAAEkB,KAAM,CAACuH,kBAAmB,GACrCkc,OAAQ,CAAEzjB,KAAM,CAACuH,kBAAmB,GACpCmc,MAAO,CAAE1jB,KAAM,CAACqH,gBAAkB,IAClCsc,UAAW,CAAE3jB,KAAM,CAACqH,gBAAkB,IACtCuc,QAAS,CAAE5jB,KAAM,CAACqH,gBAAkB,IACpCoa,QAAS,CAAEzhB,KAAM,CAACqH,gBAAkB,IACpCwc,MAAO,CAAE7jB,KAAM,CAACqH,gBAAkB,IAClCyc,UAAW,CAAE9jB,KAAM,CAACqH,gBAAkB,IACtC0c,QAAS,CAAE/jB,KAAM,CAACqH,gBAAkB,KAEtCiE,MAAO,CACL0Y,YAAa,kBAAM,GACnBC,WAAY,kBAAM,GAClBC,YAAa,kBAAM,GACnBC,WAAY,kBAAM,IAEpB7lB,oCACMoL,KAAK0a,aACA9jB,IACL+jB,QAEK3a,KAAKE,QACR0a,cAAe,kBAAMrY,EAAKsY,MAAM,gBAChCC,aAAc,kBAAMvY,EAAKsY,MAAM,eAC/BE,cAAe,kBAAMxY,EAAKsY,MAAM,gBAChCG,aAAc,kBAAMzY,EAAKsY,MAAM,iBAEjC7a,KAAKS,QAsBF7L,EAAO,CACZM,aANE8K,KAAKE,gGAEY,CAAEhF,IAAK,OAK1BrF,KAAM,GACND,MAAOoK,KAAKS,OACZ9K,MAAOqK,KAAKQ,OACZ1L,SAAU8kB,GACV/kB,QAASmL,KAAK8T,QAAUmF,GAAWI,QACnCvjB,KAAM,qBAGVgI,eAAM5I,SAASuN,IAAAA,QApJ4B,OAApCtF,SAAO+b,GAAmB,OjB/BN,OAApBjY,UiBqLI,CACLyZ,cAAc,OAIdhjB,EAAYwD,MAAwB,MACpC4Y,EAAQ5Y,MAAI+d,GAAWI,SACvBM,EAAW7Z,YAAS,kBAAO5K,EAAME,QAAUV,EAAeW,QAAUX,EAAeY,YA1J3F,eACM2K,EAAU9C,SAAO+b,GAAmB,SAExB,OAAZjZ,QACI,IAAI/L,MAAM,uFAGX+L,EAqJkBgb,GAAjBnB,IAAAA,KAAMC,IAAAA,SAlJhB,eACM9Z,EAAU9C,SAAOgc,GAAgB,SAErB,OAAZlZ,QACI,IAAI/L,MAAM,uFAGX+L,EA4I0Bib,GAAzBxb,IAAAA,SAAU+Z,IAAAA,WAEZ0B,EAAU,CAAEtnB,OAAO,GAEnBoD,EAAKC,IAELkkB,EAAkB,CAAEvnB,OAAO,GAE3BwnB,EAAU/B,IAAW,WAGlB8B,EAAgBvnB,QACnBigB,EAAMjgB,MAAQolB,GAAW3jB,OACzBmkB,EAAWxiB,GACXwL,EAAK,kBAIT9B,aAAU,eACJ8Y,EAAa/Z,EAASzI,GAC1B4E,cAAY4d,MAGd/e,eAAY,iBAENif,EAAS9lB,QAAUa,EAAeY,QACjC2B,IAGD6iB,GAAQhG,EAAMjgB,QAAUolB,GAAWI,QACrCvF,EAAMjgB,MAAQolB,GAAWI,QAI3BzlB,EAAMkgB,EAAMjgB,cACTolB,GAAW3jB,QAAS,kBAAMmkB,EAAWxiB,MACrCgiB,GAAWI,SAAU,kBAAM3Z,EAASzI,gBAIrCqkB,EAAevC,GAAa7jB,EAAM8kB,OAClCuB,EAAmBxC,GAAa7jB,EAAM+kB,WACtCuB,EAAiBzC,GAAa7jB,EAAMglB,SAEpCuB,EAAiB1C,GAAa7jB,EAAM6iB,SAEpC2D,EAAe3C,GAAa7jB,EAAMilB,OAClCwB,EAAmB5C,GAAa7jB,EAAMklB,WACtCwB,EAAiB7C,GAAa7jB,EAAMmlB,gBAExC1Z,aAAU,WACRjG,eAAY,cACNoZ,EAAMjgB,QAAUolB,GAAWI,QAAS,KAClCza,EAAagC,EAAIlJ,MAIAkH,aAAsBid,SAA+B,KAApBjd,EAAWsG,WAEzD,IAAIhR,MAAM,0EAuDxByM,aAAU,WACR8L,QACE,CAACqN,EAAMC,IACP,SAAC+B,EAAYC,EAAYphB,aApDFA,OAErBqhB,EAAOb,EAAQtnB,QAAUkmB,EAAOlmB,MAEhC0Z,EAAO3M,EAAIlJ,GACV6V,GAAUA,aAAgBlR,cAC3B2f,IAEJZ,EAAgBvnB,OAAQ,EAEpBimB,EAAKjmB,OAAO4O,EAAK,eAChBqX,EAAKjmB,OAAO4O,EAAK,eAEtB9H,EACEmf,EAAKjmB,MACDgkB,GACEtK,EACA+N,EACAC,EACAC,EACAC,GACA,SAAA3C,GACEsC,EAAgBvnB,OAAQ,EACpBilB,IAAW3D,GAAOwD,UAAUlW,EAAK,iBAGzCoV,GACEtK,EACAmO,EACAC,EACAC,EACAH,GACA,SAAA3C,GACEsC,EAAgBvnB,OAAQ,EAEpBilB,IAAW3D,GAAOwD,WAIjBS,GAAYiC,KACfvH,EAAMjgB,MAAQolB,GAAW3jB,OACzBmkB,EAAWxiB,GACXwL,EAAK,sBAWbwZ,CAAkBthB,GAClBwgB,EAAQtnB,OAAQ,IAElB,CAAE6Y,WAAW,OAIjBnP,UAAQ4b,GAAgBkC,GACxBna,EACEpB,YAAS,wBACPlM,EAAMkgB,EAAMjgB,cACTolB,GAAWI,SAAUvY,EAAMmB,OAC3BgX,GAAW3jB,QAASwL,EAAM6B,eAK1B,CAAE8B,GAAI/M,EAAWgjB,cAAc,EAAO5G,MAAAA,MAMtC6G,GAAiBjd,kBAAgB,CAC1CgE,cAAc,EACdxM,MAAO,CACLc,GAAI,CAAEM,KAAM,CAACnC,OAAQwJ,gBAAkB,OACvCmc,KAAM,CAAExjB,KAAM,CAACuH,iBAAmB,MAClCzI,QAAS,CAAEkB,KAAM,CAACuH,kBAAmB,GACrCkc,OAAQ,CAAEzjB,KAAM,CAACuH,kBAAmB,GACpCmc,MAAO,CAAE1jB,KAAM,CAACqH,gBAAkB,IAClCsc,UAAW,CAAE3jB,KAAM,CAACqH,gBAAkB,IACtCuc,QAAS,CAAE5jB,KAAM,CAACqH,gBAAkB,IACpCoa,QAAS,CAAEzhB,KAAM,CAACqH,gBAAkB,IACpCwc,MAAO,CAAE7jB,KAAM,CAACqH,gBAAkB,IAClCyc,UAAW,CAAE9jB,KAAM,CAACqH,gBAAkB,IACtC0c,QAAS,CAAE/jB,KAAM,CAACqH,gBAAkB,KAEtCiE,MAAO,CACL0Y,YAAa,kBAAM,GACnBC,WAAY,kBAAM,GAClBC,YAAa,kBAAM,GACnBC,WAAY,kBAAM,IAEpB7lB,+BACuDoL,KAAKE,OAApD4Z,IAAc1kB,QAAYa,mCAC5BimB,EAAc,CAAE9mB,QAAAA,UAEbR,EAAO,CACZM,WACKgnB,GACHlmB,GAAI,aAENH,KAAM,GACND,WACKoK,KAAKS,gBACC,iBAAM,CACb7J,IACEijB,MAEEe,cAAe,kBAAMuB,EAAKtB,MAAM,gBAChCC,aAAc,kBAAMqB,EAAKtB,MAAM,eAC/BE,cAAe,kBAAMoB,EAAKtB,MAAM,gBAChCG,aAAc,kBAAMmB,EAAKtB,MAAM,gBAC5BsB,EAAK3b,OACL0b,EACAjmB,GAELkmB,EAAK1b,oBAIX9K,MAAO,GACPb,SAAU8kB,GACV/kB,QAASmL,KAAK8T,QAAUmF,GAAWI,QACnCvjB,KAAM,gBAGVgI,eAAM5I,OACAwN,EAAsBzB,IAEtB6Y,EAAOha,YAAS,wBACC,OAAf5K,EAAM4kB,MAAyC,OAAxBpX,EAClB9O,EAAM8O,EAAoB7O,cAC9BiN,EAAMmB,OAAO,IACbnB,EAAM6B,SAAS,MAIbzN,EAAM4kB,QAGfpf,eAAY,eACL,EAAC,GAAM,GAAOqb,SAAS+D,EAAKjmB,aACzB,IAAIK,MAAM,oFAIhB4f,EAAQ5Y,MAAI4e,EAAKjmB,MAAQolB,GAAWI,QAAUJ,GAAW3jB,QAEzD8mB,EAAa9C,IAAW,WAC1BxF,EAAMjgB,MAAQolB,GAAW3jB,UAGvB6lB,EAAU,CAAEtnB,OAAO,GACnBwoB,EAAgB,CAClBvC,KAAAA,EACAC,OAAQja,YAAS,kBAAM5K,EAAM6kB,SAAWoB,EAAQtnB,iBAGlD8M,aAAU,WACRjG,eAAY,WACVygB,EAAQtnB,OAAQ,EAEZimB,EAAKjmB,MACPigB,EAAMjgB,MAAQolB,GAAWI,QACfD,GAAYgD,KACtBtI,EAAMjgB,MAAQolB,GAAW3jB,cAK/BiI,UAAQ4b,GAAgBiD,GACxB7e,UAAQ2b,GAAmBmD,GAEpB,CAAEvI,MAAAA,EAAOgG,KAAAA"}